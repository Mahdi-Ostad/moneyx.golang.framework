// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.2
// source: DetermineAllocatedCreditWithBankTransaction.proto

package DetermineAllocatedCreditWithBankTransaction

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	common "moneyx.golang.framework/integration/common"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RollbackDeterminedAllocatedCreditWithBankTransactionAttachmentsIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CorrelationId string                 `protobuf:"bytes,1,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RollbackDeterminedAllocatedCreditWithBankTransactionAttachmentsIntegratedCommand) Reset() {
	*x = RollbackDeterminedAllocatedCreditWithBankTransactionAttachmentsIntegratedCommand{}
	mi := &file_DetermineAllocatedCreditWithBankTransaction_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollbackDeterminedAllocatedCreditWithBankTransactionAttachmentsIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackDeterminedAllocatedCreditWithBankTransactionAttachmentsIntegratedCommand) ProtoMessage() {
}

func (x *RollbackDeterminedAllocatedCreditWithBankTransactionAttachmentsIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_DetermineAllocatedCreditWithBankTransaction_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackDeterminedAllocatedCreditWithBankTransactionAttachmentsIntegratedCommand.ProtoReflect.Descriptor instead.
func (*RollbackDeterminedAllocatedCreditWithBankTransactionAttachmentsIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_DetermineAllocatedCreditWithBankTransaction_proto_rawDescGZIP(), []int{0}
}

func (x *RollbackDeterminedAllocatedCreditWithBankTransactionAttachmentsIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *RollbackDeterminedAllocatedCreditWithBankTransactionAttachmentsIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DetermineAllocatedCreditWithBankTransactionResponseIntegratedCommand struct {
	state          protoimpl.MessageState  `protogen:"open.v1"`
	IsDone         bool                    `protobuf:"varint,1,opt,name=IsDone,proto3" json:"IsDone,omitempty"`
	OldFileIds     []string                `protobuf:"bytes,2,rep,name=OldFileIds,proto3" json:"OldFileIds,omitempty"`
	OldBankInfo    *common.BankReceiptInfo `protobuf:"bytes,3,opt,name=OldBankInfo,proto3" json:"OldBankInfo,omitempty"`
	FailureMessage *common.Failure         `protobuf:"bytes,4,opt,name=FailureMessage,proto3" json:"FailureMessage,omitempty"`
	CorrelationId  string                  `protobuf:"bytes,5,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id             string                  `protobuf:"bytes,6,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DetermineAllocatedCreditWithBankTransactionResponseIntegratedCommand) Reset() {
	*x = DetermineAllocatedCreditWithBankTransactionResponseIntegratedCommand{}
	mi := &file_DetermineAllocatedCreditWithBankTransaction_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetermineAllocatedCreditWithBankTransactionResponseIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetermineAllocatedCreditWithBankTransactionResponseIntegratedCommand) ProtoMessage() {}

func (x *DetermineAllocatedCreditWithBankTransactionResponseIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_DetermineAllocatedCreditWithBankTransaction_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetermineAllocatedCreditWithBankTransactionResponseIntegratedCommand.ProtoReflect.Descriptor instead.
func (*DetermineAllocatedCreditWithBankTransactionResponseIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_DetermineAllocatedCreditWithBankTransaction_proto_rawDescGZIP(), []int{1}
}

func (x *DetermineAllocatedCreditWithBankTransactionResponseIntegratedCommand) GetIsDone() bool {
	if x != nil {
		return x.IsDone
	}
	return false
}

func (x *DetermineAllocatedCreditWithBankTransactionResponseIntegratedCommand) GetOldFileIds() []string {
	if x != nil {
		return x.OldFileIds
	}
	return nil
}

func (x *DetermineAllocatedCreditWithBankTransactionResponseIntegratedCommand) GetOldBankInfo() *common.BankReceiptInfo {
	if x != nil {
		return x.OldBankInfo
	}
	return nil
}

func (x *DetermineAllocatedCreditWithBankTransactionResponseIntegratedCommand) GetFailureMessage() *common.Failure {
	if x != nil {
		return x.FailureMessage
	}
	return nil
}

func (x *DetermineAllocatedCreditWithBankTransactionResponseIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *DetermineAllocatedCreditWithBankTransactionResponseIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DetermineAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentResponseIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsDone        bool                   `protobuf:"varint,1,opt,name=IsDone,proto3" json:"IsDone,omitempty"`
	Failure       *common.Failure        `protobuf:"bytes,2,opt,name=Failure,proto3" json:"Failure,omitempty"`
	CorrelationId string                 `protobuf:"bytes,3,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,4,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetermineAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentResponseIntegratedCommand) Reset() {
	*x = DetermineAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentResponseIntegratedCommand{}
	mi := &file_DetermineAllocatedCreditWithBankTransaction_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetermineAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentResponseIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetermineAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentResponseIntegratedCommand) ProtoMessage() {
}

func (x *DetermineAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentResponseIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_DetermineAllocatedCreditWithBankTransaction_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetermineAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentResponseIntegratedCommand.ProtoReflect.Descriptor instead.
func (*DetermineAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentResponseIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_DetermineAllocatedCreditWithBankTransaction_proto_rawDescGZIP(), []int{2}
}

func (x *DetermineAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentResponseIntegratedCommand) GetIsDone() bool {
	if x != nil {
		return x.IsDone
	}
	return false
}

func (x *DetermineAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentResponseIntegratedCommand) GetFailure() *common.Failure {
	if x != nil {
		return x.Failure
	}
	return nil
}

func (x *DetermineAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentResponseIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *DetermineAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentResponseIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DetermineAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentIntegratedCommand struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	OldTransactionId string                 `protobuf:"bytes,1,opt,name=OldTransactionId,proto3" json:"OldTransactionId,omitempty"`
	ManagerId        string                 `protobuf:"bytes,2,opt,name=ManagerId,proto3" json:"ManagerId,omitempty"`
	CorrelationId    string                 `protobuf:"bytes,3,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id               string                 `protobuf:"bytes,4,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DetermineAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentIntegratedCommand) Reset() {
	*x = DetermineAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentIntegratedCommand{}
	mi := &file_DetermineAllocatedCreditWithBankTransaction_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetermineAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetermineAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentIntegratedCommand) ProtoMessage() {
}

func (x *DetermineAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_DetermineAllocatedCreditWithBankTransaction_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetermineAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentIntegratedCommand.ProtoReflect.Descriptor instead.
func (*DetermineAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_DetermineAllocatedCreditWithBankTransaction_proto_rawDescGZIP(), []int{3}
}

func (x *DetermineAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentIntegratedCommand) GetOldTransactionId() string {
	if x != nil {
		return x.OldTransactionId
	}
	return ""
}

func (x *DetermineAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentIntegratedCommand) GetManagerId() string {
	if x != nil {
		return x.ManagerId
	}
	return ""
}

func (x *DetermineAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *DetermineAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DetermineAllocatedCreditWithBankTransactionIntegratedCommand struct {
	state              protoimpl.MessageState  `protogen:"open.v1"`
	NewBankReceiptInfo *common.BankReceiptInfo `protobuf:"bytes,1,opt,name=NewBankReceiptInfo,proto3" json:"NewBankReceiptInfo,omitempty"`
	OldTransactionId   *common.NullableString  `protobuf:"bytes,2,opt,name=OldTransactionId,proto3" json:"OldTransactionId,omitempty"`
	ManagerId          string                  `protobuf:"bytes,3,opt,name=ManagerId,proto3" json:"ManagerId,omitempty"`
	CorrelationId      string                  `protobuf:"bytes,4,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id                 string                  `protobuf:"bytes,5,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *DetermineAllocatedCreditWithBankTransactionIntegratedCommand) Reset() {
	*x = DetermineAllocatedCreditWithBankTransactionIntegratedCommand{}
	mi := &file_DetermineAllocatedCreditWithBankTransaction_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetermineAllocatedCreditWithBankTransactionIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetermineAllocatedCreditWithBankTransactionIntegratedCommand) ProtoMessage() {}

func (x *DetermineAllocatedCreditWithBankTransactionIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_DetermineAllocatedCreditWithBankTransaction_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetermineAllocatedCreditWithBankTransactionIntegratedCommand.ProtoReflect.Descriptor instead.
func (*DetermineAllocatedCreditWithBankTransactionIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_DetermineAllocatedCreditWithBankTransaction_proto_rawDescGZIP(), []int{4}
}

func (x *DetermineAllocatedCreditWithBankTransactionIntegratedCommand) GetNewBankReceiptInfo() *common.BankReceiptInfo {
	if x != nil {
		return x.NewBankReceiptInfo
	}
	return nil
}

func (x *DetermineAllocatedCreditWithBankTransactionIntegratedCommand) GetOldTransactionId() *common.NullableString {
	if x != nil {
		return x.OldTransactionId
	}
	return nil
}

func (x *DetermineAllocatedCreditWithBankTransactionIntegratedCommand) GetManagerId() string {
	if x != nil {
		return x.ManagerId
	}
	return ""
}

func (x *DetermineAllocatedCreditWithBankTransactionIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *DetermineAllocatedCreditWithBankTransactionIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DetermineAllocatedCreditWithBankTransactionAttachmentsResponseIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsDone        bool                   `protobuf:"varint,1,opt,name=IsDone,proto3" json:"IsDone,omitempty"`
	NewFileIds    []string               `protobuf:"bytes,2,rep,name=NewFileIds,proto3" json:"NewFileIds,omitempty"`
	CorrelationId string                 `protobuf:"bytes,3,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,4,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetermineAllocatedCreditWithBankTransactionAttachmentsResponseIntegratedCommand) Reset() {
	*x = DetermineAllocatedCreditWithBankTransactionAttachmentsResponseIntegratedCommand{}
	mi := &file_DetermineAllocatedCreditWithBankTransaction_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetermineAllocatedCreditWithBankTransactionAttachmentsResponseIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetermineAllocatedCreditWithBankTransactionAttachmentsResponseIntegratedCommand) ProtoMessage() {
}

func (x *DetermineAllocatedCreditWithBankTransactionAttachmentsResponseIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_DetermineAllocatedCreditWithBankTransaction_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetermineAllocatedCreditWithBankTransactionAttachmentsResponseIntegratedCommand.ProtoReflect.Descriptor instead.
func (*DetermineAllocatedCreditWithBankTransactionAttachmentsResponseIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_DetermineAllocatedCreditWithBankTransaction_proto_rawDescGZIP(), []int{5}
}

func (x *DetermineAllocatedCreditWithBankTransactionAttachmentsResponseIntegratedCommand) GetIsDone() bool {
	if x != nil {
		return x.IsDone
	}
	return false
}

func (x *DetermineAllocatedCreditWithBankTransactionAttachmentsResponseIntegratedCommand) GetNewFileIds() []string {
	if x != nil {
		return x.NewFileIds
	}
	return nil
}

func (x *DetermineAllocatedCreditWithBankTransactionAttachmentsResponseIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *DetermineAllocatedCreditWithBankTransactionAttachmentsResponseIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DetermineAllocatedCreditWithBankTransactionAttachmentsIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileItems     []*common.FileItem     `protobuf:"bytes,1,rep,name=FileItems,proto3" json:"FileItems,omitempty"`
	ManagerId     string                 `protobuf:"bytes,2,opt,name=ManagerId,proto3" json:"ManagerId,omitempty"`
	CorrelationId string                 `protobuf:"bytes,3,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,4,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetermineAllocatedCreditWithBankTransactionAttachmentsIntegratedCommand) Reset() {
	*x = DetermineAllocatedCreditWithBankTransactionAttachmentsIntegratedCommand{}
	mi := &file_DetermineAllocatedCreditWithBankTransaction_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetermineAllocatedCreditWithBankTransactionAttachmentsIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetermineAllocatedCreditWithBankTransactionAttachmentsIntegratedCommand) ProtoMessage() {}

func (x *DetermineAllocatedCreditWithBankTransactionAttachmentsIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_DetermineAllocatedCreditWithBankTransaction_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetermineAllocatedCreditWithBankTransactionAttachmentsIntegratedCommand.ProtoReflect.Descriptor instead.
func (*DetermineAllocatedCreditWithBankTransactionAttachmentsIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_DetermineAllocatedCreditWithBankTransaction_proto_rawDescGZIP(), []int{6}
}

func (x *DetermineAllocatedCreditWithBankTransactionAttachmentsIntegratedCommand) GetFileItems() []*common.FileItem {
	if x != nil {
		return x.FileItems
	}
	return nil
}

func (x *DetermineAllocatedCreditWithBankTransactionAttachmentsIntegratedCommand) GetManagerId() string {
	if x != nil {
		return x.ManagerId
	}
	return ""
}

func (x *DetermineAllocatedCreditWithBankTransactionAttachmentsIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *DetermineAllocatedCreditWithBankTransactionAttachmentsIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CommitOrRollbackDeterminedAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsCommitted   bool                   `protobuf:"varint,1,opt,name=IsCommitted,proto3" json:"IsCommitted,omitempty"`
	CorrelationId string                 `protobuf:"bytes,2,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,3,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitOrRollbackDeterminedAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentIntegratedCommand) Reset() {
	*x = CommitOrRollbackDeterminedAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentIntegratedCommand{}
	mi := &file_DetermineAllocatedCreditWithBankTransaction_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitOrRollbackDeterminedAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitOrRollbackDeterminedAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentIntegratedCommand) ProtoMessage() {
}

func (x *CommitOrRollbackDeterminedAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_DetermineAllocatedCreditWithBankTransaction_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitOrRollbackDeterminedAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentIntegratedCommand.ProtoReflect.Descriptor instead.
func (*CommitOrRollbackDeterminedAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_DetermineAllocatedCreditWithBankTransaction_proto_rawDescGZIP(), []int{7}
}

func (x *CommitOrRollbackDeterminedAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentIntegratedCommand) GetIsCommitted() bool {
	if x != nil {
		return x.IsCommitted
	}
	return false
}

func (x *CommitOrRollbackDeterminedAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *CommitOrRollbackDeterminedAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CommitOrRollbackDeterminedAllocatedCreditWithBankTransactionIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsCommitted   bool                   `protobuf:"varint,1,opt,name=IsCommitted,proto3" json:"IsCommitted,omitempty"`
	CorrelationId string                 `protobuf:"bytes,2,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,3,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitOrRollbackDeterminedAllocatedCreditWithBankTransactionIntegratedCommand) Reset() {
	*x = CommitOrRollbackDeterminedAllocatedCreditWithBankTransactionIntegratedCommand{}
	mi := &file_DetermineAllocatedCreditWithBankTransaction_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitOrRollbackDeterminedAllocatedCreditWithBankTransactionIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitOrRollbackDeterminedAllocatedCreditWithBankTransactionIntegratedCommand) ProtoMessage() {
}

func (x *CommitOrRollbackDeterminedAllocatedCreditWithBankTransactionIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_DetermineAllocatedCreditWithBankTransaction_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitOrRollbackDeterminedAllocatedCreditWithBankTransactionIntegratedCommand.ProtoReflect.Descriptor instead.
func (*CommitOrRollbackDeterminedAllocatedCreditWithBankTransactionIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_DetermineAllocatedCreditWithBankTransaction_proto_rawDescGZIP(), []int{8}
}

func (x *CommitOrRollbackDeterminedAllocatedCreditWithBankTransactionIntegratedCommand) GetIsCommitted() bool {
	if x != nil {
		return x.IsCommitted
	}
	return false
}

func (x *CommitOrRollbackDeterminedAllocatedCreditWithBankTransactionIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *CommitOrRollbackDeterminedAllocatedCreditWithBankTransactionIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_DetermineAllocatedCreditWithBankTransaction_proto protoreflect.FileDescriptor

const file_DetermineAllocatedCreditWithBankTransaction_proto_rawDesc = "" +
	"\n" +
	"1DetermineAllocatedCreditWithBankTransaction.proto\x12+DetermineAllocatedCreditWithBankTransaction\x1a\fCommon.proto\"\x88\x01\n" +
	"PRollbackDeterminedAllocatedCreditWithBankTransactionAttachmentsIntegratedCommand\x12$\n" +
	"\rCorrelationId\x18\x01 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x02 \x01(\tR\x02Id\"\xa8\x02\n" +
	"DDetermineAllocatedCreditWithBankTransactionResponseIntegratedCommand\x12\x16\n" +
	"\x06IsDone\x18\x01 \x01(\bR\x06IsDone\x12\x1e\n" +
	"\n" +
	"OldFileIds\x18\x02 \x03(\tR\n" +
	"OldFileIds\x129\n" +
	"\vOldBankInfo\x18\x03 \x01(\v2\x17.Common.BankReceiptInfoR\vOldBankInfo\x127\n" +
	"\x0eFailureMessage\x18\x04 \x01(\v2\x0f.Common.FailureR\x0eFailureMessage\x12$\n" +
	"\rCorrelationId\x18\x05 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x06 \x01(\tR\x02Id\"\xe2\x01\n" +
	"gDetermineAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentResponseIntegratedCommand\x12\x16\n" +
	"\x06IsDone\x18\x01 \x01(\bR\x06IsDone\x12)\n" +
	"\aFailure\x18\x02 \x01(\v2\x0f.Common.FailureR\aFailure\x12$\n" +
	"\rCorrelationId\x18\x03 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x04 \x01(\tR\x02Id\"\xe1\x01\n" +
	"_DetermineAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentIntegratedCommand\x12*\n" +
	"\x10OldTransactionId\x18\x01 \x01(\tR\x10OldTransactionId\x12\x1c\n" +
	"\tManagerId\x18\x02 \x01(\tR\tManagerId\x12$\n" +
	"\rCorrelationId\x18\x03 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x04 \x01(\tR\x02Id\"\x9f\x02\n" +
	"<DetermineAllocatedCreditWithBankTransactionIntegratedCommand\x12G\n" +
	"\x12NewBankReceiptInfo\x18\x01 \x01(\v2\x17.Common.BankReceiptInfoR\x12NewBankReceiptInfo\x12B\n" +
	"\x10OldTransactionId\x18\x02 \x01(\v2\x16.Common.NullableStringR\x10OldTransactionId\x12\x1c\n" +
	"\tManagerId\x18\x03 \x01(\tR\tManagerId\x12$\n" +
	"\rCorrelationId\x18\x04 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x05 \x01(\tR\x02Id\"\xbf\x01\n" +
	"ODetermineAllocatedCreditWithBankTransactionAttachmentsResponseIntegratedCommand\x12\x16\n" +
	"\x06IsDone\x18\x01 \x01(\bR\x06IsDone\x12\x1e\n" +
	"\n" +
	"NewFileIds\x18\x02 \x03(\tR\n" +
	"NewFileIds\x12$\n" +
	"\rCorrelationId\x18\x03 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x04 \x01(\tR\x02Id\"\xcd\x01\n" +
	"GDetermineAllocatedCreditWithBankTransactionAttachmentsIntegratedCommand\x12.\n" +
	"\tFileItems\x18\x01 \x03(\v2\x10.Common.FileItemR\tFileItems\x12\x1c\n" +
	"\tManagerId\x18\x02 \x01(\tR\tManagerId\x12$\n" +
	"\rCorrelationId\x18\x03 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x04 \x01(\tR\x02Id\"\xca\x01\n" +
	"pCommitOrRollbackDeterminedAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentIntegratedCommand\x12 \n" +
	"\vIsCommitted\x18\x01 \x01(\bR\vIsCommitted\x12$\n" +
	"\rCorrelationId\x18\x02 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x03 \x01(\tR\x02Id\"\xa7\x01\n" +
	"MCommitOrRollbackDeterminedAllocatedCreditWithBankTransactionIntegratedCommand\x12 \n" +
	"\vIsCommitted\x18\x01 \x01(\bR\vIsCommitted\x12$\n" +
	"\rCorrelationId\x18\x02 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x03 \x01(\tR\x02IdB\x98\x01ZOmoneyx.golang.framework/integration/DetermineAllocatedCreditWithBankTransaction\xaa\x02DAriyana.Framework.Schema.DetermineAllocatedCreditWithBankTransactionb\x06proto3"

var (
	file_DetermineAllocatedCreditWithBankTransaction_proto_rawDescOnce sync.Once
	file_DetermineAllocatedCreditWithBankTransaction_proto_rawDescData []byte
)

func file_DetermineAllocatedCreditWithBankTransaction_proto_rawDescGZIP() []byte {
	file_DetermineAllocatedCreditWithBankTransaction_proto_rawDescOnce.Do(func() {
		file_DetermineAllocatedCreditWithBankTransaction_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_DetermineAllocatedCreditWithBankTransaction_proto_rawDesc), len(file_DetermineAllocatedCreditWithBankTransaction_proto_rawDesc)))
	})
	return file_DetermineAllocatedCreditWithBankTransaction_proto_rawDescData
}

var file_DetermineAllocatedCreditWithBankTransaction_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_DetermineAllocatedCreditWithBankTransaction_proto_goTypes = []any{
	(*RollbackDeterminedAllocatedCreditWithBankTransactionAttachmentsIntegratedCommand)(nil),                                 // 0: DetermineAllocatedCreditWithBankTransaction.RollbackDeterminedAllocatedCreditWithBankTransactionAttachmentsIntegratedCommand
	(*DetermineAllocatedCreditWithBankTransactionResponseIntegratedCommand)(nil),                                             // 1: DetermineAllocatedCreditWithBankTransaction.DetermineAllocatedCreditWithBankTransactionResponseIntegratedCommand
	(*DetermineAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentResponseIntegratedCommand)(nil),          // 2: DetermineAllocatedCreditWithBankTransaction.DetermineAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentResponseIntegratedCommand
	(*DetermineAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentIntegratedCommand)(nil),                  // 3: DetermineAllocatedCreditWithBankTransaction.DetermineAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentIntegratedCommand
	(*DetermineAllocatedCreditWithBankTransactionIntegratedCommand)(nil),                                                     // 4: DetermineAllocatedCreditWithBankTransaction.DetermineAllocatedCreditWithBankTransactionIntegratedCommand
	(*DetermineAllocatedCreditWithBankTransactionAttachmentsResponseIntegratedCommand)(nil),                                  // 5: DetermineAllocatedCreditWithBankTransaction.DetermineAllocatedCreditWithBankTransactionAttachmentsResponseIntegratedCommand
	(*DetermineAllocatedCreditWithBankTransactionAttachmentsIntegratedCommand)(nil),                                          // 6: DetermineAllocatedCreditWithBankTransaction.DetermineAllocatedCreditWithBankTransactionAttachmentsIntegratedCommand
	(*CommitOrRollbackDeterminedAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentIntegratedCommand)(nil), // 7: DetermineAllocatedCreditWithBankTransaction.CommitOrRollbackDeterminedAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentIntegratedCommand
	(*CommitOrRollbackDeterminedAllocatedCreditWithBankTransactionIntegratedCommand)(nil),                                    // 8: DetermineAllocatedCreditWithBankTransaction.CommitOrRollbackDeterminedAllocatedCreditWithBankTransactionIntegratedCommand
	(*common.BankReceiptInfo)(nil), // 9: Common.BankReceiptInfo
	(*common.Failure)(nil),         // 10: Common.Failure
	(*common.NullableString)(nil),  // 11: Common.NullableString
	(*common.FileItem)(nil),        // 12: Common.FileItem
}
var file_DetermineAllocatedCreditWithBankTransaction_proto_depIdxs = []int32{
	9,  // 0: DetermineAllocatedCreditWithBankTransaction.DetermineAllocatedCreditWithBankTransactionResponseIntegratedCommand.OldBankInfo:type_name -> Common.BankReceiptInfo
	10, // 1: DetermineAllocatedCreditWithBankTransaction.DetermineAllocatedCreditWithBankTransactionResponseIntegratedCommand.FailureMessage:type_name -> Common.Failure
	10, // 2: DetermineAllocatedCreditWithBankTransaction.DetermineAllocatedCreditWithBankTransactionRemoveAccountingUnknownBankDocumentResponseIntegratedCommand.Failure:type_name -> Common.Failure
	9,  // 3: DetermineAllocatedCreditWithBankTransaction.DetermineAllocatedCreditWithBankTransactionIntegratedCommand.NewBankReceiptInfo:type_name -> Common.BankReceiptInfo
	11, // 4: DetermineAllocatedCreditWithBankTransaction.DetermineAllocatedCreditWithBankTransactionIntegratedCommand.OldTransactionId:type_name -> Common.NullableString
	12, // 5: DetermineAllocatedCreditWithBankTransaction.DetermineAllocatedCreditWithBankTransactionAttachmentsIntegratedCommand.FileItems:type_name -> Common.FileItem
	6,  // [6:6] is the sub-list for method output_type
	6,  // [6:6] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_DetermineAllocatedCreditWithBankTransaction_proto_init() }
func file_DetermineAllocatedCreditWithBankTransaction_proto_init() {
	if File_DetermineAllocatedCreditWithBankTransaction_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_DetermineAllocatedCreditWithBankTransaction_proto_rawDesc), len(file_DetermineAllocatedCreditWithBankTransaction_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_DetermineAllocatedCreditWithBankTransaction_proto_goTypes,
		DependencyIndexes: file_DetermineAllocatedCreditWithBankTransaction_proto_depIdxs,
		MessageInfos:      file_DetermineAllocatedCreditWithBankTransaction_proto_msgTypes,
	}.Build()
	File_DetermineAllocatedCreditWithBankTransaction_proto = out.File
	file_DetermineAllocatedCreditWithBankTransaction_proto_goTypes = nil
	file_DetermineAllocatedCreditWithBankTransaction_proto_depIdxs = nil
}
