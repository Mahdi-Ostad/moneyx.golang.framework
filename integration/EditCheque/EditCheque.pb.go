// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.2
// source: EditCheque.proto

package EditCheque

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	common "moneyx.golang.framework/integration/common"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChequeChangeState int32

const (
	ChequeChangeState_RemoveChequeAddReceipt ChequeChangeState = 0
	ChequeChangeState_RemoveReceiptAddCheque ChequeChangeState = 1
	ChequeChangeState_AddCheque              ChequeChangeState = 2
	ChequeChangeState_EditCheque             ChequeChangeState = 3
	ChequeChangeState_RemoveDocument         ChequeChangeState = 4
	ChequeChangeState_AddDocumet             ChequeChangeState = 5
	ChequeChangeState_EditDocumet            ChequeChangeState = 6
	ChequeChangeState_RemoveCheque           ChequeChangeState = 7
)

// Enum value maps for ChequeChangeState.
var (
	ChequeChangeState_name = map[int32]string{
		0: "RemoveChequeAddReceipt",
		1: "RemoveReceiptAddCheque",
		2: "AddCheque",
		3: "EditCheque",
		4: "RemoveDocument",
		5: "AddDocumet",
		6: "EditDocumet",
		7: "RemoveCheque",
	}
	ChequeChangeState_value = map[string]int32{
		"RemoveChequeAddReceipt": 0,
		"RemoveReceiptAddCheque": 1,
		"AddCheque":              2,
		"EditCheque":             3,
		"RemoveDocument":         4,
		"AddDocumet":             5,
		"EditDocumet":            6,
		"RemoveCheque":           7,
	}
)

func (x ChequeChangeState) Enum() *ChequeChangeState {
	p := new(ChequeChangeState)
	*p = x
	return p
}

func (x ChequeChangeState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChequeChangeState) Descriptor() protoreflect.EnumDescriptor {
	return file_EditCheque_proto_enumTypes[0].Descriptor()
}

func (ChequeChangeState) Type() protoreflect.EnumType {
	return &file_EditCheque_proto_enumTypes[0]
}

func (x ChequeChangeState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChequeChangeState.Descriptor instead.
func (ChequeChangeState) EnumDescriptor() ([]byte, []int) {
	return file_EditCheque_proto_rawDescGZIP(), []int{0}
}

type StoreEditedChequeFileChangesResponseIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	AddedFileIds  []string               `protobuf:"bytes,2,rep,name=AddedFileIds,proto3" json:"AddedFileIds,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=Message,proto3" json:"Message,omitempty"`
	CorrelationId string                 `protobuf:"bytes,4,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,5,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreEditedChequeFileChangesResponseIntegratedCommand) Reset() {
	*x = StoreEditedChequeFileChangesResponseIntegratedCommand{}
	mi := &file_EditCheque_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreEditedChequeFileChangesResponseIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreEditedChequeFileChangesResponseIntegratedCommand) ProtoMessage() {}

func (x *StoreEditedChequeFileChangesResponseIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_EditCheque_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreEditedChequeFileChangesResponseIntegratedCommand.ProtoReflect.Descriptor instead.
func (*StoreEditedChequeFileChangesResponseIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_EditCheque_proto_rawDescGZIP(), []int{0}
}

func (x *StoreEditedChequeFileChangesResponseIntegratedCommand) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *StoreEditedChequeFileChangesResponseIntegratedCommand) GetAddedFileIds() []string {
	if x != nil {
		return x.AddedFileIds
	}
	return nil
}

func (x *StoreEditedChequeFileChangesResponseIntegratedCommand) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *StoreEditedChequeFileChangesResponseIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *StoreEditedChequeFileChangesResponseIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type StoreEditedChequeFileChangesIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Files         []*common.FileItem     `protobuf:"bytes,1,rep,name=Files,proto3" json:"Files,omitempty"`
	DeletedFiles  []string               `protobuf:"bytes,2,rep,name=DeletedFiles,proto3" json:"DeletedFiles,omitempty"`
	ManagerId     string                 `protobuf:"bytes,3,opt,name=ManagerId,proto3" json:"ManagerId,omitempty"`
	CorrelationId string                 `protobuf:"bytes,4,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,5,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreEditedChequeFileChangesIntegratedCommand) Reset() {
	*x = StoreEditedChequeFileChangesIntegratedCommand{}
	mi := &file_EditCheque_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreEditedChequeFileChangesIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreEditedChequeFileChangesIntegratedCommand) ProtoMessage() {}

func (x *StoreEditedChequeFileChangesIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_EditCheque_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreEditedChequeFileChangesIntegratedCommand.ProtoReflect.Descriptor instead.
func (*StoreEditedChequeFileChangesIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_EditCheque_proto_rawDescGZIP(), []int{1}
}

func (x *StoreEditedChequeFileChangesIntegratedCommand) GetFiles() []*common.FileItem {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *StoreEditedChequeFileChangesIntegratedCommand) GetDeletedFiles() []string {
	if x != nil {
		return x.DeletedFiles
	}
	return nil
}

func (x *StoreEditedChequeFileChangesIntegratedCommand) GetManagerId() string {
	if x != nil {
		return x.ManagerId
	}
	return ""
}

func (x *StoreEditedChequeFileChangesIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *StoreEditedChequeFileChangesIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type EditBankBookChequeDocumentResponseIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsCompleted   bool                   `protobuf:"varint,1,opt,name=IsCompleted,proto3" json:"IsCompleted,omitempty"`
	Failure       *common.Failure        `protobuf:"bytes,2,opt,name=Failure,proto3" json:"Failure,omitempty"`
	CorrelationId string                 `protobuf:"bytes,3,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,4,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EditBankBookChequeDocumentResponseIntegratedCommand) Reset() {
	*x = EditBankBookChequeDocumentResponseIntegratedCommand{}
	mi := &file_EditCheque_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditBankBookChequeDocumentResponseIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditBankBookChequeDocumentResponseIntegratedCommand) ProtoMessage() {}

func (x *EditBankBookChequeDocumentResponseIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_EditCheque_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditBankBookChequeDocumentResponseIntegratedCommand.ProtoReflect.Descriptor instead.
func (*EditBankBookChequeDocumentResponseIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_EditCheque_proto_rawDescGZIP(), []int{2}
}

func (x *EditBankBookChequeDocumentResponseIntegratedCommand) GetIsCompleted() bool {
	if x != nil {
		return x.IsCompleted
	}
	return false
}

func (x *EditBankBookChequeDocumentResponseIntegratedCommand) GetFailure() *common.Failure {
	if x != nil {
		return x.Failure
	}
	return nil
}

func (x *EditBankBookChequeDocumentResponseIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *EditBankBookChequeDocumentResponseIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type EditBankBookChequeDocumentIntegratedCommand struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	ChequeId                 string                 `protobuf:"bytes,1,opt,name=ChequeId,proto3" json:"ChequeId,omitempty"`
	ChequeNumber             string                 `protobuf:"bytes,2,opt,name=ChequeNumber,proto3" json:"ChequeNumber,omitempty"`
	ChequeMoney              *common.Money          `protobuf:"bytes,3,opt,name=ChequeMoney,proto3" json:"ChequeMoney,omitempty"`
	BankAccountTitle         string                 `protobuf:"bytes,4,opt,name=BankAccountTitle,proto3" json:"BankAccountTitle,omitempty"`
	BranchName               string                 `protobuf:"bytes,5,opt,name=BranchName,proto3" json:"BranchName,omitempty"`
	BankAccountId            string                 `protobuf:"bytes,6,opt,name=BankAccountId,proto3" json:"BankAccountId,omitempty"`
	ModifiedNewBankAccountId *common.NullableString `protobuf:"bytes,7,opt,name=ModifiedNewBankAccountId,proto3" json:"ModifiedNewBankAccountId,omitempty"`
	ChequeRegistrationDate   int64                  `protobuf:"varint,8,opt,name=ChequeRegistrationDate,proto3" json:"ChequeRegistrationDate,omitempty"`
	DueDate                  int64                  `protobuf:"varint,9,opt,name=DueDate,proto3" json:"DueDate,omitempty"`
	Description              string                 `protobuf:"bytes,10,opt,name=Description,proto3" json:"Description,omitempty"`
	ChequeState              ChequeChangeState      `protobuf:"varint,11,opt,name=ChequeState,proto3,enum=EditCheque.ChequeChangeState" json:"ChequeState,omitempty"`
	ChequeBankName           string                 `protobuf:"bytes,12,opt,name=ChequeBankName,proto3" json:"ChequeBankName,omitempty"`
	CustomerAccountId        string                 `protobuf:"bytes,13,opt,name=CustomerAccountId,proto3" json:"CustomerAccountId,omitempty"`
	ManagerId                string                 `protobuf:"bytes,14,opt,name=ManagerId,proto3" json:"ManagerId,omitempty"`
	CorrelationId            string                 `protobuf:"bytes,15,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id                       string                 `protobuf:"bytes,16,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *EditBankBookChequeDocumentIntegratedCommand) Reset() {
	*x = EditBankBookChequeDocumentIntegratedCommand{}
	mi := &file_EditCheque_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditBankBookChequeDocumentIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditBankBookChequeDocumentIntegratedCommand) ProtoMessage() {}

func (x *EditBankBookChequeDocumentIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_EditCheque_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditBankBookChequeDocumentIntegratedCommand.ProtoReflect.Descriptor instead.
func (*EditBankBookChequeDocumentIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_EditCheque_proto_rawDescGZIP(), []int{3}
}

func (x *EditBankBookChequeDocumentIntegratedCommand) GetChequeId() string {
	if x != nil {
		return x.ChequeId
	}
	return ""
}

func (x *EditBankBookChequeDocumentIntegratedCommand) GetChequeNumber() string {
	if x != nil {
		return x.ChequeNumber
	}
	return ""
}

func (x *EditBankBookChequeDocumentIntegratedCommand) GetChequeMoney() *common.Money {
	if x != nil {
		return x.ChequeMoney
	}
	return nil
}

func (x *EditBankBookChequeDocumentIntegratedCommand) GetBankAccountTitle() string {
	if x != nil {
		return x.BankAccountTitle
	}
	return ""
}

func (x *EditBankBookChequeDocumentIntegratedCommand) GetBranchName() string {
	if x != nil {
		return x.BranchName
	}
	return ""
}

func (x *EditBankBookChequeDocumentIntegratedCommand) GetBankAccountId() string {
	if x != nil {
		return x.BankAccountId
	}
	return ""
}

func (x *EditBankBookChequeDocumentIntegratedCommand) GetModifiedNewBankAccountId() *common.NullableString {
	if x != nil {
		return x.ModifiedNewBankAccountId
	}
	return nil
}

func (x *EditBankBookChequeDocumentIntegratedCommand) GetChequeRegistrationDate() int64 {
	if x != nil {
		return x.ChequeRegistrationDate
	}
	return 0
}

func (x *EditBankBookChequeDocumentIntegratedCommand) GetDueDate() int64 {
	if x != nil {
		return x.DueDate
	}
	return 0
}

func (x *EditBankBookChequeDocumentIntegratedCommand) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EditBankBookChequeDocumentIntegratedCommand) GetChequeState() ChequeChangeState {
	if x != nil {
		return x.ChequeState
	}
	return ChequeChangeState_RemoveChequeAddReceipt
}

func (x *EditBankBookChequeDocumentIntegratedCommand) GetChequeBankName() string {
	if x != nil {
		return x.ChequeBankName
	}
	return ""
}

func (x *EditBankBookChequeDocumentIntegratedCommand) GetCustomerAccountId() string {
	if x != nil {
		return x.CustomerAccountId
	}
	return ""
}

func (x *EditBankBookChequeDocumentIntegratedCommand) GetManagerId() string {
	if x != nil {
		return x.ManagerId
	}
	return ""
}

func (x *EditBankBookChequeDocumentIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *EditBankBookChequeDocumentIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CommitOrRollbackEditedChequeFilesIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsCommited    bool                   `protobuf:"varint,1,opt,name=IsCommited,proto3" json:"IsCommited,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	CorrelationId string                 `protobuf:"bytes,3,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,4,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitOrRollbackEditedChequeFilesIntegratedCommand) Reset() {
	*x = CommitOrRollbackEditedChequeFilesIntegratedCommand{}
	mi := &file_EditCheque_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitOrRollbackEditedChequeFilesIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitOrRollbackEditedChequeFilesIntegratedCommand) ProtoMessage() {}

func (x *CommitOrRollbackEditedChequeFilesIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_EditCheque_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitOrRollbackEditedChequeFilesIntegratedCommand.ProtoReflect.Descriptor instead.
func (*CommitOrRollbackEditedChequeFilesIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_EditCheque_proto_rawDescGZIP(), []int{4}
}

func (x *CommitOrRollbackEditedChequeFilesIntegratedCommand) GetIsCommited() bool {
	if x != nil {
		return x.IsCommited
	}
	return false
}

func (x *CommitOrRollbackEditedChequeFilesIntegratedCommand) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CommitOrRollbackEditedChequeFilesIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *CommitOrRollbackEditedChequeFilesIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CommitOrRollbackBankBookEditedChequeDocumentIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsCommited    bool                   `protobuf:"varint,1,opt,name=IsCommited,proto3" json:"IsCommited,omitempty"`
	CorrelationId string                 `protobuf:"bytes,2,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,3,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitOrRollbackBankBookEditedChequeDocumentIntegratedCommand) Reset() {
	*x = CommitOrRollbackBankBookEditedChequeDocumentIntegratedCommand{}
	mi := &file_EditCheque_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitOrRollbackBankBookEditedChequeDocumentIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitOrRollbackBankBookEditedChequeDocumentIntegratedCommand) ProtoMessage() {}

func (x *CommitOrRollbackBankBookEditedChequeDocumentIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_EditCheque_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitOrRollbackBankBookEditedChequeDocumentIntegratedCommand.ProtoReflect.Descriptor instead.
func (*CommitOrRollbackBankBookEditedChequeDocumentIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_EditCheque_proto_rawDescGZIP(), []int{5}
}

func (x *CommitOrRollbackBankBookEditedChequeDocumentIntegratedCommand) GetIsCommited() bool {
	if x != nil {
		return x.IsCommited
	}
	return false
}

func (x *CommitOrRollbackBankBookEditedChequeDocumentIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *CommitOrRollbackBankBookEditedChequeDocumentIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_EditCheque_proto protoreflect.FileDescriptor

const file_EditCheque_proto_rawDesc = "" +
	"\n" +
	"\x10EditCheque.proto\x12\n" +
	"EditCheque\x1a\fCommon.proto\"\xc3\x01\n" +
	"5StoreEditedChequeFileChangesResponseIntegratedCommand\x12\x16\n" +
	"\x06Status\x18\x01 \x01(\bR\x06Status\x12\"\n" +
	"\fAddedFileIds\x18\x02 \x03(\tR\fAddedFileIds\x12\x18\n" +
	"\aMessage\x18\x03 \x01(\tR\aMessage\x12$\n" +
	"\rCorrelationId\x18\x04 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x05 \x01(\tR\x02Id\"\xcf\x01\n" +
	"-StoreEditedChequeFileChangesIntegratedCommand\x12&\n" +
	"\x05Files\x18\x01 \x03(\v2\x10.Common.FileItemR\x05Files\x12\"\n" +
	"\fDeletedFiles\x18\x02 \x03(\tR\fDeletedFiles\x12\x1c\n" +
	"\tManagerId\x18\x03 \x01(\tR\tManagerId\x12$\n" +
	"\rCorrelationId\x18\x04 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x05 \x01(\tR\x02Id\"\xb8\x01\n" +
	"3EditBankBookChequeDocumentResponseIntegratedCommand\x12 \n" +
	"\vIsCompleted\x18\x01 \x01(\bR\vIsCompleted\x12)\n" +
	"\aFailure\x18\x02 \x01(\v2\x0f.Common.FailureR\aFailure\x12$\n" +
	"\rCorrelationId\x18\x03 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x04 \x01(\tR\x02Id\"\xc3\x05\n" +
	"+EditBankBookChequeDocumentIntegratedCommand\x12\x1a\n" +
	"\bChequeId\x18\x01 \x01(\tR\bChequeId\x12\"\n" +
	"\fChequeNumber\x18\x02 \x01(\tR\fChequeNumber\x12/\n" +
	"\vChequeMoney\x18\x03 \x01(\v2\r.Common.MoneyR\vChequeMoney\x12*\n" +
	"\x10BankAccountTitle\x18\x04 \x01(\tR\x10BankAccountTitle\x12\x1e\n" +
	"\n" +
	"BranchName\x18\x05 \x01(\tR\n" +
	"BranchName\x12$\n" +
	"\rBankAccountId\x18\x06 \x01(\tR\rBankAccountId\x12R\n" +
	"\x18ModifiedNewBankAccountId\x18\a \x01(\v2\x16.Common.NullableStringR\x18ModifiedNewBankAccountId\x126\n" +
	"\x16ChequeRegistrationDate\x18\b \x01(\x03R\x16ChequeRegistrationDate\x12\x18\n" +
	"\aDueDate\x18\t \x01(\x03R\aDueDate\x12 \n" +
	"\vDescription\x18\n" +
	" \x01(\tR\vDescription\x12?\n" +
	"\vChequeState\x18\v \x01(\x0e2\x1d.EditCheque.ChequeChangeStateR\vChequeState\x12&\n" +
	"\x0eChequeBankName\x18\f \x01(\tR\x0eChequeBankName\x12,\n" +
	"\x11CustomerAccountId\x18\r \x01(\tR\x11CustomerAccountId\x12\x1c\n" +
	"\tManagerId\x18\x0e \x01(\tR\tManagerId\x12$\n" +
	"\rCorrelationId\x18\x0f \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x10 \x01(\tR\x02Id\"\xa4\x01\n" +
	"2CommitOrRollbackEditedChequeFilesIntegratedCommand\x12\x1e\n" +
	"\n" +
	"IsCommited\x18\x01 \x01(\bR\n" +
	"IsCommited\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\x12$\n" +
	"\rCorrelationId\x18\x03 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x04 \x01(\tR\x02Id\"\x95\x01\n" +
	"=CommitOrRollbackBankBookEditedChequeDocumentIntegratedCommand\x12\x1e\n" +
	"\n" +
	"IsCommited\x18\x01 \x01(\bR\n" +
	"IsCommited\x12$\n" +
	"\rCorrelationId\x18\x02 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x03 \x01(\tR\x02Id*\xb1\x01\n" +
	"\x11ChequeChangeState\x12\x1a\n" +
	"\x16RemoveChequeAddReceipt\x10\x00\x12\x1a\n" +
	"\x16RemoveReceiptAddCheque\x10\x01\x12\r\n" +
	"\tAddCheque\x10\x02\x12\x0e\n" +
	"\n" +
	"EditCheque\x10\x03\x12\x12\n" +
	"\x0eRemoveDocument\x10\x04\x12\x0e\n" +
	"\n" +
	"AddDocumet\x10\x05\x12\x0f\n" +
	"\vEditDocumet\x10\x06\x12\x10\n" +
	"\fRemoveCheque\x10\aBVZ.moneyx.golang.framework/integration/EditCheque\xaa\x02#Ariyana.Framework.Schema.EditChequeb\x06proto3"

var (
	file_EditCheque_proto_rawDescOnce sync.Once
	file_EditCheque_proto_rawDescData []byte
)

func file_EditCheque_proto_rawDescGZIP() []byte {
	file_EditCheque_proto_rawDescOnce.Do(func() {
		file_EditCheque_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_EditCheque_proto_rawDesc), len(file_EditCheque_proto_rawDesc)))
	})
	return file_EditCheque_proto_rawDescData
}

var file_EditCheque_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_EditCheque_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_EditCheque_proto_goTypes = []any{
	(ChequeChangeState)(0), // 0: EditCheque.ChequeChangeState
	(*StoreEditedChequeFileChangesResponseIntegratedCommand)(nil),         // 1: EditCheque.StoreEditedChequeFileChangesResponseIntegratedCommand
	(*StoreEditedChequeFileChangesIntegratedCommand)(nil),                 // 2: EditCheque.StoreEditedChequeFileChangesIntegratedCommand
	(*EditBankBookChequeDocumentResponseIntegratedCommand)(nil),           // 3: EditCheque.EditBankBookChequeDocumentResponseIntegratedCommand
	(*EditBankBookChequeDocumentIntegratedCommand)(nil),                   // 4: EditCheque.EditBankBookChequeDocumentIntegratedCommand
	(*CommitOrRollbackEditedChequeFilesIntegratedCommand)(nil),            // 5: EditCheque.CommitOrRollbackEditedChequeFilesIntegratedCommand
	(*CommitOrRollbackBankBookEditedChequeDocumentIntegratedCommand)(nil), // 6: EditCheque.CommitOrRollbackBankBookEditedChequeDocumentIntegratedCommand
	(*common.FileItem)(nil),       // 7: Common.FileItem
	(*common.Failure)(nil),        // 8: Common.Failure
	(*common.Money)(nil),          // 9: Common.Money
	(*common.NullableString)(nil), // 10: Common.NullableString
}
var file_EditCheque_proto_depIdxs = []int32{
	7,  // 0: EditCheque.StoreEditedChequeFileChangesIntegratedCommand.Files:type_name -> Common.FileItem
	8,  // 1: EditCheque.EditBankBookChequeDocumentResponseIntegratedCommand.Failure:type_name -> Common.Failure
	9,  // 2: EditCheque.EditBankBookChequeDocumentIntegratedCommand.ChequeMoney:type_name -> Common.Money
	10, // 3: EditCheque.EditBankBookChequeDocumentIntegratedCommand.ModifiedNewBankAccountId:type_name -> Common.NullableString
	0,  // 4: EditCheque.EditBankBookChequeDocumentIntegratedCommand.ChequeState:type_name -> EditCheque.ChequeChangeState
	5,  // [5:5] is the sub-list for method output_type
	5,  // [5:5] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_EditCheque_proto_init() }
func file_EditCheque_proto_init() {
	if File_EditCheque_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_EditCheque_proto_rawDesc), len(file_EditCheque_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_EditCheque_proto_goTypes,
		DependencyIndexes: file_EditCheque_proto_depIdxs,
		EnumInfos:         file_EditCheque_proto_enumTypes,
		MessageInfos:      file_EditCheque_proto_msgTypes,
	}.Build()
	File_EditCheque_proto = out.File
	file_EditCheque_proto_goTypes = nil
	file_EditCheque_proto_depIdxs = nil
}
