// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.2
// source: RevertUnpendingCredit.proto

package RevertUnpendingCredit

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	common "moneyx.golang.framework/integration/common"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RevertAccountingTransactionCreditsAccountDocumentResponseIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsCompleted   bool                   `protobuf:"varint,1,opt,name=IsCompleted,proto3" json:"IsCompleted,omitempty"`
	Failure       *common.Failure        `protobuf:"bytes,2,opt,name=Failure,proto3" json:"Failure,omitempty"`
	CorrelationId string                 `protobuf:"bytes,3,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,4,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevertAccountingTransactionCreditsAccountDocumentResponseIntegratedCommand) Reset() {
	*x = RevertAccountingTransactionCreditsAccountDocumentResponseIntegratedCommand{}
	mi := &file_RevertUnpendingCredit_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevertAccountingTransactionCreditsAccountDocumentResponseIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevertAccountingTransactionCreditsAccountDocumentResponseIntegratedCommand) ProtoMessage() {}

func (x *RevertAccountingTransactionCreditsAccountDocumentResponseIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_RevertUnpendingCredit_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevertAccountingTransactionCreditsAccountDocumentResponseIntegratedCommand.ProtoReflect.Descriptor instead.
func (*RevertAccountingTransactionCreditsAccountDocumentResponseIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_RevertUnpendingCredit_proto_rawDescGZIP(), []int{0}
}

func (x *RevertAccountingTransactionCreditsAccountDocumentResponseIntegratedCommand) GetIsCompleted() bool {
	if x != nil {
		return x.IsCompleted
	}
	return false
}

func (x *RevertAccountingTransactionCreditsAccountDocumentResponseIntegratedCommand) GetFailure() *common.Failure {
	if x != nil {
		return x.Failure
	}
	return nil
}

func (x *RevertAccountingTransactionCreditsAccountDocumentResponseIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *RevertAccountingTransactionCreditsAccountDocumentResponseIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RevertAccountingTransactionCreditsAccountDocumentIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId string                 `protobuf:"bytes,1,opt,name=TransactionId,proto3" json:"TransactionId,omitempty"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=AccountId,proto3" json:"AccountId,omitempty"`
	ManagerId     string                 `protobuf:"bytes,3,opt,name=ManagerId,proto3" json:"ManagerId,omitempty"`
	CorrelationId string                 `protobuf:"bytes,4,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,5,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevertAccountingTransactionCreditsAccountDocumentIntegratedCommand) Reset() {
	*x = RevertAccountingTransactionCreditsAccountDocumentIntegratedCommand{}
	mi := &file_RevertUnpendingCredit_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevertAccountingTransactionCreditsAccountDocumentIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevertAccountingTransactionCreditsAccountDocumentIntegratedCommand) ProtoMessage() {}

func (x *RevertAccountingTransactionCreditsAccountDocumentIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_RevertUnpendingCredit_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevertAccountingTransactionCreditsAccountDocumentIntegratedCommand.ProtoReflect.Descriptor instead.
func (*RevertAccountingTransactionCreditsAccountDocumentIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_RevertUnpendingCredit_proto_rawDescGZIP(), []int{1}
}

func (x *RevertAccountingTransactionCreditsAccountDocumentIntegratedCommand) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *RevertAccountingTransactionCreditsAccountDocumentIntegratedCommand) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *RevertAccountingTransactionCreditsAccountDocumentIntegratedCommand) GetManagerId() string {
	if x != nil {
		return x.ManagerId
	}
	return ""
}

func (x *RevertAccountingTransactionCreditsAccountDocumentIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *RevertAccountingTransactionCreditsAccountDocumentIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CommitOrRollbackRevertedAccountingTransactionCreditsAccountDocumentIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsCommitted   bool                   `protobuf:"varint,1,opt,name=IsCommitted,proto3" json:"IsCommitted,omitempty"`
	CorrelationId string                 `protobuf:"bytes,2,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,3,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitOrRollbackRevertedAccountingTransactionCreditsAccountDocumentIntegratedCommand) Reset() {
	*x = CommitOrRollbackRevertedAccountingTransactionCreditsAccountDocumentIntegratedCommand{}
	mi := &file_RevertUnpendingCredit_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitOrRollbackRevertedAccountingTransactionCreditsAccountDocumentIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitOrRollbackRevertedAccountingTransactionCreditsAccountDocumentIntegratedCommand) ProtoMessage() {
}

func (x *CommitOrRollbackRevertedAccountingTransactionCreditsAccountDocumentIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_RevertUnpendingCredit_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitOrRollbackRevertedAccountingTransactionCreditsAccountDocumentIntegratedCommand.ProtoReflect.Descriptor instead.
func (*CommitOrRollbackRevertedAccountingTransactionCreditsAccountDocumentIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_RevertUnpendingCredit_proto_rawDescGZIP(), []int{2}
}

func (x *CommitOrRollbackRevertedAccountingTransactionCreditsAccountDocumentIntegratedCommand) GetIsCommitted() bool {
	if x != nil {
		return x.IsCommitted
	}
	return false
}

func (x *CommitOrRollbackRevertedAccountingTransactionCreditsAccountDocumentIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *CommitOrRollbackRevertedAccountingTransactionCreditsAccountDocumentIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RevertAllocatedCreditWithDraftOrderIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccountId     string                 `protobuf:"bytes,1,opt,name=AccountId,proto3" json:"AccountId,omitempty"`
	TransactionId string                 `protobuf:"bytes,2,opt,name=TransactionId,proto3" json:"TransactionId,omitempty"`
	ManagerId     string                 `protobuf:"bytes,3,opt,name=ManagerId,proto3" json:"ManagerId,omitempty"`
	CorrelationId string                 `protobuf:"bytes,4,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,5,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevertAllocatedCreditWithDraftOrderIntegratedCommand) Reset() {
	*x = RevertAllocatedCreditWithDraftOrderIntegratedCommand{}
	mi := &file_RevertUnpendingCredit_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevertAllocatedCreditWithDraftOrderIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevertAllocatedCreditWithDraftOrderIntegratedCommand) ProtoMessage() {}

func (x *RevertAllocatedCreditWithDraftOrderIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_RevertUnpendingCredit_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevertAllocatedCreditWithDraftOrderIntegratedCommand.ProtoReflect.Descriptor instead.
func (*RevertAllocatedCreditWithDraftOrderIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_RevertUnpendingCredit_proto_rawDescGZIP(), []int{3}
}

func (x *RevertAllocatedCreditWithDraftOrderIntegratedCommand) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *RevertAllocatedCreditWithDraftOrderIntegratedCommand) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *RevertAllocatedCreditWithDraftOrderIntegratedCommand) GetManagerId() string {
	if x != nil {
		return x.ManagerId
	}
	return ""
}

func (x *RevertAllocatedCreditWithDraftOrderIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *RevertAllocatedCreditWithDraftOrderIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RevertAllocatedCreditWithDraftOrderResponseIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsDone        bool                   `protobuf:"varint,1,opt,name=IsDone,proto3" json:"IsDone,omitempty"`
	Failure       *common.Failure        `protobuf:"bytes,2,opt,name=Failure,proto3" json:"Failure,omitempty"`
	CorrelationId string                 `protobuf:"bytes,3,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,4,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevertAllocatedCreditWithDraftOrderResponseIntegratedCommand) Reset() {
	*x = RevertAllocatedCreditWithDraftOrderResponseIntegratedCommand{}
	mi := &file_RevertUnpendingCredit_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevertAllocatedCreditWithDraftOrderResponseIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevertAllocatedCreditWithDraftOrderResponseIntegratedCommand) ProtoMessage() {}

func (x *RevertAllocatedCreditWithDraftOrderResponseIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_RevertUnpendingCredit_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevertAllocatedCreditWithDraftOrderResponseIntegratedCommand.ProtoReflect.Descriptor instead.
func (*RevertAllocatedCreditWithDraftOrderResponseIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_RevertUnpendingCredit_proto_rawDescGZIP(), []int{4}
}

func (x *RevertAllocatedCreditWithDraftOrderResponseIntegratedCommand) GetIsDone() bool {
	if x != nil {
		return x.IsDone
	}
	return false
}

func (x *RevertAllocatedCreditWithDraftOrderResponseIntegratedCommand) GetFailure() *common.Failure {
	if x != nil {
		return x.Failure
	}
	return nil
}

func (x *RevertAllocatedCreditWithDraftOrderResponseIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *RevertAllocatedCreditWithDraftOrderResponseIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CommitOrRollbackRevertAllocatedCreditWithDraftOrderIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsCommit      bool                   `protobuf:"varint,1,opt,name=IsCommit,proto3" json:"IsCommit,omitempty"`
	CorrelationId string                 `protobuf:"bytes,2,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,3,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitOrRollbackRevertAllocatedCreditWithDraftOrderIntegratedCommand) Reset() {
	*x = CommitOrRollbackRevertAllocatedCreditWithDraftOrderIntegratedCommand{}
	mi := &file_RevertUnpendingCredit_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitOrRollbackRevertAllocatedCreditWithDraftOrderIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitOrRollbackRevertAllocatedCreditWithDraftOrderIntegratedCommand) ProtoMessage() {}

func (x *CommitOrRollbackRevertAllocatedCreditWithDraftOrderIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_RevertUnpendingCredit_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitOrRollbackRevertAllocatedCreditWithDraftOrderIntegratedCommand.ProtoReflect.Descriptor instead.
func (*CommitOrRollbackRevertAllocatedCreditWithDraftOrderIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_RevertUnpendingCredit_proto_rawDescGZIP(), []int{5}
}

func (x *CommitOrRollbackRevertAllocatedCreditWithDraftOrderIntegratedCommand) GetIsCommit() bool {
	if x != nil {
		return x.IsCommit
	}
	return false
}

func (x *CommitOrRollbackRevertAllocatedCreditWithDraftOrderIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *CommitOrRollbackRevertAllocatedCreditWithDraftOrderIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RevertAllocatedCreditWithBankTransactionIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BankId        string                 `protobuf:"bytes,1,opt,name=BankId,proto3" json:"BankId,omitempty"`
	TransactionId string                 `protobuf:"bytes,2,opt,name=TransactionId,proto3" json:"TransactionId,omitempty"`
	ManagerId     string                 `protobuf:"bytes,3,opt,name=ManagerId,proto3" json:"ManagerId,omitempty"`
	CorrelationId string                 `protobuf:"bytes,4,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,5,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevertAllocatedCreditWithBankTransactionIntegratedCommand) Reset() {
	*x = RevertAllocatedCreditWithBankTransactionIntegratedCommand{}
	mi := &file_RevertUnpendingCredit_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevertAllocatedCreditWithBankTransactionIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevertAllocatedCreditWithBankTransactionIntegratedCommand) ProtoMessage() {}

func (x *RevertAllocatedCreditWithBankTransactionIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_RevertUnpendingCredit_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevertAllocatedCreditWithBankTransactionIntegratedCommand.ProtoReflect.Descriptor instead.
func (*RevertAllocatedCreditWithBankTransactionIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_RevertUnpendingCredit_proto_rawDescGZIP(), []int{6}
}

func (x *RevertAllocatedCreditWithBankTransactionIntegratedCommand) GetBankId() string {
	if x != nil {
		return x.BankId
	}
	return ""
}

func (x *RevertAllocatedCreditWithBankTransactionIntegratedCommand) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *RevertAllocatedCreditWithBankTransactionIntegratedCommand) GetManagerId() string {
	if x != nil {
		return x.ManagerId
	}
	return ""
}

func (x *RevertAllocatedCreditWithBankTransactionIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *RevertAllocatedCreditWithBankTransactionIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RevertAllocatedCreditWithBankTransactionResponseIntegratedCommand struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	IsDone         bool                   `protobuf:"varint,1,opt,name=IsDone,proto3" json:"IsDone,omitempty"`
	FailureMessage *common.Failure        `protobuf:"bytes,2,opt,name=FailureMessage,proto3" json:"FailureMessage,omitempty"`
	CorrelationId  string                 `protobuf:"bytes,3,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id             string                 `protobuf:"bytes,4,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RevertAllocatedCreditWithBankTransactionResponseIntegratedCommand) Reset() {
	*x = RevertAllocatedCreditWithBankTransactionResponseIntegratedCommand{}
	mi := &file_RevertUnpendingCredit_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevertAllocatedCreditWithBankTransactionResponseIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevertAllocatedCreditWithBankTransactionResponseIntegratedCommand) ProtoMessage() {}

func (x *RevertAllocatedCreditWithBankTransactionResponseIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_RevertUnpendingCredit_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevertAllocatedCreditWithBankTransactionResponseIntegratedCommand.ProtoReflect.Descriptor instead.
func (*RevertAllocatedCreditWithBankTransactionResponseIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_RevertUnpendingCredit_proto_rawDescGZIP(), []int{7}
}

func (x *RevertAllocatedCreditWithBankTransactionResponseIntegratedCommand) GetIsDone() bool {
	if x != nil {
		return x.IsDone
	}
	return false
}

func (x *RevertAllocatedCreditWithBankTransactionResponseIntegratedCommand) GetFailureMessage() *common.Failure {
	if x != nil {
		return x.FailureMessage
	}
	return nil
}

func (x *RevertAllocatedCreditWithBankTransactionResponseIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *RevertAllocatedCreditWithBankTransactionResponseIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CommitOrRollbackRevertedAllocatedCreditWithBankTransactionIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsCommitted   bool                   `protobuf:"varint,1,opt,name=IsCommitted,proto3" json:"IsCommitted,omitempty"`
	CorrelationId string                 `protobuf:"bytes,2,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,3,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitOrRollbackRevertedAllocatedCreditWithBankTransactionIntegratedCommand) Reset() {
	*x = CommitOrRollbackRevertedAllocatedCreditWithBankTransactionIntegratedCommand{}
	mi := &file_RevertUnpendingCredit_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitOrRollbackRevertedAllocatedCreditWithBankTransactionIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitOrRollbackRevertedAllocatedCreditWithBankTransactionIntegratedCommand) ProtoMessage() {}

func (x *CommitOrRollbackRevertedAllocatedCreditWithBankTransactionIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_RevertUnpendingCredit_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitOrRollbackRevertedAllocatedCreditWithBankTransactionIntegratedCommand.ProtoReflect.Descriptor instead.
func (*CommitOrRollbackRevertedAllocatedCreditWithBankTransactionIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_RevertUnpendingCredit_proto_rawDescGZIP(), []int{8}
}

func (x *CommitOrRollbackRevertedAllocatedCreditWithBankTransactionIntegratedCommand) GetIsCommitted() bool {
	if x != nil {
		return x.IsCommitted
	}
	return false
}

func (x *CommitOrRollbackRevertedAllocatedCreditWithBankTransactionIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *CommitOrRollbackRevertedAllocatedCreditWithBankTransactionIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_RevertUnpendingCredit_proto protoreflect.FileDescriptor

const file_RevertUnpendingCredit_proto_rawDesc = "" +
	"\n" +
	"\x1bRevertUnpendingCredit.proto\x12\x15RevertUnpendingCredit\x1a\fCommon.proto\"\xcf\x01\n" +
	"JRevertAccountingTransactionCreditsAccountDocumentResponseIntegratedCommand\x12 \n" +
	"\vIsCompleted\x18\x01 \x01(\bR\vIsCompleted\x12)\n" +
	"\aFailure\x18\x02 \x01(\v2\x0f.Common.FailureR\aFailure\x12$\n" +
	"\rCorrelationId\x18\x03 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x04 \x01(\tR\x02Id\"\xdc\x01\n" +
	"BRevertAccountingTransactionCreditsAccountDocumentIntegratedCommand\x12$\n" +
	"\rTransactionId\x18\x01 \x01(\tR\rTransactionId\x12\x1c\n" +
	"\tAccountId\x18\x02 \x01(\tR\tAccountId\x12\x1c\n" +
	"\tManagerId\x18\x03 \x01(\tR\tManagerId\x12$\n" +
	"\rCorrelationId\x18\x04 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x05 \x01(\tR\x02Id\"\xae\x01\n" +
	"TCommitOrRollbackRevertedAccountingTransactionCreditsAccountDocumentIntegratedCommand\x12 \n" +
	"\vIsCommitted\x18\x01 \x01(\bR\vIsCommitted\x12$\n" +
	"\rCorrelationId\x18\x02 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x03 \x01(\tR\x02Id\"\xce\x01\n" +
	"4RevertAllocatedCreditWithDraftOrderIntegratedCommand\x12\x1c\n" +
	"\tAccountId\x18\x01 \x01(\tR\tAccountId\x12$\n" +
	"\rTransactionId\x18\x02 \x01(\tR\rTransactionId\x12\x1c\n" +
	"\tManagerId\x18\x03 \x01(\tR\tManagerId\x12$\n" +
	"\rCorrelationId\x18\x04 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x05 \x01(\tR\x02Id\"\xb7\x01\n" +
	"<RevertAllocatedCreditWithDraftOrderResponseIntegratedCommand\x12\x16\n" +
	"\x06IsDone\x18\x01 \x01(\bR\x06IsDone\x12)\n" +
	"\aFailure\x18\x02 \x01(\v2\x0f.Common.FailureR\aFailure\x12$\n" +
	"\rCorrelationId\x18\x03 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x04 \x01(\tR\x02Id\"\x98\x01\n" +
	"DCommitOrRollbackRevertAllocatedCreditWithDraftOrderIntegratedCommand\x12\x1a\n" +
	"\bIsCommit\x18\x01 \x01(\bR\bIsCommit\x12$\n" +
	"\rCorrelationId\x18\x02 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x03 \x01(\tR\x02Id\"\xcd\x01\n" +
	"9RevertAllocatedCreditWithBankTransactionIntegratedCommand\x12\x16\n" +
	"\x06BankId\x18\x01 \x01(\tR\x06BankId\x12$\n" +
	"\rTransactionId\x18\x02 \x01(\tR\rTransactionId\x12\x1c\n" +
	"\tManagerId\x18\x03 \x01(\tR\tManagerId\x12$\n" +
	"\rCorrelationId\x18\x04 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x05 \x01(\tR\x02Id\"\xca\x01\n" +
	"ARevertAllocatedCreditWithBankTransactionResponseIntegratedCommand\x12\x16\n" +
	"\x06IsDone\x18\x01 \x01(\bR\x06IsDone\x127\n" +
	"\x0eFailureMessage\x18\x02 \x01(\v2\x0f.Common.FailureR\x0eFailureMessage\x12$\n" +
	"\rCorrelationId\x18\x03 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x04 \x01(\tR\x02Id\"\xa5\x01\n" +
	"KCommitOrRollbackRevertedAllocatedCreditWithBankTransactionIntegratedCommand\x12 \n" +
	"\vIsCommitted\x18\x01 \x01(\bR\vIsCommitted\x12$\n" +
	"\rCorrelationId\x18\x02 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x03 \x01(\tR\x02IdBlZ9moneyx.golang.framework/integration/RevertUnpendingCredit\xaa\x02.Ariyana.Framework.Schema.RevertUnpendingCreditb\x06proto3"

var (
	file_RevertUnpendingCredit_proto_rawDescOnce sync.Once
	file_RevertUnpendingCredit_proto_rawDescData []byte
)

func file_RevertUnpendingCredit_proto_rawDescGZIP() []byte {
	file_RevertUnpendingCredit_proto_rawDescOnce.Do(func() {
		file_RevertUnpendingCredit_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_RevertUnpendingCredit_proto_rawDesc), len(file_RevertUnpendingCredit_proto_rawDesc)))
	})
	return file_RevertUnpendingCredit_proto_rawDescData
}

var file_RevertUnpendingCredit_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_RevertUnpendingCredit_proto_goTypes = []any{
	(*RevertAccountingTransactionCreditsAccountDocumentResponseIntegratedCommand)(nil),           // 0: RevertUnpendingCredit.RevertAccountingTransactionCreditsAccountDocumentResponseIntegratedCommand
	(*RevertAccountingTransactionCreditsAccountDocumentIntegratedCommand)(nil),                   // 1: RevertUnpendingCredit.RevertAccountingTransactionCreditsAccountDocumentIntegratedCommand
	(*CommitOrRollbackRevertedAccountingTransactionCreditsAccountDocumentIntegratedCommand)(nil), // 2: RevertUnpendingCredit.CommitOrRollbackRevertedAccountingTransactionCreditsAccountDocumentIntegratedCommand
	(*RevertAllocatedCreditWithDraftOrderIntegratedCommand)(nil),                                 // 3: RevertUnpendingCredit.RevertAllocatedCreditWithDraftOrderIntegratedCommand
	(*RevertAllocatedCreditWithDraftOrderResponseIntegratedCommand)(nil),                         // 4: RevertUnpendingCredit.RevertAllocatedCreditWithDraftOrderResponseIntegratedCommand
	(*CommitOrRollbackRevertAllocatedCreditWithDraftOrderIntegratedCommand)(nil),                 // 5: RevertUnpendingCredit.CommitOrRollbackRevertAllocatedCreditWithDraftOrderIntegratedCommand
	(*RevertAllocatedCreditWithBankTransactionIntegratedCommand)(nil),                            // 6: RevertUnpendingCredit.RevertAllocatedCreditWithBankTransactionIntegratedCommand
	(*RevertAllocatedCreditWithBankTransactionResponseIntegratedCommand)(nil),                    // 7: RevertUnpendingCredit.RevertAllocatedCreditWithBankTransactionResponseIntegratedCommand
	(*CommitOrRollbackRevertedAllocatedCreditWithBankTransactionIntegratedCommand)(nil),          // 8: RevertUnpendingCredit.CommitOrRollbackRevertedAllocatedCreditWithBankTransactionIntegratedCommand
	(*common.Failure)(nil), // 9: Common.Failure
}
var file_RevertUnpendingCredit_proto_depIdxs = []int32{
	9, // 0: RevertUnpendingCredit.RevertAccountingTransactionCreditsAccountDocumentResponseIntegratedCommand.Failure:type_name -> Common.Failure
	9, // 1: RevertUnpendingCredit.RevertAllocatedCreditWithDraftOrderResponseIntegratedCommand.Failure:type_name -> Common.Failure
	9, // 2: RevertUnpendingCredit.RevertAllocatedCreditWithBankTransactionResponseIntegratedCommand.FailureMessage:type_name -> Common.Failure
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_RevertUnpendingCredit_proto_init() }
func file_RevertUnpendingCredit_proto_init() {
	if File_RevertUnpendingCredit_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_RevertUnpendingCredit_proto_rawDesc), len(file_RevertUnpendingCredit_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_RevertUnpendingCredit_proto_goTypes,
		DependencyIndexes: file_RevertUnpendingCredit_proto_depIdxs,
		MessageInfos:      file_RevertUnpendingCredit_proto_msgTypes,
	}.Build()
	File_RevertUnpendingCredit_proto = out.File
	file_RevertUnpendingCredit_proto_goTypes = nil
	file_RevertUnpendingCredit_proto_depIdxs = nil
}
