// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.2
// source: ExtendCustomerVersion.proto

package ExtendCustomerVersion

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExtendUserVersionResponseIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsDone        bool                   `protobuf:"varint,1,opt,name=IsDone,proto3" json:"IsDone,omitempty"`
	CorrelationId string                 `protobuf:"bytes,2,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,3,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExtendUserVersionResponseIntegratedCommand) Reset() {
	*x = ExtendUserVersionResponseIntegratedCommand{}
	mi := &file_ExtendCustomerVersion_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtendUserVersionResponseIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtendUserVersionResponseIntegratedCommand) ProtoMessage() {}

func (x *ExtendUserVersionResponseIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_ExtendCustomerVersion_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtendUserVersionResponseIntegratedCommand.ProtoReflect.Descriptor instead.
func (*ExtendUserVersionResponseIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_ExtendCustomerVersion_proto_rawDescGZIP(), []int{0}
}

func (x *ExtendUserVersionResponseIntegratedCommand) GetIsDone() bool {
	if x != nil {
		return x.IsDone
	}
	return false
}

func (x *ExtendUserVersionResponseIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *ExtendUserVersionResponseIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ExtendUserVersionIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserName      string                 `protobuf:"bytes,1,opt,name=UserName,proto3" json:"UserName,omitempty"`
	ExpireDate    int64                  `protobuf:"varint,2,opt,name=ExpireDate,proto3" json:"ExpireDate,omitempty"`
	CorrelationId string                 `protobuf:"bytes,3,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,4,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExtendUserVersionIntegratedCommand) Reset() {
	*x = ExtendUserVersionIntegratedCommand{}
	mi := &file_ExtendCustomerVersion_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtendUserVersionIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtendUserVersionIntegratedCommand) ProtoMessage() {}

func (x *ExtendUserVersionIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_ExtendCustomerVersion_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtendUserVersionIntegratedCommand.ProtoReflect.Descriptor instead.
func (*ExtendUserVersionIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_ExtendCustomerVersion_proto_rawDescGZIP(), []int{1}
}

func (x *ExtendUserVersionIntegratedCommand) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ExtendUserVersionIntegratedCommand) GetExpireDate() int64 {
	if x != nil {
		return x.ExpireDate
	}
	return 0
}

func (x *ExtendUserVersionIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *ExtendUserVersionIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CommitOrRollbackExtendUserVersionIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsDone        bool                   `protobuf:"varint,1,opt,name=IsDone,proto3" json:"IsDone,omitempty"`
	UserName      string                 `protobuf:"bytes,2,opt,name=UserName,proto3" json:"UserName,omitempty"`
	CorrelationId string                 `protobuf:"bytes,3,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,4,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitOrRollbackExtendUserVersionIntegratedCommand) Reset() {
	*x = CommitOrRollbackExtendUserVersionIntegratedCommand{}
	mi := &file_ExtendCustomerVersion_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitOrRollbackExtendUserVersionIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitOrRollbackExtendUserVersionIntegratedCommand) ProtoMessage() {}

func (x *CommitOrRollbackExtendUserVersionIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_ExtendCustomerVersion_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitOrRollbackExtendUserVersionIntegratedCommand.ProtoReflect.Descriptor instead.
func (*CommitOrRollbackExtendUserVersionIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_ExtendCustomerVersion_proto_rawDescGZIP(), []int{2}
}

func (x *CommitOrRollbackExtendUserVersionIntegratedCommand) GetIsDone() bool {
	if x != nil {
		return x.IsDone
	}
	return false
}

func (x *CommitOrRollbackExtendUserVersionIntegratedCommand) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *CommitOrRollbackExtendUserVersionIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *CommitOrRollbackExtendUserVersionIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_ExtendCustomerVersion_proto protoreflect.FileDescriptor

const file_ExtendCustomerVersion_proto_rawDesc = "" +
	"\n" +
	"\x1bExtendCustomerVersion.proto\x12\x15ExtendCustomerVersion\"z\n" +
	"*ExtendUserVersionResponseIntegratedCommand\x12\x16\n" +
	"\x06IsDone\x18\x01 \x01(\bR\x06IsDone\x12$\n" +
	"\rCorrelationId\x18\x02 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x03 \x01(\tR\x02Id\"\x96\x01\n" +
	"\"ExtendUserVersionIntegratedCommand\x12\x1a\n" +
	"\bUserName\x18\x01 \x01(\tR\bUserName\x12\x1e\n" +
	"\n" +
	"ExpireDate\x18\x02 \x01(\x03R\n" +
	"ExpireDate\x12$\n" +
	"\rCorrelationId\x18\x03 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x04 \x01(\tR\x02Id\"\x9e\x01\n" +
	"2CommitOrRollbackExtendUserVersionIntegratedCommand\x12\x16\n" +
	"\x06IsDone\x18\x01 \x01(\bR\x06IsDone\x12\x1a\n" +
	"\bUserName\x18\x02 \x01(\tR\bUserName\x12$\n" +
	"\rCorrelationId\x18\x03 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x04 \x01(\tR\x02IdBlZ9moneyx.golang.framework/integration/ExtendCustomerVersion\xaa\x02.Ariyana.Framework.Schema.ExtendCustomerVersionb\x06proto3"

var (
	file_ExtendCustomerVersion_proto_rawDescOnce sync.Once
	file_ExtendCustomerVersion_proto_rawDescData []byte
)

func file_ExtendCustomerVersion_proto_rawDescGZIP() []byte {
	file_ExtendCustomerVersion_proto_rawDescOnce.Do(func() {
		file_ExtendCustomerVersion_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ExtendCustomerVersion_proto_rawDesc), len(file_ExtendCustomerVersion_proto_rawDesc)))
	})
	return file_ExtendCustomerVersion_proto_rawDescData
}

var file_ExtendCustomerVersion_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_ExtendCustomerVersion_proto_goTypes = []any{
	(*ExtendUserVersionResponseIntegratedCommand)(nil),         // 0: ExtendCustomerVersion.ExtendUserVersionResponseIntegratedCommand
	(*ExtendUserVersionIntegratedCommand)(nil),                 // 1: ExtendCustomerVersion.ExtendUserVersionIntegratedCommand
	(*CommitOrRollbackExtendUserVersionIntegratedCommand)(nil), // 2: ExtendCustomerVersion.CommitOrRollbackExtendUserVersionIntegratedCommand
}
var file_ExtendCustomerVersion_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_ExtendCustomerVersion_proto_init() }
func file_ExtendCustomerVersion_proto_init() {
	if File_ExtendCustomerVersion_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ExtendCustomerVersion_proto_rawDesc), len(file_ExtendCustomerVersion_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ExtendCustomerVersion_proto_goTypes,
		DependencyIndexes: file_ExtendCustomerVersion_proto_depIdxs,
		MessageInfos:      file_ExtendCustomerVersion_proto_msgTypes,
	}.Build()
	File_ExtendCustomerVersion_proto = out.File
	file_ExtendCustomerVersion_proto_goTypes = nil
	file_ExtendCustomerVersion_proto_depIdxs = nil
}
