// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.2
// source: ExtendCustomerExpireDateBySupport.proto

package ExtendCustomerExpireDateBySupport

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	common "moneyx.golang.framework/integration/common"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExtendExpireTimeResponseIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsDone        bool                   `protobuf:"varint,1,opt,name=IsDone,proto3" json:"IsDone,omitempty"`
	Failure       *common.Failure        `protobuf:"bytes,2,opt,name=Failure,proto3" json:"Failure,omitempty"`
	CorrelationId string                 `protobuf:"bytes,3,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,4,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExtendExpireTimeResponseIntegratedCommand) Reset() {
	*x = ExtendExpireTimeResponseIntegratedCommand{}
	mi := &file_ExtendCustomerExpireDateBySupport_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtendExpireTimeResponseIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtendExpireTimeResponseIntegratedCommand) ProtoMessage() {}

func (x *ExtendExpireTimeResponseIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_ExtendCustomerExpireDateBySupport_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtendExpireTimeResponseIntegratedCommand.ProtoReflect.Descriptor instead.
func (*ExtendExpireTimeResponseIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_ExtendCustomerExpireDateBySupport_proto_rawDescGZIP(), []int{0}
}

func (x *ExtendExpireTimeResponseIntegratedCommand) GetIsDone() bool {
	if x != nil {
		return x.IsDone
	}
	return false
}

func (x *ExtendExpireTimeResponseIntegratedCommand) GetFailure() *common.Failure {
	if x != nil {
		return x.Failure
	}
	return nil
}

func (x *ExtendExpireTimeResponseIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *ExtendExpireTimeResponseIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ExtendExpireTimeIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserName      string                 `protobuf:"bytes,1,opt,name=UserName,proto3" json:"UserName,omitempty"`
	ExpireDate    int64                  `protobuf:"varint,2,opt,name=ExpireDate,proto3" json:"ExpireDate,omitempty"`
	CorrelationId string                 `protobuf:"bytes,3,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,4,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExtendExpireTimeIntegratedCommand) Reset() {
	*x = ExtendExpireTimeIntegratedCommand{}
	mi := &file_ExtendCustomerExpireDateBySupport_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtendExpireTimeIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtendExpireTimeIntegratedCommand) ProtoMessage() {}

func (x *ExtendExpireTimeIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_ExtendCustomerExpireDateBySupport_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtendExpireTimeIntegratedCommand.ProtoReflect.Descriptor instead.
func (*ExtendExpireTimeIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_ExtendCustomerExpireDateBySupport_proto_rawDescGZIP(), []int{1}
}

func (x *ExtendExpireTimeIntegratedCommand) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ExtendExpireTimeIntegratedCommand) GetExpireDate() int64 {
	if x != nil {
		return x.ExpireDate
	}
	return 0
}

func (x *ExtendExpireTimeIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *ExtendExpireTimeIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CommitOrRollbackExtendExpireTimeIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsDone        bool                   `protobuf:"varint,1,opt,name=IsDone,proto3" json:"IsDone,omitempty"`
	UserName      string                 `protobuf:"bytes,2,opt,name=UserName,proto3" json:"UserName,omitempty"`
	CorrelationId string                 `protobuf:"bytes,3,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,4,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitOrRollbackExtendExpireTimeIntegratedCommand) Reset() {
	*x = CommitOrRollbackExtendExpireTimeIntegratedCommand{}
	mi := &file_ExtendCustomerExpireDateBySupport_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitOrRollbackExtendExpireTimeIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitOrRollbackExtendExpireTimeIntegratedCommand) ProtoMessage() {}

func (x *CommitOrRollbackExtendExpireTimeIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_ExtendCustomerExpireDateBySupport_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitOrRollbackExtendExpireTimeIntegratedCommand.ProtoReflect.Descriptor instead.
func (*CommitOrRollbackExtendExpireTimeIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_ExtendCustomerExpireDateBySupport_proto_rawDescGZIP(), []int{2}
}

func (x *CommitOrRollbackExtendExpireTimeIntegratedCommand) GetIsDone() bool {
	if x != nil {
		return x.IsDone
	}
	return false
}

func (x *CommitOrRollbackExtendExpireTimeIntegratedCommand) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *CommitOrRollbackExtendExpireTimeIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *CommitOrRollbackExtendExpireTimeIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_ExtendCustomerExpireDateBySupport_proto protoreflect.FileDescriptor

const file_ExtendCustomerExpireDateBySupport_proto_rawDesc = "" +
	"\n" +
	"'ExtendCustomerExpireDateBySupport.proto\x12!ExtendCustomerExpireDateBySupport\x1a\fCommon.proto\"\xa4\x01\n" +
	")ExtendExpireTimeResponseIntegratedCommand\x12\x16\n" +
	"\x06IsDone\x18\x01 \x01(\bR\x06IsDone\x12)\n" +
	"\aFailure\x18\x02 \x01(\v2\x0f.Common.FailureR\aFailure\x12$\n" +
	"\rCorrelationId\x18\x03 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x04 \x01(\tR\x02Id\"\x95\x01\n" +
	"!ExtendExpireTimeIntegratedCommand\x12\x1a\n" +
	"\bUserName\x18\x01 \x01(\tR\bUserName\x12\x1e\n" +
	"\n" +
	"ExpireDate\x18\x02 \x01(\x03R\n" +
	"ExpireDate\x12$\n" +
	"\rCorrelationId\x18\x03 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x04 \x01(\tR\x02Id\"\x9d\x01\n" +
	"1CommitOrRollbackExtendExpireTimeIntegratedCommand\x12\x16\n" +
	"\x06IsDone\x18\x01 \x01(\bR\x06IsDone\x12\x1a\n" +
	"\bUserName\x18\x02 \x01(\tR\bUserName\x12$\n" +
	"\rCorrelationId\x18\x03 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x04 \x01(\tR\x02IdB\x84\x01ZEmoneyx.golang.framework/integration/ExtendCustomerExpireDateBySupport\xaa\x02:Ariyana.Framework.Schema.ExtendCustomerExpireDateBySupportb\x06proto3"

var (
	file_ExtendCustomerExpireDateBySupport_proto_rawDescOnce sync.Once
	file_ExtendCustomerExpireDateBySupport_proto_rawDescData []byte
)

func file_ExtendCustomerExpireDateBySupport_proto_rawDescGZIP() []byte {
	file_ExtendCustomerExpireDateBySupport_proto_rawDescOnce.Do(func() {
		file_ExtendCustomerExpireDateBySupport_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ExtendCustomerExpireDateBySupport_proto_rawDesc), len(file_ExtendCustomerExpireDateBySupport_proto_rawDesc)))
	})
	return file_ExtendCustomerExpireDateBySupport_proto_rawDescData
}

var file_ExtendCustomerExpireDateBySupport_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_ExtendCustomerExpireDateBySupport_proto_goTypes = []any{
	(*ExtendExpireTimeResponseIntegratedCommand)(nil),         // 0: ExtendCustomerExpireDateBySupport.ExtendExpireTimeResponseIntegratedCommand
	(*ExtendExpireTimeIntegratedCommand)(nil),                 // 1: ExtendCustomerExpireDateBySupport.ExtendExpireTimeIntegratedCommand
	(*CommitOrRollbackExtendExpireTimeIntegratedCommand)(nil), // 2: ExtendCustomerExpireDateBySupport.CommitOrRollbackExtendExpireTimeIntegratedCommand
	(*common.Failure)(nil),                                    // 3: Common.Failure
}
var file_ExtendCustomerExpireDateBySupport_proto_depIdxs = []int32{
	3, // 0: ExtendCustomerExpireDateBySupport.ExtendExpireTimeResponseIntegratedCommand.Failure:type_name -> Common.Failure
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_ExtendCustomerExpireDateBySupport_proto_init() }
func file_ExtendCustomerExpireDateBySupport_proto_init() {
	if File_ExtendCustomerExpireDateBySupport_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ExtendCustomerExpireDateBySupport_proto_rawDesc), len(file_ExtendCustomerExpireDateBySupport_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ExtendCustomerExpireDateBySupport_proto_goTypes,
		DependencyIndexes: file_ExtendCustomerExpireDateBySupport_proto_depIdxs,
		MessageInfos:      file_ExtendCustomerExpireDateBySupport_proto_msgTypes,
	}.Build()
	File_ExtendCustomerExpireDateBySupport_proto = out.File
	file_ExtendCustomerExpireDateBySupport_proto_goTypes = nil
	file_ExtendCustomerExpireDateBySupport_proto_depIdxs = nil
}
