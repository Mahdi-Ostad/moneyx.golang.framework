// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.2
// source: PakistanCredit.proto

package PakistanCredit

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	common "moneyx.golang.framework/integration/common"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddAccountingBuyPakistanCreditChargeDocumentsResponseIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsDone        bool                   `protobuf:"varint,1,opt,name=IsDone,proto3" json:"IsDone,omitempty"`
	Failure       *common.Failure        `protobuf:"bytes,2,opt,name=Failure,proto3" json:"Failure,omitempty"`
	CorrelationId string                 `protobuf:"bytes,3,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,4,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddAccountingBuyPakistanCreditChargeDocumentsResponseIntegratedCommand) Reset() {
	*x = AddAccountingBuyPakistanCreditChargeDocumentsResponseIntegratedCommand{}
	mi := &file_PakistanCredit_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAccountingBuyPakistanCreditChargeDocumentsResponseIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAccountingBuyPakistanCreditChargeDocumentsResponseIntegratedCommand) ProtoMessage() {}

func (x *AddAccountingBuyPakistanCreditChargeDocumentsResponseIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_PakistanCredit_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAccountingBuyPakistanCreditChargeDocumentsResponseIntegratedCommand.ProtoReflect.Descriptor instead.
func (*AddAccountingBuyPakistanCreditChargeDocumentsResponseIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_PakistanCredit_proto_rawDescGZIP(), []int{0}
}

func (x *AddAccountingBuyPakistanCreditChargeDocumentsResponseIntegratedCommand) GetIsDone() bool {
	if x != nil {
		return x.IsDone
	}
	return false
}

func (x *AddAccountingBuyPakistanCreditChargeDocumentsResponseIntegratedCommand) GetFailure() *common.Failure {
	if x != nil {
		return x.Failure
	}
	return nil
}

func (x *AddAccountingBuyPakistanCreditChargeDocumentsResponseIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *AddAccountingBuyPakistanCreditChargeDocumentsResponseIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type PakistanCreditCheckCustomerActivationResponseIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsEnable      bool                   `protobuf:"varint,1,opt,name=IsEnable,proto3" json:"IsEnable,omitempty"`
	CustomerId    string                 `protobuf:"bytes,2,opt,name=CustomerId,proto3" json:"CustomerId,omitempty"`
	Failure       *common.Failure        `protobuf:"bytes,3,opt,name=Failure,proto3" json:"Failure,omitempty"`
	ManagerId     string                 `protobuf:"bytes,4,opt,name=ManagerId,proto3" json:"ManagerId,omitempty"`
	CorrelationId string                 `protobuf:"bytes,5,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,6,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PakistanCreditCheckCustomerActivationResponseIntegratedCommand) Reset() {
	*x = PakistanCreditCheckCustomerActivationResponseIntegratedCommand{}
	mi := &file_PakistanCredit_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PakistanCreditCheckCustomerActivationResponseIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PakistanCreditCheckCustomerActivationResponseIntegratedCommand) ProtoMessage() {}

func (x *PakistanCreditCheckCustomerActivationResponseIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_PakistanCredit_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PakistanCreditCheckCustomerActivationResponseIntegratedCommand.ProtoReflect.Descriptor instead.
func (*PakistanCreditCheckCustomerActivationResponseIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_PakistanCredit_proto_rawDescGZIP(), []int{1}
}

func (x *PakistanCreditCheckCustomerActivationResponseIntegratedCommand) GetIsEnable() bool {
	if x != nil {
		return x.IsEnable
	}
	return false
}

func (x *PakistanCreditCheckCustomerActivationResponseIntegratedCommand) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *PakistanCreditCheckCustomerActivationResponseIntegratedCommand) GetFailure() *common.Failure {
	if x != nil {
		return x.Failure
	}
	return nil
}

func (x *PakistanCreditCheckCustomerActivationResponseIntegratedCommand) GetManagerId() string {
	if x != nil {
		return x.ManagerId
	}
	return ""
}

func (x *PakistanCreditCheckCustomerActivationResponseIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *PakistanCreditCheckCustomerActivationResponseIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type BuyPakistanCreditChargeCreditReductionResponseIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsDone        bool                   `protobuf:"varint,1,opt,name=IsDone,proto3" json:"IsDone,omitempty"`
	Failure       *common.Failure        `protobuf:"bytes,2,opt,name=Failure,proto3" json:"Failure,omitempty"`
	CorrelationId string                 `protobuf:"bytes,3,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,4,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BuyPakistanCreditChargeCreditReductionResponseIntegratedCommand) Reset() {
	*x = BuyPakistanCreditChargeCreditReductionResponseIntegratedCommand{}
	mi := &file_PakistanCredit_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuyPakistanCreditChargeCreditReductionResponseIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyPakistanCreditChargeCreditReductionResponseIntegratedCommand) ProtoMessage() {}

func (x *BuyPakistanCreditChargeCreditReductionResponseIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_PakistanCredit_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyPakistanCreditChargeCreditReductionResponseIntegratedCommand.ProtoReflect.Descriptor instead.
func (*BuyPakistanCreditChargeCreditReductionResponseIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_PakistanCredit_proto_rawDescGZIP(), []int{2}
}

func (x *BuyPakistanCreditChargeCreditReductionResponseIntegratedCommand) GetIsDone() bool {
	if x != nil {
		return x.IsDone
	}
	return false
}

func (x *BuyPakistanCreditChargeCreditReductionResponseIntegratedCommand) GetFailure() *common.Failure {
	if x != nil {
		return x.Failure
	}
	return nil
}

func (x *BuyPakistanCreditChargeCreditReductionResponseIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *BuyPakistanCreditChargeCreditReductionResponseIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type BuyPakistanCreditChargeByAfghanCellResponseIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsDone        bool                   `protobuf:"varint,1,opt,name=IsDone,proto3" json:"IsDone,omitempty"`
	Failure       *common.Failure        `protobuf:"bytes,2,opt,name=Failure,proto3" json:"Failure,omitempty"`
	CorrelationId string                 `protobuf:"bytes,3,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,4,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BuyPakistanCreditChargeByAfghanCellResponseIntegratedCommand) Reset() {
	*x = BuyPakistanCreditChargeByAfghanCellResponseIntegratedCommand{}
	mi := &file_PakistanCredit_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuyPakistanCreditChargeByAfghanCellResponseIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyPakistanCreditChargeByAfghanCellResponseIntegratedCommand) ProtoMessage() {}

func (x *BuyPakistanCreditChargeByAfghanCellResponseIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_PakistanCredit_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyPakistanCreditChargeByAfghanCellResponseIntegratedCommand.ProtoReflect.Descriptor instead.
func (*BuyPakistanCreditChargeByAfghanCellResponseIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_PakistanCredit_proto_rawDescGZIP(), []int{3}
}

func (x *BuyPakistanCreditChargeByAfghanCellResponseIntegratedCommand) GetIsDone() bool {
	if x != nil {
		return x.IsDone
	}
	return false
}

func (x *BuyPakistanCreditChargeByAfghanCellResponseIntegratedCommand) GetFailure() *common.Failure {
	if x != nil {
		return x.Failure
	}
	return nil
}

func (x *BuyPakistanCreditChargeByAfghanCellResponseIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *BuyPakistanCreditChargeByAfghanCellResponseIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type PakistanCreditCheckManagerChargeActivationResponseIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsEnable      bool                   `protobuf:"varint,1,opt,name=IsEnable,proto3" json:"IsEnable,omitempty"`
	Failure       *common.Failure        `protobuf:"bytes,2,opt,name=Failure,proto3" json:"Failure,omitempty"`
	CorrelationId string                 `protobuf:"bytes,3,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,4,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PakistanCreditCheckManagerChargeActivationResponseIntegratedCommand) Reset() {
	*x = PakistanCreditCheckManagerChargeActivationResponseIntegratedCommand{}
	mi := &file_PakistanCredit_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PakistanCreditCheckManagerChargeActivationResponseIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PakistanCreditCheckManagerChargeActivationResponseIntegratedCommand) ProtoMessage() {}

func (x *PakistanCreditCheckManagerChargeActivationResponseIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_PakistanCredit_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PakistanCreditCheckManagerChargeActivationResponseIntegratedCommand.ProtoReflect.Descriptor instead.
func (*PakistanCreditCheckManagerChargeActivationResponseIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_PakistanCredit_proto_rawDescGZIP(), []int{4}
}

func (x *PakistanCreditCheckManagerChargeActivationResponseIntegratedCommand) GetIsEnable() bool {
	if x != nil {
		return x.IsEnable
	}
	return false
}

func (x *PakistanCreditCheckManagerChargeActivationResponseIntegratedCommand) GetFailure() *common.Failure {
	if x != nil {
		return x.Failure
	}
	return nil
}

func (x *PakistanCreditCheckManagerChargeActivationResponseIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *PakistanCreditCheckManagerChargeActivationResponseIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type PakistanCreditCheckCustomerActivationIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserName      string                 `protobuf:"bytes,1,opt,name=UserName,proto3" json:"UserName,omitempty"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=AccountId,proto3" json:"AccountId,omitempty"`
	ManagerId     string                 `protobuf:"bytes,3,opt,name=ManagerId,proto3" json:"ManagerId,omitempty"`
	CorrelationId string                 `protobuf:"bytes,4,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,5,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PakistanCreditCheckCustomerActivationIntegratedCommand) Reset() {
	*x = PakistanCreditCheckCustomerActivationIntegratedCommand{}
	mi := &file_PakistanCredit_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PakistanCreditCheckCustomerActivationIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PakistanCreditCheckCustomerActivationIntegratedCommand) ProtoMessage() {}

func (x *PakistanCreditCheckCustomerActivationIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_PakistanCredit_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PakistanCreditCheckCustomerActivationIntegratedCommand.ProtoReflect.Descriptor instead.
func (*PakistanCreditCheckCustomerActivationIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_PakistanCredit_proto_rawDescGZIP(), []int{5}
}

func (x *PakistanCreditCheckCustomerActivationIntegratedCommand) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *PakistanCreditCheckCustomerActivationIntegratedCommand) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *PakistanCreditCheckCustomerActivationIntegratedCommand) GetManagerId() string {
	if x != nil {
		return x.ManagerId
	}
	return ""
}

func (x *PakistanCreditCheckCustomerActivationIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *PakistanCreditCheckCustomerActivationIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type BuyPakistanCreditChargeCreditReductionIntegratedCommand struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	AccountId              string                 `protobuf:"bytes,1,opt,name=AccountId,proto3" json:"AccountId,omitempty"`
	PackageTitle           string                 `protobuf:"bytes,2,opt,name=PackageTitle,proto3" json:"PackageTitle,omitempty"`
	ChargeTransactionId    string                 `protobuf:"bytes,3,opt,name=ChargeTransactionId,proto3" json:"ChargeTransactionId,omitempty"`
	Commission             *common.Money          `protobuf:"bytes,4,opt,name=Commission,proto3" json:"Commission,omitempty"`
	ExchangerDeductedMoney *common.Money          `protobuf:"bytes,5,opt,name=ExchangerDeductedMoney,proto3" json:"ExchangerDeductedMoney,omitempty"`
	OperatorName           string                 `protobuf:"bytes,6,opt,name=OperatorName,proto3" json:"OperatorName,omitempty"`
	PhoneNumber            string                 `protobuf:"bytes,7,opt,name=PhoneNumber,proto3" json:"PhoneNumber,omitempty"`
	ManagerId              string                 `protobuf:"bytes,8,opt,name=ManagerId,proto3" json:"ManagerId,omitempty"`
	CorrelationId          string                 `protobuf:"bytes,9,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id                     string                 `protobuf:"bytes,10,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *BuyPakistanCreditChargeCreditReductionIntegratedCommand) Reset() {
	*x = BuyPakistanCreditChargeCreditReductionIntegratedCommand{}
	mi := &file_PakistanCredit_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuyPakistanCreditChargeCreditReductionIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyPakistanCreditChargeCreditReductionIntegratedCommand) ProtoMessage() {}

func (x *BuyPakistanCreditChargeCreditReductionIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_PakistanCredit_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyPakistanCreditChargeCreditReductionIntegratedCommand.ProtoReflect.Descriptor instead.
func (*BuyPakistanCreditChargeCreditReductionIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_PakistanCredit_proto_rawDescGZIP(), []int{6}
}

func (x *BuyPakistanCreditChargeCreditReductionIntegratedCommand) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *BuyPakistanCreditChargeCreditReductionIntegratedCommand) GetPackageTitle() string {
	if x != nil {
		return x.PackageTitle
	}
	return ""
}

func (x *BuyPakistanCreditChargeCreditReductionIntegratedCommand) GetChargeTransactionId() string {
	if x != nil {
		return x.ChargeTransactionId
	}
	return ""
}

func (x *BuyPakistanCreditChargeCreditReductionIntegratedCommand) GetCommission() *common.Money {
	if x != nil {
		return x.Commission
	}
	return nil
}

func (x *BuyPakistanCreditChargeCreditReductionIntegratedCommand) GetExchangerDeductedMoney() *common.Money {
	if x != nil {
		return x.ExchangerDeductedMoney
	}
	return nil
}

func (x *BuyPakistanCreditChargeCreditReductionIntegratedCommand) GetOperatorName() string {
	if x != nil {
		return x.OperatorName
	}
	return ""
}

func (x *BuyPakistanCreditChargeCreditReductionIntegratedCommand) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *BuyPakistanCreditChargeCreditReductionIntegratedCommand) GetManagerId() string {
	if x != nil {
		return x.ManagerId
	}
	return ""
}

func (x *BuyPakistanCreditChargeCreditReductionIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *BuyPakistanCreditChargeCreditReductionIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AddAccountingBuyPakistanCreditChargeDocumentsIntegratedCommand struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	BuyChargeInfo *common.BuyChargeAccountingInfo `protobuf:"bytes,1,opt,name=BuyChargeInfo,proto3" json:"BuyChargeInfo,omitempty"`
	CustomerId    string                          `protobuf:"bytes,2,opt,name=CustomerId,proto3" json:"CustomerId,omitempty"`
	ManagerId     string                          `protobuf:"bytes,3,opt,name=ManagerId,proto3" json:"ManagerId,omitempty"`
	CorrelationId string                          `protobuf:"bytes,4,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                          `protobuf:"bytes,5,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddAccountingBuyPakistanCreditChargeDocumentsIntegratedCommand) Reset() {
	*x = AddAccountingBuyPakistanCreditChargeDocumentsIntegratedCommand{}
	mi := &file_PakistanCredit_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAccountingBuyPakistanCreditChargeDocumentsIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAccountingBuyPakistanCreditChargeDocumentsIntegratedCommand) ProtoMessage() {}

func (x *AddAccountingBuyPakistanCreditChargeDocumentsIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_PakistanCredit_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAccountingBuyPakistanCreditChargeDocumentsIntegratedCommand.ProtoReflect.Descriptor instead.
func (*AddAccountingBuyPakistanCreditChargeDocumentsIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_PakistanCredit_proto_rawDescGZIP(), []int{7}
}

func (x *AddAccountingBuyPakistanCreditChargeDocumentsIntegratedCommand) GetBuyChargeInfo() *common.BuyChargeAccountingInfo {
	if x != nil {
		return x.BuyChargeInfo
	}
	return nil
}

func (x *AddAccountingBuyPakistanCreditChargeDocumentsIntegratedCommand) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *AddAccountingBuyPakistanCreditChargeDocumentsIntegratedCommand) GetManagerId() string {
	if x != nil {
		return x.ManagerId
	}
	return ""
}

func (x *AddAccountingBuyPakistanCreditChargeDocumentsIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *AddAccountingBuyPakistanCreditChargeDocumentsIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type BuyPakistanCreditChargeByAfghanCellIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AmountPackage float64                `protobuf:"fixed64,1,opt,name=AmountPackage,proto3" json:"AmountPackage,omitempty"`
	TransactionId string                 `protobuf:"bytes,2,opt,name=TransactionId,proto3" json:"TransactionId,omitempty"`
	ChargeNumber  string                 `protobuf:"bytes,3,opt,name=ChargeNumber,proto3" json:"ChargeNumber,omitempty"`
	PackageCode   string                 `protobuf:"bytes,4,opt,name=PackageCode,proto3" json:"PackageCode,omitempty"`
	CorrelationId string                 `protobuf:"bytes,5,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,6,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BuyPakistanCreditChargeByAfghanCellIntegratedCommand) Reset() {
	*x = BuyPakistanCreditChargeByAfghanCellIntegratedCommand{}
	mi := &file_PakistanCredit_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuyPakistanCreditChargeByAfghanCellIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyPakistanCreditChargeByAfghanCellIntegratedCommand) ProtoMessage() {}

func (x *BuyPakistanCreditChargeByAfghanCellIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_PakistanCredit_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyPakistanCreditChargeByAfghanCellIntegratedCommand.ProtoReflect.Descriptor instead.
func (*BuyPakistanCreditChargeByAfghanCellIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_PakistanCredit_proto_rawDescGZIP(), []int{8}
}

func (x *BuyPakistanCreditChargeByAfghanCellIntegratedCommand) GetAmountPackage() float64 {
	if x != nil {
		return x.AmountPackage
	}
	return 0
}

func (x *BuyPakistanCreditChargeByAfghanCellIntegratedCommand) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *BuyPakistanCreditChargeByAfghanCellIntegratedCommand) GetChargeNumber() string {
	if x != nil {
		return x.ChargeNumber
	}
	return ""
}

func (x *BuyPakistanCreditChargeByAfghanCellIntegratedCommand) GetPackageCode() string {
	if x != nil {
		return x.PackageCode
	}
	return ""
}

func (x *BuyPakistanCreditChargeByAfghanCellIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *BuyPakistanCreditChargeByAfghanCellIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CommitOrRollbackAddedBuyPakistanCreditChargeAccountingDocumentIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsCommitted   bool                   `protobuf:"varint,1,opt,name=IsCommitted,proto3" json:"IsCommitted,omitempty"`
	CorrelationId string                 `protobuf:"bytes,2,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,3,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitOrRollbackAddedBuyPakistanCreditChargeAccountingDocumentIntegratedCommand) Reset() {
	*x = CommitOrRollbackAddedBuyPakistanCreditChargeAccountingDocumentIntegratedCommand{}
	mi := &file_PakistanCredit_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitOrRollbackAddedBuyPakistanCreditChargeAccountingDocumentIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitOrRollbackAddedBuyPakistanCreditChargeAccountingDocumentIntegratedCommand) ProtoMessage() {
}

func (x *CommitOrRollbackAddedBuyPakistanCreditChargeAccountingDocumentIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_PakistanCredit_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitOrRollbackAddedBuyPakistanCreditChargeAccountingDocumentIntegratedCommand.ProtoReflect.Descriptor instead.
func (*CommitOrRollbackAddedBuyPakistanCreditChargeAccountingDocumentIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_PakistanCredit_proto_rawDescGZIP(), []int{9}
}

func (x *CommitOrRollbackAddedBuyPakistanCreditChargeAccountingDocumentIntegratedCommand) GetIsCommitted() bool {
	if x != nil {
		return x.IsCommitted
	}
	return false
}

func (x *CommitOrRollbackAddedBuyPakistanCreditChargeAccountingDocumentIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *CommitOrRollbackAddedBuyPakistanCreditChargeAccountingDocumentIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CommitOrRollbackBuyPakistanCreditChargeCreditReductionIntegratedCommand struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	IsCommitted   bool                               `protobuf:"varint,1,opt,name=IsCommitted,proto3" json:"IsCommitted,omitempty"`
	Context       *common.CreditReductionMetaContext `protobuf:"bytes,2,opt,name=Context,proto3" json:"Context,omitempty"`
	CorrelationId string                             `protobuf:"bytes,3,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                             `protobuf:"bytes,4,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitOrRollbackBuyPakistanCreditChargeCreditReductionIntegratedCommand) Reset() {
	*x = CommitOrRollbackBuyPakistanCreditChargeCreditReductionIntegratedCommand{}
	mi := &file_PakistanCredit_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitOrRollbackBuyPakistanCreditChargeCreditReductionIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitOrRollbackBuyPakistanCreditChargeCreditReductionIntegratedCommand) ProtoMessage() {}

func (x *CommitOrRollbackBuyPakistanCreditChargeCreditReductionIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_PakistanCredit_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitOrRollbackBuyPakistanCreditChargeCreditReductionIntegratedCommand.ProtoReflect.Descriptor instead.
func (*CommitOrRollbackBuyPakistanCreditChargeCreditReductionIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_PakistanCredit_proto_rawDescGZIP(), []int{10}
}

func (x *CommitOrRollbackBuyPakistanCreditChargeCreditReductionIntegratedCommand) GetIsCommitted() bool {
	if x != nil {
		return x.IsCommitted
	}
	return false
}

func (x *CommitOrRollbackBuyPakistanCreditChargeCreditReductionIntegratedCommand) GetContext() *common.CreditReductionMetaContext {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *CommitOrRollbackBuyPakistanCreditChargeCreditReductionIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *CommitOrRollbackBuyPakistanCreditChargeCreditReductionIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type PakistanCreditCheckManagerChargeActivationIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ManagerId     string                 `protobuf:"bytes,1,opt,name=ManagerId,proto3" json:"ManagerId,omitempty"`
	CorrelationId string                 `protobuf:"bytes,2,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,3,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PakistanCreditCheckManagerChargeActivationIntegratedCommand) Reset() {
	*x = PakistanCreditCheckManagerChargeActivationIntegratedCommand{}
	mi := &file_PakistanCredit_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PakistanCreditCheckManagerChargeActivationIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PakistanCreditCheckManagerChargeActivationIntegratedCommand) ProtoMessage() {}

func (x *PakistanCreditCheckManagerChargeActivationIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_PakistanCredit_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PakistanCreditCheckManagerChargeActivationIntegratedCommand.ProtoReflect.Descriptor instead.
func (*PakistanCreditCheckManagerChargeActivationIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_PakistanCredit_proto_rawDescGZIP(), []int{11}
}

func (x *PakistanCreditCheckManagerChargeActivationIntegratedCommand) GetManagerId() string {
	if x != nil {
		return x.ManagerId
	}
	return ""
}

func (x *PakistanCreditCheckManagerChargeActivationIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *PakistanCreditCheckManagerChargeActivationIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_PakistanCredit_proto protoreflect.FileDescriptor

const file_PakistanCredit_proto_rawDesc = "" +
	"\n" +
	"\x14PakistanCredit.proto\x12\x0ePakistanCredit\x1a\fCommon.proto\"\xc1\x01\n" +
	"FAddAccountingBuyPakistanCreditChargeDocumentsResponseIntegratedCommand\x12\x16\n" +
	"\x06IsDone\x18\x01 \x01(\bR\x06IsDone\x12)\n" +
	"\aFailure\x18\x02 \x01(\v2\x0f.Common.FailureR\aFailure\x12$\n" +
	"\rCorrelationId\x18\x03 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x04 \x01(\tR\x02Id\"\xfb\x01\n" +
	">PakistanCreditCheckCustomerActivationResponseIntegratedCommand\x12\x1a\n" +
	"\bIsEnable\x18\x01 \x01(\bR\bIsEnable\x12\x1e\n" +
	"\n" +
	"CustomerId\x18\x02 \x01(\tR\n" +
	"CustomerId\x12)\n" +
	"\aFailure\x18\x03 \x01(\v2\x0f.Common.FailureR\aFailure\x12\x1c\n" +
	"\tManagerId\x18\x04 \x01(\tR\tManagerId\x12$\n" +
	"\rCorrelationId\x18\x05 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x06 \x01(\tR\x02Id\"\xba\x01\n" +
	"?BuyPakistanCreditChargeCreditReductionResponseIntegratedCommand\x12\x16\n" +
	"\x06IsDone\x18\x01 \x01(\bR\x06IsDone\x12)\n" +
	"\aFailure\x18\x02 \x01(\v2\x0f.Common.FailureR\aFailure\x12$\n" +
	"\rCorrelationId\x18\x03 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x04 \x01(\tR\x02Id\"\xb7\x01\n" +
	"<BuyPakistanCreditChargeByAfghanCellResponseIntegratedCommand\x12\x16\n" +
	"\x06IsDone\x18\x01 \x01(\bR\x06IsDone\x12)\n" +
	"\aFailure\x18\x02 \x01(\v2\x0f.Common.FailureR\aFailure\x12$\n" +
	"\rCorrelationId\x18\x03 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x04 \x01(\tR\x02Id\"\xc2\x01\n" +
	"CPakistanCreditCheckManagerChargeActivationResponseIntegratedCommand\x12\x1a\n" +
	"\bIsEnable\x18\x01 \x01(\bR\bIsEnable\x12)\n" +
	"\aFailure\x18\x02 \x01(\v2\x0f.Common.FailureR\aFailure\x12$\n" +
	"\rCorrelationId\x18\x03 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x04 \x01(\tR\x02Id\"\xc6\x01\n" +
	"6PakistanCreditCheckCustomerActivationIntegratedCommand\x12\x1a\n" +
	"\bUserName\x18\x01 \x01(\tR\bUserName\x12\x1c\n" +
	"\tAccountId\x18\x02 \x01(\tR\tAccountId\x12\x1c\n" +
	"\tManagerId\x18\x03 \x01(\tR\tManagerId\x12$\n" +
	"\rCorrelationId\x18\x04 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x05 \x01(\tR\x02Id\"\xbd\x03\n" +
	"7BuyPakistanCreditChargeCreditReductionIntegratedCommand\x12\x1c\n" +
	"\tAccountId\x18\x01 \x01(\tR\tAccountId\x12\"\n" +
	"\fPackageTitle\x18\x02 \x01(\tR\fPackageTitle\x120\n" +
	"\x13ChargeTransactionId\x18\x03 \x01(\tR\x13ChargeTransactionId\x12-\n" +
	"\n" +
	"Commission\x18\x04 \x01(\v2\r.Common.MoneyR\n" +
	"Commission\x12E\n" +
	"\x16ExchangerDeductedMoney\x18\x05 \x01(\v2\r.Common.MoneyR\x16ExchangerDeductedMoney\x12\"\n" +
	"\fOperatorName\x18\x06 \x01(\tR\fOperatorName\x12 \n" +
	"\vPhoneNumber\x18\a \x01(\tR\vPhoneNumber\x12\x1c\n" +
	"\tManagerId\x18\b \x01(\tR\tManagerId\x12$\n" +
	"\rCorrelationId\x18\t \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\n" +
	" \x01(\tR\x02Id\"\xfb\x01\n" +
	">AddAccountingBuyPakistanCreditChargeDocumentsIntegratedCommand\x12E\n" +
	"\rBuyChargeInfo\x18\x01 \x01(\v2\x1f.Common.BuyChargeAccountingInfoR\rBuyChargeInfo\x12\x1e\n" +
	"\n" +
	"CustomerId\x18\x02 \x01(\tR\n" +
	"CustomerId\x12\x1c\n" +
	"\tManagerId\x18\x03 \x01(\tR\tManagerId\x12$\n" +
	"\rCorrelationId\x18\x04 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x05 \x01(\tR\x02Id\"\xfe\x01\n" +
	"4BuyPakistanCreditChargeByAfghanCellIntegratedCommand\x12$\n" +
	"\rAmountPackage\x18\x01 \x01(\x01R\rAmountPackage\x12$\n" +
	"\rTransactionId\x18\x02 \x01(\tR\rTransactionId\x12\"\n" +
	"\fChargeNumber\x18\x03 \x01(\tR\fChargeNumber\x12 \n" +
	"\vPackageCode\x18\x04 \x01(\tR\vPackageCode\x12$\n" +
	"\rCorrelationId\x18\x05 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x06 \x01(\tR\x02Id\"\xa9\x01\n" +
	"OCommitOrRollbackAddedBuyPakistanCreditChargeAccountingDocumentIntegratedCommand\x12 \n" +
	"\vIsCommitted\x18\x01 \x01(\bR\vIsCommitted\x12$\n" +
	"\rCorrelationId\x18\x02 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x03 \x01(\tR\x02Id\"\xdf\x01\n" +
	"GCommitOrRollbackBuyPakistanCreditChargeCreditReductionIntegratedCommand\x12 \n" +
	"\vIsCommitted\x18\x01 \x01(\bR\vIsCommitted\x12<\n" +
	"\aContext\x18\x02 \x01(\v2\".Common.CreditReductionMetaContextR\aContext\x12$\n" +
	"\rCorrelationId\x18\x03 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x04 \x01(\tR\x02Id\"\x91\x01\n" +
	";PakistanCreditCheckManagerChargeActivationIntegratedCommand\x12\x1c\n" +
	"\tManagerId\x18\x01 \x01(\tR\tManagerId\x12$\n" +
	"\rCorrelationId\x18\x02 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x03 \x01(\tR\x02IdB^Z2moneyx.golang.framework/integration/PakistanCredit\xaa\x02'Ariyana.Framework.Schema.PakistanCreditb\x06proto3"

var (
	file_PakistanCredit_proto_rawDescOnce sync.Once
	file_PakistanCredit_proto_rawDescData []byte
)

func file_PakistanCredit_proto_rawDescGZIP() []byte {
	file_PakistanCredit_proto_rawDescOnce.Do(func() {
		file_PakistanCredit_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_PakistanCredit_proto_rawDesc), len(file_PakistanCredit_proto_rawDesc)))
	})
	return file_PakistanCredit_proto_rawDescData
}

var file_PakistanCredit_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_PakistanCredit_proto_goTypes = []any{
	(*AddAccountingBuyPakistanCreditChargeDocumentsResponseIntegratedCommand)(nil),          // 0: PakistanCredit.AddAccountingBuyPakistanCreditChargeDocumentsResponseIntegratedCommand
	(*PakistanCreditCheckCustomerActivationResponseIntegratedCommand)(nil),                  // 1: PakistanCredit.PakistanCreditCheckCustomerActivationResponseIntegratedCommand
	(*BuyPakistanCreditChargeCreditReductionResponseIntegratedCommand)(nil),                 // 2: PakistanCredit.BuyPakistanCreditChargeCreditReductionResponseIntegratedCommand
	(*BuyPakistanCreditChargeByAfghanCellResponseIntegratedCommand)(nil),                    // 3: PakistanCredit.BuyPakistanCreditChargeByAfghanCellResponseIntegratedCommand
	(*PakistanCreditCheckManagerChargeActivationResponseIntegratedCommand)(nil),             // 4: PakistanCredit.PakistanCreditCheckManagerChargeActivationResponseIntegratedCommand
	(*PakistanCreditCheckCustomerActivationIntegratedCommand)(nil),                          // 5: PakistanCredit.PakistanCreditCheckCustomerActivationIntegratedCommand
	(*BuyPakistanCreditChargeCreditReductionIntegratedCommand)(nil),                         // 6: PakistanCredit.BuyPakistanCreditChargeCreditReductionIntegratedCommand
	(*AddAccountingBuyPakistanCreditChargeDocumentsIntegratedCommand)(nil),                  // 7: PakistanCredit.AddAccountingBuyPakistanCreditChargeDocumentsIntegratedCommand
	(*BuyPakistanCreditChargeByAfghanCellIntegratedCommand)(nil),                            // 8: PakistanCredit.BuyPakistanCreditChargeByAfghanCellIntegratedCommand
	(*CommitOrRollbackAddedBuyPakistanCreditChargeAccountingDocumentIntegratedCommand)(nil), // 9: PakistanCredit.CommitOrRollbackAddedBuyPakistanCreditChargeAccountingDocumentIntegratedCommand
	(*CommitOrRollbackBuyPakistanCreditChargeCreditReductionIntegratedCommand)(nil),         // 10: PakistanCredit.CommitOrRollbackBuyPakistanCreditChargeCreditReductionIntegratedCommand
	(*PakistanCreditCheckManagerChargeActivationIntegratedCommand)(nil),                     // 11: PakistanCredit.PakistanCreditCheckManagerChargeActivationIntegratedCommand
	(*common.Failure)(nil),                    // 12: Common.Failure
	(*common.Money)(nil),                      // 13: Common.Money
	(*common.BuyChargeAccountingInfo)(nil),    // 14: Common.BuyChargeAccountingInfo
	(*common.CreditReductionMetaContext)(nil), // 15: Common.CreditReductionMetaContext
}
var file_PakistanCredit_proto_depIdxs = []int32{
	12, // 0: PakistanCredit.AddAccountingBuyPakistanCreditChargeDocumentsResponseIntegratedCommand.Failure:type_name -> Common.Failure
	12, // 1: PakistanCredit.PakistanCreditCheckCustomerActivationResponseIntegratedCommand.Failure:type_name -> Common.Failure
	12, // 2: PakistanCredit.BuyPakistanCreditChargeCreditReductionResponseIntegratedCommand.Failure:type_name -> Common.Failure
	12, // 3: PakistanCredit.BuyPakistanCreditChargeByAfghanCellResponseIntegratedCommand.Failure:type_name -> Common.Failure
	12, // 4: PakistanCredit.PakistanCreditCheckManagerChargeActivationResponseIntegratedCommand.Failure:type_name -> Common.Failure
	13, // 5: PakistanCredit.BuyPakistanCreditChargeCreditReductionIntegratedCommand.Commission:type_name -> Common.Money
	13, // 6: PakistanCredit.BuyPakistanCreditChargeCreditReductionIntegratedCommand.ExchangerDeductedMoney:type_name -> Common.Money
	14, // 7: PakistanCredit.AddAccountingBuyPakistanCreditChargeDocumentsIntegratedCommand.BuyChargeInfo:type_name -> Common.BuyChargeAccountingInfo
	15, // 8: PakistanCredit.CommitOrRollbackBuyPakistanCreditChargeCreditReductionIntegratedCommand.Context:type_name -> Common.CreditReductionMetaContext
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_PakistanCredit_proto_init() }
func file_PakistanCredit_proto_init() {
	if File_PakistanCredit_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_PakistanCredit_proto_rawDesc), len(file_PakistanCredit_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_PakistanCredit_proto_goTypes,
		DependencyIndexes: file_PakistanCredit_proto_depIdxs,
		MessageInfos:      file_PakistanCredit_proto_msgTypes,
	}.Build()
	File_PakistanCredit_proto = out.File
	file_PakistanCredit_proto_goTypes = nil
	file_PakistanCredit_proto_depIdxs = nil
}
