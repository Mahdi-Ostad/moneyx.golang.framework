// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.2
// source: AddTradeCurrency.proto

package AddTradeCurrency

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	common "moneyx.golang.framework/integration/common"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddTradeCurrencyAccountingDocumentsIntegratedCommand struct {
	state                             protoimpl.MessageState     `protogen:"open.v1"`
	BuyerDocumentInfo                 *AddAccountingDocumentInfo `protobuf:"bytes,1,opt,name=BuyerDocumentInfo,proto3" json:"BuyerDocumentInfo,omitempty"`
	SellerDocumentInfo                *AddAccountingDocumentInfo `protobuf:"bytes,2,opt,name=SellerDocumentInfo,proto3" json:"SellerDocumentInfo,omitempty"`
	BuyerRemovedUnknownTransactionId  *common.NullableString     `protobuf:"bytes,3,opt,name=BuyerRemovedUnknownTransactionId,proto3" json:"BuyerRemovedUnknownTransactionId,omitempty"`
	SellerRemovedUnknownTransactionId *common.NullableString     `protobuf:"bytes,4,opt,name=SellerRemovedUnknownTransactionId,proto3" json:"SellerRemovedUnknownTransactionId,omitempty"`
	Date                              int64                      `protobuf:"varint,5,opt,name=Date,proto3" json:"Date,omitempty"`
	Description                       string                     `protobuf:"bytes,6,opt,name=Description,proto3" json:"Description,omitempty"`
	TranId                            string                     `protobuf:"bytes,7,opt,name=TranId,proto3" json:"TranId,omitempty"`
	BankInfo                          *OpponentMetadata          `protobuf:"bytes,8,opt,name=BankInfo,proto3" json:"BankInfo,omitempty"`
	Rate                              string                     `protobuf:"bytes,9,opt,name=Rate,proto3" json:"Rate,omitempty"`
	IsPrivate                         bool                       `protobuf:"varint,10,opt,name=IsPrivate,proto3" json:"IsPrivate,omitempty"`
	UpdateCreditLimit                 bool                       `protobuf:"varint,11,opt,name=UpdateCreditLimit,proto3" json:"UpdateCreditLimit,omitempty"`
	ManagerId                         string                     `protobuf:"bytes,12,opt,name=ManagerId,proto3" json:"ManagerId,omitempty"`
	CorrelationId                     string                     `protobuf:"bytes,13,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id                                string                     `protobuf:"bytes,14,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields                     protoimpl.UnknownFields
	sizeCache                         protoimpl.SizeCache
}

func (x *AddTradeCurrencyAccountingDocumentsIntegratedCommand) Reset() {
	*x = AddTradeCurrencyAccountingDocumentsIntegratedCommand{}
	mi := &file_AddTradeCurrency_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTradeCurrencyAccountingDocumentsIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTradeCurrencyAccountingDocumentsIntegratedCommand) ProtoMessage() {}

func (x *AddTradeCurrencyAccountingDocumentsIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_AddTradeCurrency_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTradeCurrencyAccountingDocumentsIntegratedCommand.ProtoReflect.Descriptor instead.
func (*AddTradeCurrencyAccountingDocumentsIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_AddTradeCurrency_proto_rawDescGZIP(), []int{0}
}

func (x *AddTradeCurrencyAccountingDocumentsIntegratedCommand) GetBuyerDocumentInfo() *AddAccountingDocumentInfo {
	if x != nil {
		return x.BuyerDocumentInfo
	}
	return nil
}

func (x *AddTradeCurrencyAccountingDocumentsIntegratedCommand) GetSellerDocumentInfo() *AddAccountingDocumentInfo {
	if x != nil {
		return x.SellerDocumentInfo
	}
	return nil
}

func (x *AddTradeCurrencyAccountingDocumentsIntegratedCommand) GetBuyerRemovedUnknownTransactionId() *common.NullableString {
	if x != nil {
		return x.BuyerRemovedUnknownTransactionId
	}
	return nil
}

func (x *AddTradeCurrencyAccountingDocumentsIntegratedCommand) GetSellerRemovedUnknownTransactionId() *common.NullableString {
	if x != nil {
		return x.SellerRemovedUnknownTransactionId
	}
	return nil
}

func (x *AddTradeCurrencyAccountingDocumentsIntegratedCommand) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *AddTradeCurrencyAccountingDocumentsIntegratedCommand) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddTradeCurrencyAccountingDocumentsIntegratedCommand) GetTranId() string {
	if x != nil {
		return x.TranId
	}
	return ""
}

func (x *AddTradeCurrencyAccountingDocumentsIntegratedCommand) GetBankInfo() *OpponentMetadata {
	if x != nil {
		return x.BankInfo
	}
	return nil
}

func (x *AddTradeCurrencyAccountingDocumentsIntegratedCommand) GetRate() string {
	if x != nil {
		return x.Rate
	}
	return ""
}

func (x *AddTradeCurrencyAccountingDocumentsIntegratedCommand) GetIsPrivate() bool {
	if x != nil {
		return x.IsPrivate
	}
	return false
}

func (x *AddTradeCurrencyAccountingDocumentsIntegratedCommand) GetUpdateCreditLimit() bool {
	if x != nil {
		return x.UpdateCreditLimit
	}
	return false
}

func (x *AddTradeCurrencyAccountingDocumentsIntegratedCommand) GetManagerId() string {
	if x != nil {
		return x.ManagerId
	}
	return ""
}

func (x *AddTradeCurrencyAccountingDocumentsIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *AddTradeCurrencyAccountingDocumentsIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type OpponentMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Money         *common.Money          `protobuf:"bytes,2,opt,name=Money,proto3" json:"Money,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OpponentMetadata) Reset() {
	*x = OpponentMetadata{}
	mi := &file_AddTradeCurrency_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpponentMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpponentMetadata) ProtoMessage() {}

func (x *OpponentMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_AddTradeCurrency_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpponentMetadata.ProtoReflect.Descriptor instead.
func (*OpponentMetadata) Descriptor() ([]byte, []int) {
	return file_AddTradeCurrency_proto_rawDescGZIP(), []int{1}
}

func (x *OpponentMetadata) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OpponentMetadata) GetMoney() *common.Money {
	if x != nil {
		return x.Money
	}
	return nil
}

type AddAccountingDocumentInfo struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	AccountId       string                 `protobuf:"bytes,1,opt,name=AccountId,proto3" json:"AccountId,omitempty"`
	Money           *common.MoneyDocument  `protobuf:"bytes,2,opt,name=Money,proto3" json:"Money,omitempty"`
	CommissionMoney *common.MoneyDocument  `protobuf:"bytes,3,opt,name=CommissionMoney,proto3" json:"CommissionMoney,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AddAccountingDocumentInfo) Reset() {
	*x = AddAccountingDocumentInfo{}
	mi := &file_AddTradeCurrency_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAccountingDocumentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAccountingDocumentInfo) ProtoMessage() {}

func (x *AddAccountingDocumentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_AddTradeCurrency_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAccountingDocumentInfo.ProtoReflect.Descriptor instead.
func (*AddAccountingDocumentInfo) Descriptor() ([]byte, []int) {
	return file_AddTradeCurrency_proto_rawDescGZIP(), []int{2}
}

func (x *AddAccountingDocumentInfo) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *AddAccountingDocumentInfo) GetMoney() *common.MoneyDocument {
	if x != nil {
		return x.Money
	}
	return nil
}

func (x *AddAccountingDocumentInfo) GetCommissionMoney() *common.MoneyDocument {
	if x != nil {
		return x.CommissionMoney
	}
	return nil
}

type AddTradeCurrencyAccountingDocumentsResponseIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsDone        bool                   `protobuf:"varint,1,opt,name=IsDone,proto3" json:"IsDone,omitempty"`
	Failure       *common.Failure        `protobuf:"bytes,2,opt,name=Failure,proto3" json:"Failure,omitempty"`
	CorrelationId string                 `protobuf:"bytes,3,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,4,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddTradeCurrencyAccountingDocumentsResponseIntegratedCommand) Reset() {
	*x = AddTradeCurrencyAccountingDocumentsResponseIntegratedCommand{}
	mi := &file_AddTradeCurrency_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTradeCurrencyAccountingDocumentsResponseIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTradeCurrencyAccountingDocumentsResponseIntegratedCommand) ProtoMessage() {}

func (x *AddTradeCurrencyAccountingDocumentsResponseIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_AddTradeCurrency_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTradeCurrencyAccountingDocumentsResponseIntegratedCommand.ProtoReflect.Descriptor instead.
func (*AddTradeCurrencyAccountingDocumentsResponseIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_AddTradeCurrency_proto_rawDescGZIP(), []int{3}
}

func (x *AddTradeCurrencyAccountingDocumentsResponseIntegratedCommand) GetIsDone() bool {
	if x != nil {
		return x.IsDone
	}
	return false
}

func (x *AddTradeCurrencyAccountingDocumentsResponseIntegratedCommand) GetFailure() *common.Failure {
	if x != nil {
		return x.Failure
	}
	return nil
}

func (x *AddTradeCurrencyAccountingDocumentsResponseIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *AddTradeCurrencyAccountingDocumentsResponseIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AddTradeCurrencyBankReceiptsIntegratedCommand struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	BuyerBankInfo      *AddBankReceiptInfo    `protobuf:"bytes,1,opt,name=BuyerBankInfo,proto3" json:"BuyerBankInfo,omitempty"`
	SellerBankInfo     *AddBankReceiptInfo    `protobuf:"bytes,2,opt,name=SellerBankInfo,proto3" json:"SellerBankInfo,omitempty"`
	Date               int64                  `protobuf:"varint,3,opt,name=Date,proto3" json:"Date,omitempty"`
	Description        string                 `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	TradeTransactionId string                 `protobuf:"bytes,5,opt,name=TradeTransactionId,proto3" json:"TradeTransactionId,omitempty"`
	AccountInfo        *OpponentMetadata      `protobuf:"bytes,6,opt,name=AccountInfo,proto3" json:"AccountInfo,omitempty"`
	Rate               string                 `protobuf:"bytes,7,opt,name=Rate,proto3" json:"Rate,omitempty"`
	IsPrivate          bool                   `protobuf:"varint,8,opt,name=IsPrivate,proto3" json:"IsPrivate,omitempty"`
	ManagerId          string                 `protobuf:"bytes,9,opt,name=ManagerId,proto3" json:"ManagerId,omitempty"`
	CorrelationId      string                 `protobuf:"bytes,10,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id                 string                 `protobuf:"bytes,11,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *AddTradeCurrencyBankReceiptsIntegratedCommand) Reset() {
	*x = AddTradeCurrencyBankReceiptsIntegratedCommand{}
	mi := &file_AddTradeCurrency_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTradeCurrencyBankReceiptsIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTradeCurrencyBankReceiptsIntegratedCommand) ProtoMessage() {}

func (x *AddTradeCurrencyBankReceiptsIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_AddTradeCurrency_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTradeCurrencyBankReceiptsIntegratedCommand.ProtoReflect.Descriptor instead.
func (*AddTradeCurrencyBankReceiptsIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_AddTradeCurrency_proto_rawDescGZIP(), []int{4}
}

func (x *AddTradeCurrencyBankReceiptsIntegratedCommand) GetBuyerBankInfo() *AddBankReceiptInfo {
	if x != nil {
		return x.BuyerBankInfo
	}
	return nil
}

func (x *AddTradeCurrencyBankReceiptsIntegratedCommand) GetSellerBankInfo() *AddBankReceiptInfo {
	if x != nil {
		return x.SellerBankInfo
	}
	return nil
}

func (x *AddTradeCurrencyBankReceiptsIntegratedCommand) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *AddTradeCurrencyBankReceiptsIntegratedCommand) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddTradeCurrencyBankReceiptsIntegratedCommand) GetTradeTransactionId() string {
	if x != nil {
		return x.TradeTransactionId
	}
	return ""
}

func (x *AddTradeCurrencyBankReceiptsIntegratedCommand) GetAccountInfo() *OpponentMetadata {
	if x != nil {
		return x.AccountInfo
	}
	return nil
}

func (x *AddTradeCurrencyBankReceiptsIntegratedCommand) GetRate() string {
	if x != nil {
		return x.Rate
	}
	return ""
}

func (x *AddTradeCurrencyBankReceiptsIntegratedCommand) GetIsPrivate() bool {
	if x != nil {
		return x.IsPrivate
	}
	return false
}

func (x *AddTradeCurrencyBankReceiptsIntegratedCommand) GetManagerId() string {
	if x != nil {
		return x.ManagerId
	}
	return ""
}

func (x *AddTradeCurrencyBankReceiptsIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *AddTradeCurrencyBankReceiptsIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AddBankReceiptInfo struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	BankId             string                 `protobuf:"bytes,1,opt,name=BankId,proto3" json:"BankId,omitempty"`
	NewBankReceiptInfo *NewBankReceiptInfo    `protobuf:"bytes,2,opt,name=NewBankReceiptInfo,proto3" json:"NewBankReceiptInfo,omitempty"`
	OldBankReceiptInfo *OldBankReceiptInfo    `protobuf:"bytes,3,opt,name=OldBankReceiptInfo,proto3" json:"OldBankReceiptInfo,omitempty"`
	CommissionMoney    *common.MoneyDocument  `protobuf:"bytes,4,opt,name=CommissionMoney,proto3" json:"CommissionMoney,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *AddBankReceiptInfo) Reset() {
	*x = AddBankReceiptInfo{}
	mi := &file_AddTradeCurrency_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddBankReceiptInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBankReceiptInfo) ProtoMessage() {}

func (x *AddBankReceiptInfo) ProtoReflect() protoreflect.Message {
	mi := &file_AddTradeCurrency_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBankReceiptInfo.ProtoReflect.Descriptor instead.
func (*AddBankReceiptInfo) Descriptor() ([]byte, []int) {
	return file_AddTradeCurrency_proto_rawDescGZIP(), []int{5}
}

func (x *AddBankReceiptInfo) GetBankId() string {
	if x != nil {
		return x.BankId
	}
	return ""
}

func (x *AddBankReceiptInfo) GetNewBankReceiptInfo() *NewBankReceiptInfo {
	if x != nil {
		return x.NewBankReceiptInfo
	}
	return nil
}

func (x *AddBankReceiptInfo) GetOldBankReceiptInfo() *OldBankReceiptInfo {
	if x != nil {
		return x.OldBankReceiptInfo
	}
	return nil
}

func (x *AddBankReceiptInfo) GetCommissionMoney() *common.MoneyDocument {
	if x != nil {
		return x.CommissionMoney
	}
	return nil
}

type NewBankReceiptInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReceiptNumber string                 `protobuf:"bytes,1,opt,name=ReceiptNumber,proto3" json:"ReceiptNumber,omitempty"`
	Date          int64                  `protobuf:"varint,2,opt,name=Date,proto3" json:"Date,omitempty"`
	Money         *common.MoneyDocument  `protobuf:"bytes,3,opt,name=Money,proto3" json:"Money,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewBankReceiptInfo) Reset() {
	*x = NewBankReceiptInfo{}
	mi := &file_AddTradeCurrency_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewBankReceiptInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewBankReceiptInfo) ProtoMessage() {}

func (x *NewBankReceiptInfo) ProtoReflect() protoreflect.Message {
	mi := &file_AddTradeCurrency_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewBankReceiptInfo.ProtoReflect.Descriptor instead.
func (*NewBankReceiptInfo) Descriptor() ([]byte, []int) {
	return file_AddTradeCurrency_proto_rawDescGZIP(), []int{6}
}

func (x *NewBankReceiptInfo) GetReceiptNumber() string {
	if x != nil {
		return x.ReceiptNumber
	}
	return ""
}

func (x *NewBankReceiptInfo) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *NewBankReceiptInfo) GetMoney() *common.MoneyDocument {
	if x != nil {
		return x.Money
	}
	return nil
}

type OldBankReceiptInfo struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	OldTransactionId *common.NullableString `protobuf:"bytes,1,opt,name=OldTransactionId,proto3" json:"OldTransactionId,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *OldBankReceiptInfo) Reset() {
	*x = OldBankReceiptInfo{}
	mi := &file_AddTradeCurrency_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OldBankReceiptInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OldBankReceiptInfo) ProtoMessage() {}

func (x *OldBankReceiptInfo) ProtoReflect() protoreflect.Message {
	mi := &file_AddTradeCurrency_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OldBankReceiptInfo.ProtoReflect.Descriptor instead.
func (*OldBankReceiptInfo) Descriptor() ([]byte, []int) {
	return file_AddTradeCurrency_proto_rawDescGZIP(), []int{7}
}

func (x *OldBankReceiptInfo) GetOldTransactionId() *common.NullableString {
	if x != nil {
		return x.OldTransactionId
	}
	return nil
}

type AddTradeCurrencyBankReceiptsResponseIntegratedCommand struct {
	state                    protoimpl.MessageState      `protogen:"open.v1"`
	IsDone                   bool                        `protobuf:"varint,1,opt,name=IsDone,proto3" json:"IsDone,omitempty"`
	BuyerOldBankReceiptInfo  *ResponseOldBankReceiptInfo `protobuf:"bytes,2,opt,name=BuyerOldBankReceiptInfo,proto3" json:"BuyerOldBankReceiptInfo,omitempty"`
	SellerOldBankReceiptInfo *ResponseOldBankReceiptInfo `protobuf:"bytes,3,opt,name=SellerOldBankReceiptInfo,proto3" json:"SellerOldBankReceiptInfo,omitempty"`
	Failure                  *common.Failure             `protobuf:"bytes,4,opt,name=Failure,proto3" json:"Failure,omitempty"`
	CorrelationId            string                      `protobuf:"bytes,5,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id                       string                      `protobuf:"bytes,6,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *AddTradeCurrencyBankReceiptsResponseIntegratedCommand) Reset() {
	*x = AddTradeCurrencyBankReceiptsResponseIntegratedCommand{}
	mi := &file_AddTradeCurrency_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTradeCurrencyBankReceiptsResponseIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTradeCurrencyBankReceiptsResponseIntegratedCommand) ProtoMessage() {}

func (x *AddTradeCurrencyBankReceiptsResponseIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_AddTradeCurrency_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTradeCurrencyBankReceiptsResponseIntegratedCommand.ProtoReflect.Descriptor instead.
func (*AddTradeCurrencyBankReceiptsResponseIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_AddTradeCurrency_proto_rawDescGZIP(), []int{8}
}

func (x *AddTradeCurrencyBankReceiptsResponseIntegratedCommand) GetIsDone() bool {
	if x != nil {
		return x.IsDone
	}
	return false
}

func (x *AddTradeCurrencyBankReceiptsResponseIntegratedCommand) GetBuyerOldBankReceiptInfo() *ResponseOldBankReceiptInfo {
	if x != nil {
		return x.BuyerOldBankReceiptInfo
	}
	return nil
}

func (x *AddTradeCurrencyBankReceiptsResponseIntegratedCommand) GetSellerOldBankReceiptInfo() *ResponseOldBankReceiptInfo {
	if x != nil {
		return x.SellerOldBankReceiptInfo
	}
	return nil
}

func (x *AddTradeCurrencyBankReceiptsResponseIntegratedCommand) GetFailure() *common.Failure {
	if x != nil {
		return x.Failure
	}
	return nil
}

func (x *AddTradeCurrencyBankReceiptsResponseIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *AddTradeCurrencyBankReceiptsResponseIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ResponseOldBankReceiptInfo struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	OldBankReceiptInfo string                 `protobuf:"bytes,1,opt,name=OldBankReceiptInfo,proto3" json:"OldBankReceiptInfo,omitempty"`
	ReceiptDate        int64                  `protobuf:"varint,2,opt,name=ReceiptDate,proto3" json:"ReceiptDate,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ResponseOldBankReceiptInfo) Reset() {
	*x = ResponseOldBankReceiptInfo{}
	mi := &file_AddTradeCurrency_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseOldBankReceiptInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseOldBankReceiptInfo) ProtoMessage() {}

func (x *ResponseOldBankReceiptInfo) ProtoReflect() protoreflect.Message {
	mi := &file_AddTradeCurrency_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseOldBankReceiptInfo.ProtoReflect.Descriptor instead.
func (*ResponseOldBankReceiptInfo) Descriptor() ([]byte, []int) {
	return file_AddTradeCurrency_proto_rawDescGZIP(), []int{9}
}

func (x *ResponseOldBankReceiptInfo) GetOldBankReceiptInfo() string {
	if x != nil {
		return x.OldBankReceiptInfo
	}
	return ""
}

func (x *ResponseOldBankReceiptInfo) GetReceiptDate() int64 {
	if x != nil {
		return x.ReceiptDate
	}
	return 0
}

type AddTradeCurrencyFilesIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Files         []*common.FileItem     `protobuf:"bytes,1,rep,name=Files,proto3" json:"Files,omitempty"`
	ManagerId     string                 `protobuf:"bytes,2,opt,name=ManagerId,proto3" json:"ManagerId,omitempty"`
	CorrelationId string                 `protobuf:"bytes,3,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,4,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddTradeCurrencyFilesIntegratedCommand) Reset() {
	*x = AddTradeCurrencyFilesIntegratedCommand{}
	mi := &file_AddTradeCurrency_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTradeCurrencyFilesIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTradeCurrencyFilesIntegratedCommand) ProtoMessage() {}

func (x *AddTradeCurrencyFilesIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_AddTradeCurrency_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTradeCurrencyFilesIntegratedCommand.ProtoReflect.Descriptor instead.
func (*AddTradeCurrencyFilesIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_AddTradeCurrency_proto_rawDescGZIP(), []int{10}
}

func (x *AddTradeCurrencyFilesIntegratedCommand) GetFiles() []*common.FileItem {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *AddTradeCurrencyFilesIntegratedCommand) GetManagerId() string {
	if x != nil {
		return x.ManagerId
	}
	return ""
}

func (x *AddTradeCurrencyFilesIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *AddTradeCurrencyFilesIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AddTradeCurrencyFilesResponseIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsDone        bool                   `protobuf:"varint,1,opt,name=IsDone,proto3" json:"IsDone,omitempty"`
	Files         []string               `protobuf:"bytes,2,rep,name=Files,proto3" json:"Files,omitempty"`
	CorrelationId string                 `protobuf:"bytes,3,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,4,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddTradeCurrencyFilesResponseIntegratedCommand) Reset() {
	*x = AddTradeCurrencyFilesResponseIntegratedCommand{}
	mi := &file_AddTradeCurrency_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTradeCurrencyFilesResponseIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTradeCurrencyFilesResponseIntegratedCommand) ProtoMessage() {}

func (x *AddTradeCurrencyFilesResponseIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_AddTradeCurrency_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTradeCurrencyFilesResponseIntegratedCommand.ProtoReflect.Descriptor instead.
func (*AddTradeCurrencyFilesResponseIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_AddTradeCurrency_proto_rawDescGZIP(), []int{11}
}

func (x *AddTradeCurrencyFilesResponseIntegratedCommand) GetIsDone() bool {
	if x != nil {
		return x.IsDone
	}
	return false
}

func (x *AddTradeCurrencyFilesResponseIntegratedCommand) GetFiles() []string {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *AddTradeCurrencyFilesResponseIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *AddTradeCurrencyFilesResponseIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CommitOrRollbackAddedTradeCurrencyBankReceiptsIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsCommitted   bool                   `protobuf:"varint,1,opt,name=IsCommitted,proto3" json:"IsCommitted,omitempty"`
	CorrelationId string                 `protobuf:"bytes,2,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,3,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitOrRollbackAddedTradeCurrencyBankReceiptsIntegratedCommand) Reset() {
	*x = CommitOrRollbackAddedTradeCurrencyBankReceiptsIntegratedCommand{}
	mi := &file_AddTradeCurrency_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitOrRollbackAddedTradeCurrencyBankReceiptsIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitOrRollbackAddedTradeCurrencyBankReceiptsIntegratedCommand) ProtoMessage() {}

func (x *CommitOrRollbackAddedTradeCurrencyBankReceiptsIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_AddTradeCurrency_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitOrRollbackAddedTradeCurrencyBankReceiptsIntegratedCommand.ProtoReflect.Descriptor instead.
func (*CommitOrRollbackAddedTradeCurrencyBankReceiptsIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_AddTradeCurrency_proto_rawDescGZIP(), []int{12}
}

func (x *CommitOrRollbackAddedTradeCurrencyBankReceiptsIntegratedCommand) GetIsCommitted() bool {
	if x != nil {
		return x.IsCommitted
	}
	return false
}

func (x *CommitOrRollbackAddedTradeCurrencyBankReceiptsIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *CommitOrRollbackAddedTradeCurrencyBankReceiptsIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CommitOrRollbackAddedTradeCurrencyDocumentsIntegratedCommand struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	IsCommitted        bool                   `protobuf:"varint,1,opt,name=IsCommitted,proto3" json:"IsCommitted,omitempty"`
	BuyerWhatsappInfo  *common.WhatsappInfo   `protobuf:"bytes,2,opt,name=BuyerWhatsappInfo,proto3" json:"BuyerWhatsappInfo,omitempty"`
	SellerWhatsappInfo *common.WhatsappInfo   `protobuf:"bytes,3,opt,name=SellerWhatsappInfo,proto3" json:"SellerWhatsappInfo,omitempty"`
	CorrelationId      string                 `protobuf:"bytes,4,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id                 string                 `protobuf:"bytes,5,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CommitOrRollbackAddedTradeCurrencyDocumentsIntegratedCommand) Reset() {
	*x = CommitOrRollbackAddedTradeCurrencyDocumentsIntegratedCommand{}
	mi := &file_AddTradeCurrency_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitOrRollbackAddedTradeCurrencyDocumentsIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitOrRollbackAddedTradeCurrencyDocumentsIntegratedCommand) ProtoMessage() {}

func (x *CommitOrRollbackAddedTradeCurrencyDocumentsIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_AddTradeCurrency_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitOrRollbackAddedTradeCurrencyDocumentsIntegratedCommand.ProtoReflect.Descriptor instead.
func (*CommitOrRollbackAddedTradeCurrencyDocumentsIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_AddTradeCurrency_proto_rawDescGZIP(), []int{13}
}

func (x *CommitOrRollbackAddedTradeCurrencyDocumentsIntegratedCommand) GetIsCommitted() bool {
	if x != nil {
		return x.IsCommitted
	}
	return false
}

func (x *CommitOrRollbackAddedTradeCurrencyDocumentsIntegratedCommand) GetBuyerWhatsappInfo() *common.WhatsappInfo {
	if x != nil {
		return x.BuyerWhatsappInfo
	}
	return nil
}

func (x *CommitOrRollbackAddedTradeCurrencyDocumentsIntegratedCommand) GetSellerWhatsappInfo() *common.WhatsappInfo {
	if x != nil {
		return x.SellerWhatsappInfo
	}
	return nil
}

func (x *CommitOrRollbackAddedTradeCurrencyDocumentsIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *CommitOrRollbackAddedTradeCurrencyDocumentsIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RollbackAddedTradeCurrencyFilesTransactionFilesIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CorrelationId string                 `protobuf:"bytes,1,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RollbackAddedTradeCurrencyFilesTransactionFilesIntegratedCommand) Reset() {
	*x = RollbackAddedTradeCurrencyFilesTransactionFilesIntegratedCommand{}
	mi := &file_AddTradeCurrency_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollbackAddedTradeCurrencyFilesTransactionFilesIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackAddedTradeCurrencyFilesTransactionFilesIntegratedCommand) ProtoMessage() {}

func (x *RollbackAddedTradeCurrencyFilesTransactionFilesIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_AddTradeCurrency_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackAddedTradeCurrencyFilesTransactionFilesIntegratedCommand.ProtoReflect.Descriptor instead.
func (*RollbackAddedTradeCurrencyFilesTransactionFilesIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_AddTradeCurrency_proto_rawDescGZIP(), []int{14}
}

func (x *RollbackAddedTradeCurrencyFilesTransactionFilesIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *RollbackAddedTradeCurrencyFilesTransactionFilesIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_AddTradeCurrency_proto protoreflect.FileDescriptor

const file_AddTradeCurrency_proto_rawDesc = "" +
	"\n" +
	"\x16AddTradeCurrency.proto\x12\x10AddTradeCurrency\x1a\fCommon.proto\"\xfa\x05\n" +
	"4AddTradeCurrencyAccountingDocumentsIntegratedCommand\x12Y\n" +
	"\x11BuyerDocumentInfo\x18\x01 \x01(\v2+.AddTradeCurrency.AddAccountingDocumentInfoR\x11BuyerDocumentInfo\x12[\n" +
	"\x12SellerDocumentInfo\x18\x02 \x01(\v2+.AddTradeCurrency.AddAccountingDocumentInfoR\x12SellerDocumentInfo\x12b\n" +
	" BuyerRemovedUnknownTransactionId\x18\x03 \x01(\v2\x16.Common.NullableStringR BuyerRemovedUnknownTransactionId\x12d\n" +
	"!SellerRemovedUnknownTransactionId\x18\x04 \x01(\v2\x16.Common.NullableStringR!SellerRemovedUnknownTransactionId\x12\x12\n" +
	"\x04Date\x18\x05 \x01(\x03R\x04Date\x12 \n" +
	"\vDescription\x18\x06 \x01(\tR\vDescription\x12\x16\n" +
	"\x06TranId\x18\a \x01(\tR\x06TranId\x12>\n" +
	"\bBankInfo\x18\b \x01(\v2\".AddTradeCurrency.OpponentMetadataR\bBankInfo\x12\x12\n" +
	"\x04Rate\x18\t \x01(\tR\x04Rate\x12\x1c\n" +
	"\tIsPrivate\x18\n" +
	" \x01(\bR\tIsPrivate\x12,\n" +
	"\x11UpdateCreditLimit\x18\v \x01(\bR\x11UpdateCreditLimit\x12\x1c\n" +
	"\tManagerId\x18\f \x01(\tR\tManagerId\x12$\n" +
	"\rCorrelationId\x18\r \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x0e \x01(\tR\x02Id\"G\n" +
	"\x10OpponentMetadata\x12\x0e\n" +
	"\x02Id\x18\x01 \x01(\tR\x02Id\x12#\n" +
	"\x05Money\x18\x02 \x01(\v2\r.Common.MoneyR\x05Money\"\xa7\x01\n" +
	"\x19AddAccountingDocumentInfo\x12\x1c\n" +
	"\tAccountId\x18\x01 \x01(\tR\tAccountId\x12+\n" +
	"\x05Money\x18\x02 \x01(\v2\x15.Common.MoneyDocumentR\x05Money\x12?\n" +
	"\x0fCommissionMoney\x18\x03 \x01(\v2\x15.Common.MoneyDocumentR\x0fCommissionMoney\"\xb7\x01\n" +
	"<AddTradeCurrencyAccountingDocumentsResponseIntegratedCommand\x12\x16\n" +
	"\x06IsDone\x18\x01 \x01(\bR\x06IsDone\x12)\n" +
	"\aFailure\x18\x02 \x01(\v2\x0f.Common.FailureR\aFailure\x12$\n" +
	"\rCorrelationId\x18\x03 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x04 \x01(\tR\x02Id\"\xfb\x03\n" +
	"-AddTradeCurrencyBankReceiptsIntegratedCommand\x12J\n" +
	"\rBuyerBankInfo\x18\x01 \x01(\v2$.AddTradeCurrency.AddBankReceiptInfoR\rBuyerBankInfo\x12L\n" +
	"\x0eSellerBankInfo\x18\x02 \x01(\v2$.AddTradeCurrency.AddBankReceiptInfoR\x0eSellerBankInfo\x12\x12\n" +
	"\x04Date\x18\x03 \x01(\x03R\x04Date\x12 \n" +
	"\vDescription\x18\x04 \x01(\tR\vDescription\x12.\n" +
	"\x12TradeTransactionId\x18\x05 \x01(\tR\x12TradeTransactionId\x12D\n" +
	"\vAccountInfo\x18\x06 \x01(\v2\".AddTradeCurrency.OpponentMetadataR\vAccountInfo\x12\x12\n" +
	"\x04Rate\x18\a \x01(\tR\x04Rate\x12\x1c\n" +
	"\tIsPrivate\x18\b \x01(\bR\tIsPrivate\x12\x1c\n" +
	"\tManagerId\x18\t \x01(\tR\tManagerId\x12$\n" +
	"\rCorrelationId\x18\n" +
	" \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\v \x01(\tR\x02Id\"\x99\x02\n" +
	"\x12AddBankReceiptInfo\x12\x16\n" +
	"\x06BankId\x18\x01 \x01(\tR\x06BankId\x12T\n" +
	"\x12NewBankReceiptInfo\x18\x02 \x01(\v2$.AddTradeCurrency.NewBankReceiptInfoR\x12NewBankReceiptInfo\x12T\n" +
	"\x12OldBankReceiptInfo\x18\x03 \x01(\v2$.AddTradeCurrency.OldBankReceiptInfoR\x12OldBankReceiptInfo\x12?\n" +
	"\x0fCommissionMoney\x18\x04 \x01(\v2\x15.Common.MoneyDocumentR\x0fCommissionMoney\"{\n" +
	"\x12NewBankReceiptInfo\x12$\n" +
	"\rReceiptNumber\x18\x01 \x01(\tR\rReceiptNumber\x12\x12\n" +
	"\x04Date\x18\x02 \x01(\x03R\x04Date\x12+\n" +
	"\x05Money\x18\x03 \x01(\v2\x15.Common.MoneyDocumentR\x05Money\"X\n" +
	"\x12OldBankReceiptInfo\x12B\n" +
	"\x10OldTransactionId\x18\x01 \x01(\v2\x16.Common.NullableStringR\x10OldTransactionId\"\x82\x03\n" +
	"5AddTradeCurrencyBankReceiptsResponseIntegratedCommand\x12\x16\n" +
	"\x06IsDone\x18\x01 \x01(\bR\x06IsDone\x12f\n" +
	"\x17BuyerOldBankReceiptInfo\x18\x02 \x01(\v2,.AddTradeCurrency.ResponseOldBankReceiptInfoR\x17BuyerOldBankReceiptInfo\x12h\n" +
	"\x18SellerOldBankReceiptInfo\x18\x03 \x01(\v2,.AddTradeCurrency.ResponseOldBankReceiptInfoR\x18SellerOldBankReceiptInfo\x12)\n" +
	"\aFailure\x18\x04 \x01(\v2\x0f.Common.FailureR\aFailure\x12$\n" +
	"\rCorrelationId\x18\x05 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x06 \x01(\tR\x02Id\"n\n" +
	"\x1aResponseOldBankReceiptInfo\x12.\n" +
	"\x12OldBankReceiptInfo\x18\x01 \x01(\tR\x12OldBankReceiptInfo\x12 \n" +
	"\vReceiptDate\x18\x02 \x01(\x03R\vReceiptDate\"\xa4\x01\n" +
	"&AddTradeCurrencyFilesIntegratedCommand\x12&\n" +
	"\x05Files\x18\x01 \x03(\v2\x10.Common.FileItemR\x05Files\x12\x1c\n" +
	"\tManagerId\x18\x02 \x01(\tR\tManagerId\x12$\n" +
	"\rCorrelationId\x18\x03 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x04 \x01(\tR\x02Id\"\x94\x01\n" +
	".AddTradeCurrencyFilesResponseIntegratedCommand\x12\x16\n" +
	"\x06IsDone\x18\x01 \x01(\bR\x06IsDone\x12\x14\n" +
	"\x05Files\x18\x02 \x03(\tR\x05Files\x12$\n" +
	"\rCorrelationId\x18\x03 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x04 \x01(\tR\x02Id\"\x99\x01\n" +
	"?CommitOrRollbackAddedTradeCurrencyBankReceiptsIntegratedCommand\x12 \n" +
	"\vIsCommitted\x18\x01 \x01(\bR\vIsCommitted\x12$\n" +
	"\rCorrelationId\x18\x02 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x03 \x01(\tR\x02Id\"\xa0\x02\n" +
	"<CommitOrRollbackAddedTradeCurrencyDocumentsIntegratedCommand\x12 \n" +
	"\vIsCommitted\x18\x01 \x01(\bR\vIsCommitted\x12B\n" +
	"\x11BuyerWhatsappInfo\x18\x02 \x01(\v2\x14.Common.WhatsappInfoR\x11BuyerWhatsappInfo\x12D\n" +
	"\x12SellerWhatsappInfo\x18\x03 \x01(\v2\x14.Common.WhatsappInfoR\x12SellerWhatsappInfo\x12$\n" +
	"\rCorrelationId\x18\x04 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x05 \x01(\tR\x02Id\"x\n" +
	"@RollbackAddedTradeCurrencyFilesTransactionFilesIntegratedCommand\x12$\n" +
	"\rCorrelationId\x18\x01 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x02 \x01(\tR\x02IdBbZ4moneyx.golang.framework/integration/AddTradeCurrency\xaa\x02)Ariyana.Framework.Schema.AddTradeCurrencyb\x06proto3"

var (
	file_AddTradeCurrency_proto_rawDescOnce sync.Once
	file_AddTradeCurrency_proto_rawDescData []byte
)

func file_AddTradeCurrency_proto_rawDescGZIP() []byte {
	file_AddTradeCurrency_proto_rawDescOnce.Do(func() {
		file_AddTradeCurrency_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_AddTradeCurrency_proto_rawDesc), len(file_AddTradeCurrency_proto_rawDesc)))
	})
	return file_AddTradeCurrency_proto_rawDescData
}

var file_AddTradeCurrency_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_AddTradeCurrency_proto_goTypes = []any{
	(*AddTradeCurrencyAccountingDocumentsIntegratedCommand)(nil),             // 0: AddTradeCurrency.AddTradeCurrencyAccountingDocumentsIntegratedCommand
	(*OpponentMetadata)(nil),                                                 // 1: AddTradeCurrency.OpponentMetadata
	(*AddAccountingDocumentInfo)(nil),                                        // 2: AddTradeCurrency.AddAccountingDocumentInfo
	(*AddTradeCurrencyAccountingDocumentsResponseIntegratedCommand)(nil),     // 3: AddTradeCurrency.AddTradeCurrencyAccountingDocumentsResponseIntegratedCommand
	(*AddTradeCurrencyBankReceiptsIntegratedCommand)(nil),                    // 4: AddTradeCurrency.AddTradeCurrencyBankReceiptsIntegratedCommand
	(*AddBankReceiptInfo)(nil),                                               // 5: AddTradeCurrency.AddBankReceiptInfo
	(*NewBankReceiptInfo)(nil),                                               // 6: AddTradeCurrency.NewBankReceiptInfo
	(*OldBankReceiptInfo)(nil),                                               // 7: AddTradeCurrency.OldBankReceiptInfo
	(*AddTradeCurrencyBankReceiptsResponseIntegratedCommand)(nil),            // 8: AddTradeCurrency.AddTradeCurrencyBankReceiptsResponseIntegratedCommand
	(*ResponseOldBankReceiptInfo)(nil),                                       // 9: AddTradeCurrency.ResponseOldBankReceiptInfo
	(*AddTradeCurrencyFilesIntegratedCommand)(nil),                           // 10: AddTradeCurrency.AddTradeCurrencyFilesIntegratedCommand
	(*AddTradeCurrencyFilesResponseIntegratedCommand)(nil),                   // 11: AddTradeCurrency.AddTradeCurrencyFilesResponseIntegratedCommand
	(*CommitOrRollbackAddedTradeCurrencyBankReceiptsIntegratedCommand)(nil),  // 12: AddTradeCurrency.CommitOrRollbackAddedTradeCurrencyBankReceiptsIntegratedCommand
	(*CommitOrRollbackAddedTradeCurrencyDocumentsIntegratedCommand)(nil),     // 13: AddTradeCurrency.CommitOrRollbackAddedTradeCurrencyDocumentsIntegratedCommand
	(*RollbackAddedTradeCurrencyFilesTransactionFilesIntegratedCommand)(nil), // 14: AddTradeCurrency.RollbackAddedTradeCurrencyFilesTransactionFilesIntegratedCommand
	(*common.NullableString)(nil),                                            // 15: Common.NullableString
	(*common.Money)(nil),                                                     // 16: Common.Money
	(*common.MoneyDocument)(nil),                                             // 17: Common.MoneyDocument
	(*common.Failure)(nil),                                                   // 18: Common.Failure
	(*common.FileItem)(nil),                                                  // 19: Common.FileItem
	(*common.WhatsappInfo)(nil),                                              // 20: Common.WhatsappInfo
}
var file_AddTradeCurrency_proto_depIdxs = []int32{
	2,  // 0: AddTradeCurrency.AddTradeCurrencyAccountingDocumentsIntegratedCommand.BuyerDocumentInfo:type_name -> AddTradeCurrency.AddAccountingDocumentInfo
	2,  // 1: AddTradeCurrency.AddTradeCurrencyAccountingDocumentsIntegratedCommand.SellerDocumentInfo:type_name -> AddTradeCurrency.AddAccountingDocumentInfo
	15, // 2: AddTradeCurrency.AddTradeCurrencyAccountingDocumentsIntegratedCommand.BuyerRemovedUnknownTransactionId:type_name -> Common.NullableString
	15, // 3: AddTradeCurrency.AddTradeCurrencyAccountingDocumentsIntegratedCommand.SellerRemovedUnknownTransactionId:type_name -> Common.NullableString
	1,  // 4: AddTradeCurrency.AddTradeCurrencyAccountingDocumentsIntegratedCommand.BankInfo:type_name -> AddTradeCurrency.OpponentMetadata
	16, // 5: AddTradeCurrency.OpponentMetadata.Money:type_name -> Common.Money
	17, // 6: AddTradeCurrency.AddAccountingDocumentInfo.Money:type_name -> Common.MoneyDocument
	17, // 7: AddTradeCurrency.AddAccountingDocumentInfo.CommissionMoney:type_name -> Common.MoneyDocument
	18, // 8: AddTradeCurrency.AddTradeCurrencyAccountingDocumentsResponseIntegratedCommand.Failure:type_name -> Common.Failure
	5,  // 9: AddTradeCurrency.AddTradeCurrencyBankReceiptsIntegratedCommand.BuyerBankInfo:type_name -> AddTradeCurrency.AddBankReceiptInfo
	5,  // 10: AddTradeCurrency.AddTradeCurrencyBankReceiptsIntegratedCommand.SellerBankInfo:type_name -> AddTradeCurrency.AddBankReceiptInfo
	1,  // 11: AddTradeCurrency.AddTradeCurrencyBankReceiptsIntegratedCommand.AccountInfo:type_name -> AddTradeCurrency.OpponentMetadata
	6,  // 12: AddTradeCurrency.AddBankReceiptInfo.NewBankReceiptInfo:type_name -> AddTradeCurrency.NewBankReceiptInfo
	7,  // 13: AddTradeCurrency.AddBankReceiptInfo.OldBankReceiptInfo:type_name -> AddTradeCurrency.OldBankReceiptInfo
	17, // 14: AddTradeCurrency.AddBankReceiptInfo.CommissionMoney:type_name -> Common.MoneyDocument
	17, // 15: AddTradeCurrency.NewBankReceiptInfo.Money:type_name -> Common.MoneyDocument
	15, // 16: AddTradeCurrency.OldBankReceiptInfo.OldTransactionId:type_name -> Common.NullableString
	9,  // 17: AddTradeCurrency.AddTradeCurrencyBankReceiptsResponseIntegratedCommand.BuyerOldBankReceiptInfo:type_name -> AddTradeCurrency.ResponseOldBankReceiptInfo
	9,  // 18: AddTradeCurrency.AddTradeCurrencyBankReceiptsResponseIntegratedCommand.SellerOldBankReceiptInfo:type_name -> AddTradeCurrency.ResponseOldBankReceiptInfo
	18, // 19: AddTradeCurrency.AddTradeCurrencyBankReceiptsResponseIntegratedCommand.Failure:type_name -> Common.Failure
	19, // 20: AddTradeCurrency.AddTradeCurrencyFilesIntegratedCommand.Files:type_name -> Common.FileItem
	20, // 21: AddTradeCurrency.CommitOrRollbackAddedTradeCurrencyDocumentsIntegratedCommand.BuyerWhatsappInfo:type_name -> Common.WhatsappInfo
	20, // 22: AddTradeCurrency.CommitOrRollbackAddedTradeCurrencyDocumentsIntegratedCommand.SellerWhatsappInfo:type_name -> Common.WhatsappInfo
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_AddTradeCurrency_proto_init() }
func file_AddTradeCurrency_proto_init() {
	if File_AddTradeCurrency_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_AddTradeCurrency_proto_rawDesc), len(file_AddTradeCurrency_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_AddTradeCurrency_proto_goTypes,
		DependencyIndexes: file_AddTradeCurrency_proto_depIdxs,
		MessageInfos:      file_AddTradeCurrency_proto_msgTypes,
	}.Build()
	File_AddTradeCurrency_proto = out.File
	file_AddTradeCurrency_proto_goTypes = nil
	file_AddTradeCurrency_proto_depIdxs = nil
}
