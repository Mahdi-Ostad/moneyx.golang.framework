// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.2
// source: DetermineAccountingTransactionCreditsAccountDocument.proto

package DetermineAccountingTransactionCreditsAccountDocument

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	common "moneyx.golang.framework/integration/common"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DetermineAccountingTransactionCreditsAccountDocumentIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId string                 `protobuf:"bytes,1,opt,name=TransactionId,proto3" json:"TransactionId,omitempty"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=AccountId,proto3" json:"AccountId,omitempty"`
	IsPrivate     bool                   `protobuf:"varint,3,opt,name=IsPrivate,proto3" json:"IsPrivate,omitempty"`
	Date          int64                  `protobuf:"varint,4,opt,name=Date,proto3" json:"Date,omitempty"`
	Money         *common.MoneyDocument  `protobuf:"bytes,5,opt,name=Money,proto3" json:"Money,omitempty"`
	Commission    *common.MoneyDocument  `protobuf:"bytes,6,opt,name=Commission,proto3" json:"Commission,omitempty"`
	ManagerId     string                 `protobuf:"bytes,7,opt,name=ManagerId,proto3" json:"ManagerId,omitempty"`
	CorrelationId string                 `protobuf:"bytes,8,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,9,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetermineAccountingTransactionCreditsAccountDocumentIntegratedCommand) Reset() {
	*x = DetermineAccountingTransactionCreditsAccountDocumentIntegratedCommand{}
	mi := &file_DetermineAccountingTransactionCreditsAccountDocument_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetermineAccountingTransactionCreditsAccountDocumentIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetermineAccountingTransactionCreditsAccountDocumentIntegratedCommand) ProtoMessage() {}

func (x *DetermineAccountingTransactionCreditsAccountDocumentIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_DetermineAccountingTransactionCreditsAccountDocument_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetermineAccountingTransactionCreditsAccountDocumentIntegratedCommand.ProtoReflect.Descriptor instead.
func (*DetermineAccountingTransactionCreditsAccountDocumentIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_DetermineAccountingTransactionCreditsAccountDocument_proto_rawDescGZIP(), []int{0}
}

func (x *DetermineAccountingTransactionCreditsAccountDocumentIntegratedCommand) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *DetermineAccountingTransactionCreditsAccountDocumentIntegratedCommand) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *DetermineAccountingTransactionCreditsAccountDocumentIntegratedCommand) GetIsPrivate() bool {
	if x != nil {
		return x.IsPrivate
	}
	return false
}

func (x *DetermineAccountingTransactionCreditsAccountDocumentIntegratedCommand) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *DetermineAccountingTransactionCreditsAccountDocumentIntegratedCommand) GetMoney() *common.MoneyDocument {
	if x != nil {
		return x.Money
	}
	return nil
}

func (x *DetermineAccountingTransactionCreditsAccountDocumentIntegratedCommand) GetCommission() *common.MoneyDocument {
	if x != nil {
		return x.Commission
	}
	return nil
}

func (x *DetermineAccountingTransactionCreditsAccountDocumentIntegratedCommand) GetManagerId() string {
	if x != nil {
		return x.ManagerId
	}
	return ""
}

func (x *DetermineAccountingTransactionCreditsAccountDocumentIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *DetermineAccountingTransactionCreditsAccountDocumentIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DetermineAccountingTransactionCreditsAccountDocumentAttachmentsResponseIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	FileIds       []string               `protobuf:"bytes,2,rep,name=FileIds,proto3" json:"FileIds,omitempty"`
	CorrelationId string                 `protobuf:"bytes,3,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,4,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetermineAccountingTransactionCreditsAccountDocumentAttachmentsResponseIntegratedCommand) Reset() {
	*x = DetermineAccountingTransactionCreditsAccountDocumentAttachmentsResponseIntegratedCommand{}
	mi := &file_DetermineAccountingTransactionCreditsAccountDocument_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetermineAccountingTransactionCreditsAccountDocumentAttachmentsResponseIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetermineAccountingTransactionCreditsAccountDocumentAttachmentsResponseIntegratedCommand) ProtoMessage() {
}

func (x *DetermineAccountingTransactionCreditsAccountDocumentAttachmentsResponseIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_DetermineAccountingTransactionCreditsAccountDocument_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetermineAccountingTransactionCreditsAccountDocumentAttachmentsResponseIntegratedCommand.ProtoReflect.Descriptor instead.
func (*DetermineAccountingTransactionCreditsAccountDocumentAttachmentsResponseIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_DetermineAccountingTransactionCreditsAccountDocument_proto_rawDescGZIP(), []int{1}
}

func (x *DetermineAccountingTransactionCreditsAccountDocumentAttachmentsResponseIntegratedCommand) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *DetermineAccountingTransactionCreditsAccountDocumentAttachmentsResponseIntegratedCommand) GetFileIds() []string {
	if x != nil {
		return x.FileIds
	}
	return nil
}

func (x *DetermineAccountingTransactionCreditsAccountDocumentAttachmentsResponseIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *DetermineAccountingTransactionCreditsAccountDocumentAttachmentsResponseIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DetermineAccountingTransactionCreditsAccountDocumentAttachmentsIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Files         []*common.FileItem     `protobuf:"bytes,1,rep,name=Files,proto3" json:"Files,omitempty"`
	ManagerId     string                 `protobuf:"bytes,2,opt,name=ManagerId,proto3" json:"ManagerId,omitempty"`
	CorrelationId string                 `protobuf:"bytes,3,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,4,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetermineAccountingTransactionCreditsAccountDocumentAttachmentsIntegratedCommand) Reset() {
	*x = DetermineAccountingTransactionCreditsAccountDocumentAttachmentsIntegratedCommand{}
	mi := &file_DetermineAccountingTransactionCreditsAccountDocument_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetermineAccountingTransactionCreditsAccountDocumentAttachmentsIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetermineAccountingTransactionCreditsAccountDocumentAttachmentsIntegratedCommand) ProtoMessage() {
}

func (x *DetermineAccountingTransactionCreditsAccountDocumentAttachmentsIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_DetermineAccountingTransactionCreditsAccountDocument_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetermineAccountingTransactionCreditsAccountDocumentAttachmentsIntegratedCommand.ProtoReflect.Descriptor instead.
func (*DetermineAccountingTransactionCreditsAccountDocumentAttachmentsIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_DetermineAccountingTransactionCreditsAccountDocument_proto_rawDescGZIP(), []int{2}
}

func (x *DetermineAccountingTransactionCreditsAccountDocumentAttachmentsIntegratedCommand) GetFiles() []*common.FileItem {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *DetermineAccountingTransactionCreditsAccountDocumentAttachmentsIntegratedCommand) GetManagerId() string {
	if x != nil {
		return x.ManagerId
	}
	return ""
}

func (x *DetermineAccountingTransactionCreditsAccountDocumentAttachmentsIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *DetermineAccountingTransactionCreditsAccountDocumentAttachmentsIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DetermineAccountingTransactionCreditsAccountDocumentResponseIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsCompleted   bool                   `protobuf:"varint,1,opt,name=IsCompleted,proto3" json:"IsCompleted,omitempty"`
	Failure       *common.Failure        `protobuf:"bytes,2,opt,name=Failure,proto3" json:"Failure,omitempty"`
	CorrelationId string                 `protobuf:"bytes,3,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,4,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetermineAccountingTransactionCreditsAccountDocumentResponseIntegratedCommand) Reset() {
	*x = DetermineAccountingTransactionCreditsAccountDocumentResponseIntegratedCommand{}
	mi := &file_DetermineAccountingTransactionCreditsAccountDocument_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetermineAccountingTransactionCreditsAccountDocumentResponseIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetermineAccountingTransactionCreditsAccountDocumentResponseIntegratedCommand) ProtoMessage() {
}

func (x *DetermineAccountingTransactionCreditsAccountDocumentResponseIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_DetermineAccountingTransactionCreditsAccountDocument_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetermineAccountingTransactionCreditsAccountDocumentResponseIntegratedCommand.ProtoReflect.Descriptor instead.
func (*DetermineAccountingTransactionCreditsAccountDocumentResponseIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_DetermineAccountingTransactionCreditsAccountDocument_proto_rawDescGZIP(), []int{3}
}

func (x *DetermineAccountingTransactionCreditsAccountDocumentResponseIntegratedCommand) GetIsCompleted() bool {
	if x != nil {
		return x.IsCompleted
	}
	return false
}

func (x *DetermineAccountingTransactionCreditsAccountDocumentResponseIntegratedCommand) GetFailure() *common.Failure {
	if x != nil {
		return x.Failure
	}
	return nil
}

func (x *DetermineAccountingTransactionCreditsAccountDocumentResponseIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *DetermineAccountingTransactionCreditsAccountDocumentResponseIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CommitOrRollbackDeterminedAccountingTransactionCreditsAccountDocumentIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsCommitted   bool                   `protobuf:"varint,1,opt,name=IsCommitted,proto3" json:"IsCommitted,omitempty"`
	CorrelationId string                 `protobuf:"bytes,2,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,3,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitOrRollbackDeterminedAccountingTransactionCreditsAccountDocumentIntegratedCommand) Reset() {
	*x = CommitOrRollbackDeterminedAccountingTransactionCreditsAccountDocumentIntegratedCommand{}
	mi := &file_DetermineAccountingTransactionCreditsAccountDocument_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitOrRollbackDeterminedAccountingTransactionCreditsAccountDocumentIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitOrRollbackDeterminedAccountingTransactionCreditsAccountDocumentIntegratedCommand) ProtoMessage() {
}

func (x *CommitOrRollbackDeterminedAccountingTransactionCreditsAccountDocumentIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_DetermineAccountingTransactionCreditsAccountDocument_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitOrRollbackDeterminedAccountingTransactionCreditsAccountDocumentIntegratedCommand.ProtoReflect.Descriptor instead.
func (*CommitOrRollbackDeterminedAccountingTransactionCreditsAccountDocumentIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_DetermineAccountingTransactionCreditsAccountDocument_proto_rawDescGZIP(), []int{4}
}

func (x *CommitOrRollbackDeterminedAccountingTransactionCreditsAccountDocumentIntegratedCommand) GetIsCommitted() bool {
	if x != nil {
		return x.IsCommitted
	}
	return false
}

func (x *CommitOrRollbackDeterminedAccountingTransactionCreditsAccountDocumentIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *CommitOrRollbackDeterminedAccountingTransactionCreditsAccountDocumentIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RollbackDeterminedAccountingTransactionCreditsAccountDocumentAttachmentsIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CorrelationId string                 `protobuf:"bytes,1,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RollbackDeterminedAccountingTransactionCreditsAccountDocumentAttachmentsIntegratedCommand) Reset() {
	*x = RollbackDeterminedAccountingTransactionCreditsAccountDocumentAttachmentsIntegratedCommand{}
	mi := &file_DetermineAccountingTransactionCreditsAccountDocument_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollbackDeterminedAccountingTransactionCreditsAccountDocumentAttachmentsIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackDeterminedAccountingTransactionCreditsAccountDocumentAttachmentsIntegratedCommand) ProtoMessage() {
}

func (x *RollbackDeterminedAccountingTransactionCreditsAccountDocumentAttachmentsIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_DetermineAccountingTransactionCreditsAccountDocument_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackDeterminedAccountingTransactionCreditsAccountDocumentAttachmentsIntegratedCommand.ProtoReflect.Descriptor instead.
func (*RollbackDeterminedAccountingTransactionCreditsAccountDocumentAttachmentsIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_DetermineAccountingTransactionCreditsAccountDocument_proto_rawDescGZIP(), []int{5}
}

func (x *RollbackDeterminedAccountingTransactionCreditsAccountDocumentAttachmentsIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *RollbackDeterminedAccountingTransactionCreditsAccountDocumentAttachmentsIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_DetermineAccountingTransactionCreditsAccountDocument_proto protoreflect.FileDescriptor

const file_DetermineAccountingTransactionCreditsAccountDocument_proto_rawDesc = "" +
	"\n" +
	":DetermineAccountingTransactionCreditsAccountDocument.proto\x124DetermineAccountingTransactionCreditsAccountDocument\x1a\fCommon.proto\"\xf5\x02\n" +
	"EDetermineAccountingTransactionCreditsAccountDocumentIntegratedCommand\x12$\n" +
	"\rTransactionId\x18\x01 \x01(\tR\rTransactionId\x12\x1c\n" +
	"\tAccountId\x18\x02 \x01(\tR\tAccountId\x12\x1c\n" +
	"\tIsPrivate\x18\x03 \x01(\bR\tIsPrivate\x12\x12\n" +
	"\x04Date\x18\x04 \x01(\x03R\x04Date\x12+\n" +
	"\x05Money\x18\x05 \x01(\v2\x15.Common.MoneyDocumentR\x05Money\x125\n" +
	"\n" +
	"Commission\x18\x06 \x01(\v2\x15.Common.MoneyDocumentR\n" +
	"Commission\x12\x1c\n" +
	"\tManagerId\x18\a \x01(\tR\tManagerId\x12$\n" +
	"\rCorrelationId\x18\b \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\t \x01(\tR\x02Id\"\xc2\x01\n" +
	"XDetermineAccountingTransactionCreditsAccountDocumentAttachmentsResponseIntegratedCommand\x12\x16\n" +
	"\x06Status\x18\x01 \x01(\bR\x06Status\x12\x18\n" +
	"\aFileIds\x18\x02 \x03(\tR\aFileIds\x12$\n" +
	"\rCorrelationId\x18\x03 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x04 \x01(\tR\x02Id\"\xce\x01\n" +
	"PDetermineAccountingTransactionCreditsAccountDocumentAttachmentsIntegratedCommand\x12&\n" +
	"\x05Files\x18\x01 \x03(\v2\x10.Common.FileItemR\x05Files\x12\x1c\n" +
	"\tManagerId\x18\x02 \x01(\tR\tManagerId\x12$\n" +
	"\rCorrelationId\x18\x03 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x04 \x01(\tR\x02Id\"\xd2\x01\n" +
	"MDetermineAccountingTransactionCreditsAccountDocumentResponseIntegratedCommand\x12 \n" +
	"\vIsCompleted\x18\x01 \x01(\bR\vIsCompleted\x12)\n" +
	"\aFailure\x18\x02 \x01(\v2\x0f.Common.FailureR\aFailure\x12$\n" +
	"\rCorrelationId\x18\x03 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x04 \x01(\tR\x02Id\"\xb0\x01\n" +
	"VCommitOrRollbackDeterminedAccountingTransactionCreditsAccountDocumentIntegratedCommand\x12 \n" +
	"\vIsCommitted\x18\x01 \x01(\bR\vIsCommitted\x12$\n" +
	"\rCorrelationId\x18\x02 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x03 \x01(\tR\x02Id\"\x91\x01\n" +
	"YRollbackDeterminedAccountingTransactionCreditsAccountDocumentAttachmentsIntegratedCommand\x12$\n" +
	"\rCorrelationId\x18\x01 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x02 \x01(\tR\x02IdB\xaa\x01ZXmoneyx.golang.framework/integration/DetermineAccountingTransactionCreditsAccountDocument\xaa\x02MAriyana.Framework.Schema.DetermineAccountingTransactionCreditsAccountDocumentb\x06proto3"

var (
	file_DetermineAccountingTransactionCreditsAccountDocument_proto_rawDescOnce sync.Once
	file_DetermineAccountingTransactionCreditsAccountDocument_proto_rawDescData []byte
)

func file_DetermineAccountingTransactionCreditsAccountDocument_proto_rawDescGZIP() []byte {
	file_DetermineAccountingTransactionCreditsAccountDocument_proto_rawDescOnce.Do(func() {
		file_DetermineAccountingTransactionCreditsAccountDocument_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_DetermineAccountingTransactionCreditsAccountDocument_proto_rawDesc), len(file_DetermineAccountingTransactionCreditsAccountDocument_proto_rawDesc)))
	})
	return file_DetermineAccountingTransactionCreditsAccountDocument_proto_rawDescData
}

var file_DetermineAccountingTransactionCreditsAccountDocument_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_DetermineAccountingTransactionCreditsAccountDocument_proto_goTypes = []any{
	(*DetermineAccountingTransactionCreditsAccountDocumentIntegratedCommand)(nil),                     // 0: DetermineAccountingTransactionCreditsAccountDocument.DetermineAccountingTransactionCreditsAccountDocumentIntegratedCommand
	(*DetermineAccountingTransactionCreditsAccountDocumentAttachmentsResponseIntegratedCommand)(nil),  // 1: DetermineAccountingTransactionCreditsAccountDocument.DetermineAccountingTransactionCreditsAccountDocumentAttachmentsResponseIntegratedCommand
	(*DetermineAccountingTransactionCreditsAccountDocumentAttachmentsIntegratedCommand)(nil),          // 2: DetermineAccountingTransactionCreditsAccountDocument.DetermineAccountingTransactionCreditsAccountDocumentAttachmentsIntegratedCommand
	(*DetermineAccountingTransactionCreditsAccountDocumentResponseIntegratedCommand)(nil),             // 3: DetermineAccountingTransactionCreditsAccountDocument.DetermineAccountingTransactionCreditsAccountDocumentResponseIntegratedCommand
	(*CommitOrRollbackDeterminedAccountingTransactionCreditsAccountDocumentIntegratedCommand)(nil),    // 4: DetermineAccountingTransactionCreditsAccountDocument.CommitOrRollbackDeterminedAccountingTransactionCreditsAccountDocumentIntegratedCommand
	(*RollbackDeterminedAccountingTransactionCreditsAccountDocumentAttachmentsIntegratedCommand)(nil), // 5: DetermineAccountingTransactionCreditsAccountDocument.RollbackDeterminedAccountingTransactionCreditsAccountDocumentAttachmentsIntegratedCommand
	(*common.MoneyDocument)(nil), // 6: Common.MoneyDocument
	(*common.FileItem)(nil),      // 7: Common.FileItem
	(*common.Failure)(nil),       // 8: Common.Failure
}
var file_DetermineAccountingTransactionCreditsAccountDocument_proto_depIdxs = []int32{
	6, // 0: DetermineAccountingTransactionCreditsAccountDocument.DetermineAccountingTransactionCreditsAccountDocumentIntegratedCommand.Money:type_name -> Common.MoneyDocument
	6, // 1: DetermineAccountingTransactionCreditsAccountDocument.DetermineAccountingTransactionCreditsAccountDocumentIntegratedCommand.Commission:type_name -> Common.MoneyDocument
	7, // 2: DetermineAccountingTransactionCreditsAccountDocument.DetermineAccountingTransactionCreditsAccountDocumentAttachmentsIntegratedCommand.Files:type_name -> Common.FileItem
	8, // 3: DetermineAccountingTransactionCreditsAccountDocument.DetermineAccountingTransactionCreditsAccountDocumentResponseIntegratedCommand.Failure:type_name -> Common.Failure
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_DetermineAccountingTransactionCreditsAccountDocument_proto_init() }
func file_DetermineAccountingTransactionCreditsAccountDocument_proto_init() {
	if File_DetermineAccountingTransactionCreditsAccountDocument_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_DetermineAccountingTransactionCreditsAccountDocument_proto_rawDesc), len(file_DetermineAccountingTransactionCreditsAccountDocument_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_DetermineAccountingTransactionCreditsAccountDocument_proto_goTypes,
		DependencyIndexes: file_DetermineAccountingTransactionCreditsAccountDocument_proto_depIdxs,
		MessageInfos:      file_DetermineAccountingTransactionCreditsAccountDocument_proto_msgTypes,
	}.Build()
	File_DetermineAccountingTransactionCreditsAccountDocument_proto = out.File
	file_DetermineAccountingTransactionCreditsAccountDocument_proto_goTypes = nil
	file_DetermineAccountingTransactionCreditsAccountDocument_proto_depIdxs = nil
}
