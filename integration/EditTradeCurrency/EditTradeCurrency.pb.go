// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.2
// source: EditTradeCurrency.proto

package EditTradeCurrency

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	common "moneyx.golang.framework/integration/common"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RollbackEditedTradeCurrencyFilesIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CorrelationId string                 `protobuf:"bytes,1,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RollbackEditedTradeCurrencyFilesIntegratedCommand) Reset() {
	*x = RollbackEditedTradeCurrencyFilesIntegratedCommand{}
	mi := &file_EditTradeCurrency_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollbackEditedTradeCurrencyFilesIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackEditedTradeCurrencyFilesIntegratedCommand) ProtoMessage() {}

func (x *RollbackEditedTradeCurrencyFilesIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_EditTradeCurrency_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackEditedTradeCurrencyFilesIntegratedCommand.ProtoReflect.Descriptor instead.
func (*RollbackEditedTradeCurrencyFilesIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_EditTradeCurrency_proto_rawDescGZIP(), []int{0}
}

func (x *RollbackEditedTradeCurrencyFilesIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *RollbackEditedTradeCurrencyFilesIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type EditTradeCurrencyFilesResponseIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	FileIds       []string               `protobuf:"bytes,2,rep,name=FileIds,proto3" json:"FileIds,omitempty"`
	CorrelationId string                 `protobuf:"bytes,3,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,4,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EditTradeCurrencyFilesResponseIntegratedCommand) Reset() {
	*x = EditTradeCurrencyFilesResponseIntegratedCommand{}
	mi := &file_EditTradeCurrency_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditTradeCurrencyFilesResponseIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditTradeCurrencyFilesResponseIntegratedCommand) ProtoMessage() {}

func (x *EditTradeCurrencyFilesResponseIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_EditTradeCurrency_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditTradeCurrencyFilesResponseIntegratedCommand.ProtoReflect.Descriptor instead.
func (*EditTradeCurrencyFilesResponseIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_EditTradeCurrency_proto_rawDescGZIP(), []int{1}
}

func (x *EditTradeCurrencyFilesResponseIntegratedCommand) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *EditTradeCurrencyFilesResponseIntegratedCommand) GetFileIds() []string {
	if x != nil {
		return x.FileIds
	}
	return nil
}

func (x *EditTradeCurrencyFilesResponseIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *EditTradeCurrencyFilesResponseIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type EditTradeCurrencyFilesIntegratedCommand struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	AddedFiles     []*common.FileItem     `protobuf:"bytes,1,rep,name=AddedFiles,proto3" json:"AddedFiles,omitempty"`
	RemovedFileIds []string               `protobuf:"bytes,2,rep,name=RemovedFileIds,proto3" json:"RemovedFileIds,omitempty"`
	ManagerId      string                 `protobuf:"bytes,3,opt,name=ManagerId,proto3" json:"ManagerId,omitempty"`
	CorrelationId  string                 `protobuf:"bytes,4,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id             string                 `protobuf:"bytes,5,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *EditTradeCurrencyFilesIntegratedCommand) Reset() {
	*x = EditTradeCurrencyFilesIntegratedCommand{}
	mi := &file_EditTradeCurrency_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditTradeCurrencyFilesIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditTradeCurrencyFilesIntegratedCommand) ProtoMessage() {}

func (x *EditTradeCurrencyFilesIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_EditTradeCurrency_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditTradeCurrencyFilesIntegratedCommand.ProtoReflect.Descriptor instead.
func (*EditTradeCurrencyFilesIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_EditTradeCurrency_proto_rawDescGZIP(), []int{2}
}

func (x *EditTradeCurrencyFilesIntegratedCommand) GetAddedFiles() []*common.FileItem {
	if x != nil {
		return x.AddedFiles
	}
	return nil
}

func (x *EditTradeCurrencyFilesIntegratedCommand) GetRemovedFileIds() []string {
	if x != nil {
		return x.RemovedFileIds
	}
	return nil
}

func (x *EditTradeCurrencyFilesIntegratedCommand) GetManagerId() string {
	if x != nil {
		return x.ManagerId
	}
	return ""
}

func (x *EditTradeCurrencyFilesIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *EditTradeCurrencyFilesIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type EditTradeCurrencyBankReciptsResponseIntegartedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsDone        bool                   `protobuf:"varint,1,opt,name=IsDone,proto3" json:"IsDone,omitempty"`
	Failure       *common.Failure        `protobuf:"bytes,2,opt,name=Failure,proto3" json:"Failure,omitempty"`
	CorrelationId string                 `protobuf:"bytes,3,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,4,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EditTradeCurrencyBankReciptsResponseIntegartedCommand) Reset() {
	*x = EditTradeCurrencyBankReciptsResponseIntegartedCommand{}
	mi := &file_EditTradeCurrency_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditTradeCurrencyBankReciptsResponseIntegartedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditTradeCurrencyBankReciptsResponseIntegartedCommand) ProtoMessage() {}

func (x *EditTradeCurrencyBankReciptsResponseIntegartedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_EditTradeCurrency_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditTradeCurrencyBankReciptsResponseIntegartedCommand.ProtoReflect.Descriptor instead.
func (*EditTradeCurrencyBankReciptsResponseIntegartedCommand) Descriptor() ([]byte, []int) {
	return file_EditTradeCurrency_proto_rawDescGZIP(), []int{3}
}

func (x *EditTradeCurrencyBankReciptsResponseIntegartedCommand) GetIsDone() bool {
	if x != nil {
		return x.IsDone
	}
	return false
}

func (x *EditTradeCurrencyBankReciptsResponseIntegartedCommand) GetFailure() *common.Failure {
	if x != nil {
		return x.Failure
	}
	return nil
}

func (x *EditTradeCurrencyBankReciptsResponseIntegartedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *EditTradeCurrencyBankReciptsResponseIntegartedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type EditTradeCurrencyBankReciptsIntegartedCommand struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	BuyerBankInfo     *EditBankReceiptInfo   `protobuf:"bytes,1,opt,name=BuyerBankInfo,proto3" json:"BuyerBankInfo,omitempty"`
	SellerBankInfo    *EditBankReceiptInfo   `protobuf:"bytes,2,opt,name=SellerBankInfo,proto3" json:"SellerBankInfo,omitempty"`
	Date              int64                  `protobuf:"varint,3,opt,name=Date,proto3" json:"Date,omitempty"`
	Description       string                 `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	TradeTransationId string                 `protobuf:"bytes,5,opt,name=TradeTransationId,proto3" json:"TradeTransationId,omitempty"`
	AccountInfo       *OpponnentMetadata     `protobuf:"bytes,6,opt,name=AccountInfo,proto3" json:"AccountInfo,omitempty"`
	Rate              string                 `protobuf:"bytes,7,opt,name=Rate,proto3" json:"Rate,omitempty"`
	IsPrivate         bool                   `protobuf:"varint,8,opt,name=IsPrivate,proto3" json:"IsPrivate,omitempty"`
	ManagerId         string                 `protobuf:"bytes,9,opt,name=ManagerId,proto3" json:"ManagerId,omitempty"`
	CorrelationId     string                 `protobuf:"bytes,10,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id                string                 `protobuf:"bytes,11,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *EditTradeCurrencyBankReciptsIntegartedCommand) Reset() {
	*x = EditTradeCurrencyBankReciptsIntegartedCommand{}
	mi := &file_EditTradeCurrency_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditTradeCurrencyBankReciptsIntegartedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditTradeCurrencyBankReciptsIntegartedCommand) ProtoMessage() {}

func (x *EditTradeCurrencyBankReciptsIntegartedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_EditTradeCurrency_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditTradeCurrencyBankReciptsIntegartedCommand.ProtoReflect.Descriptor instead.
func (*EditTradeCurrencyBankReciptsIntegartedCommand) Descriptor() ([]byte, []int) {
	return file_EditTradeCurrency_proto_rawDescGZIP(), []int{4}
}

func (x *EditTradeCurrencyBankReciptsIntegartedCommand) GetBuyerBankInfo() *EditBankReceiptInfo {
	if x != nil {
		return x.BuyerBankInfo
	}
	return nil
}

func (x *EditTradeCurrencyBankReciptsIntegartedCommand) GetSellerBankInfo() *EditBankReceiptInfo {
	if x != nil {
		return x.SellerBankInfo
	}
	return nil
}

func (x *EditTradeCurrencyBankReciptsIntegartedCommand) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *EditTradeCurrencyBankReciptsIntegartedCommand) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EditTradeCurrencyBankReciptsIntegartedCommand) GetTradeTransationId() string {
	if x != nil {
		return x.TradeTransationId
	}
	return ""
}

func (x *EditTradeCurrencyBankReciptsIntegartedCommand) GetAccountInfo() *OpponnentMetadata {
	if x != nil {
		return x.AccountInfo
	}
	return nil
}

func (x *EditTradeCurrencyBankReciptsIntegartedCommand) GetRate() string {
	if x != nil {
		return x.Rate
	}
	return ""
}

func (x *EditTradeCurrencyBankReciptsIntegartedCommand) GetIsPrivate() bool {
	if x != nil {
		return x.IsPrivate
	}
	return false
}

func (x *EditTradeCurrencyBankReciptsIntegartedCommand) GetManagerId() string {
	if x != nil {
		return x.ManagerId
	}
	return ""
}

func (x *EditTradeCurrencyBankReciptsIntegartedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *EditTradeCurrencyBankReciptsIntegartedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type EditBankReceiptInfo struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	BankId          string                 `protobuf:"bytes,1,opt,name=BankId,proto3" json:"BankId,omitempty"`
	Money           *common.MoneyDocument  `protobuf:"bytes,2,opt,name=Money,proto3" json:"Money,omitempty"`
	CommissionMoney *common.MoneyDocument  `protobuf:"bytes,3,opt,name=CommissionMoney,proto3" json:"CommissionMoney,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *EditBankReceiptInfo) Reset() {
	*x = EditBankReceiptInfo{}
	mi := &file_EditTradeCurrency_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditBankReceiptInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditBankReceiptInfo) ProtoMessage() {}

func (x *EditBankReceiptInfo) ProtoReflect() protoreflect.Message {
	mi := &file_EditTradeCurrency_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditBankReceiptInfo.ProtoReflect.Descriptor instead.
func (*EditBankReceiptInfo) Descriptor() ([]byte, []int) {
	return file_EditTradeCurrency_proto_rawDescGZIP(), []int{5}
}

func (x *EditBankReceiptInfo) GetBankId() string {
	if x != nil {
		return x.BankId
	}
	return ""
}

func (x *EditBankReceiptInfo) GetMoney() *common.MoneyDocument {
	if x != nil {
		return x.Money
	}
	return nil
}

func (x *EditBankReceiptInfo) GetCommissionMoney() *common.MoneyDocument {
	if x != nil {
		return x.CommissionMoney
	}
	return nil
}

type EditTradeCurrencyAccountingDocumentsResponseIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsDone        bool                   `protobuf:"varint,1,opt,name=IsDone,proto3" json:"IsDone,omitempty"`
	Failure       *common.Failure        `protobuf:"bytes,2,opt,name=Failure,proto3" json:"Failure,omitempty"`
	CorrelationId string                 `protobuf:"bytes,3,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,4,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EditTradeCurrencyAccountingDocumentsResponseIntegratedCommand) Reset() {
	*x = EditTradeCurrencyAccountingDocumentsResponseIntegratedCommand{}
	mi := &file_EditTradeCurrency_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditTradeCurrencyAccountingDocumentsResponseIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditTradeCurrencyAccountingDocumentsResponseIntegratedCommand) ProtoMessage() {}

func (x *EditTradeCurrencyAccountingDocumentsResponseIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_EditTradeCurrency_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditTradeCurrencyAccountingDocumentsResponseIntegratedCommand.ProtoReflect.Descriptor instead.
func (*EditTradeCurrencyAccountingDocumentsResponseIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_EditTradeCurrency_proto_rawDescGZIP(), []int{6}
}

func (x *EditTradeCurrencyAccountingDocumentsResponseIntegratedCommand) GetIsDone() bool {
	if x != nil {
		return x.IsDone
	}
	return false
}

func (x *EditTradeCurrencyAccountingDocumentsResponseIntegratedCommand) GetFailure() *common.Failure {
	if x != nil {
		return x.Failure
	}
	return nil
}

func (x *EditTradeCurrencyAccountingDocumentsResponseIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *EditTradeCurrencyAccountingDocumentsResponseIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type EditTradeCurrencyAccountingDocumentsIntegratedCommand struct {
	state              protoimpl.MessageState      `protogen:"open.v1"`
	BuyerDocumentInfo  *EditAccountingDocumentInfo `protobuf:"bytes,1,opt,name=BuyerDocumentInfo,proto3" json:"BuyerDocumentInfo,omitempty"`
	SellerDocumentInfo *EditAccountingDocumentInfo `protobuf:"bytes,2,opt,name=SellerDocumentInfo,proto3" json:"SellerDocumentInfo,omitempty"`
	Date               int64                       `protobuf:"varint,3,opt,name=Date,proto3" json:"Date,omitempty"`
	Description        string                      `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	TranId             string                      `protobuf:"bytes,5,opt,name=TranId,proto3" json:"TranId,omitempty"`
	BankInfo           *OpponnentMetadata          `protobuf:"bytes,6,opt,name=BankInfo,proto3" json:"BankInfo,omitempty"`
	Rate               string                      `protobuf:"bytes,7,opt,name=Rate,proto3" json:"Rate,omitempty"`
	IsPrivate          bool                        `protobuf:"varint,8,opt,name=IsPrivate,proto3" json:"IsPrivate,omitempty"`
	UpdateCreditLimit  bool                        `protobuf:"varint,9,opt,name=UpdateCreditLimit,proto3" json:"UpdateCreditLimit,omitempty"`
	ManagerId          string                      `protobuf:"bytes,10,opt,name=ManagerId,proto3" json:"ManagerId,omitempty"`
	CorrelationId      string                      `protobuf:"bytes,11,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id                 string                      `protobuf:"bytes,12,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *EditTradeCurrencyAccountingDocumentsIntegratedCommand) Reset() {
	*x = EditTradeCurrencyAccountingDocumentsIntegratedCommand{}
	mi := &file_EditTradeCurrency_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditTradeCurrencyAccountingDocumentsIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditTradeCurrencyAccountingDocumentsIntegratedCommand) ProtoMessage() {}

func (x *EditTradeCurrencyAccountingDocumentsIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_EditTradeCurrency_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditTradeCurrencyAccountingDocumentsIntegratedCommand.ProtoReflect.Descriptor instead.
func (*EditTradeCurrencyAccountingDocumentsIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_EditTradeCurrency_proto_rawDescGZIP(), []int{7}
}

func (x *EditTradeCurrencyAccountingDocumentsIntegratedCommand) GetBuyerDocumentInfo() *EditAccountingDocumentInfo {
	if x != nil {
		return x.BuyerDocumentInfo
	}
	return nil
}

func (x *EditTradeCurrencyAccountingDocumentsIntegratedCommand) GetSellerDocumentInfo() *EditAccountingDocumentInfo {
	if x != nil {
		return x.SellerDocumentInfo
	}
	return nil
}

func (x *EditTradeCurrencyAccountingDocumentsIntegratedCommand) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *EditTradeCurrencyAccountingDocumentsIntegratedCommand) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EditTradeCurrencyAccountingDocumentsIntegratedCommand) GetTranId() string {
	if x != nil {
		return x.TranId
	}
	return ""
}

func (x *EditTradeCurrencyAccountingDocumentsIntegratedCommand) GetBankInfo() *OpponnentMetadata {
	if x != nil {
		return x.BankInfo
	}
	return nil
}

func (x *EditTradeCurrencyAccountingDocumentsIntegratedCommand) GetRate() string {
	if x != nil {
		return x.Rate
	}
	return ""
}

func (x *EditTradeCurrencyAccountingDocumentsIntegratedCommand) GetIsPrivate() bool {
	if x != nil {
		return x.IsPrivate
	}
	return false
}

func (x *EditTradeCurrencyAccountingDocumentsIntegratedCommand) GetUpdateCreditLimit() bool {
	if x != nil {
		return x.UpdateCreditLimit
	}
	return false
}

func (x *EditTradeCurrencyAccountingDocumentsIntegratedCommand) GetManagerId() string {
	if x != nil {
		return x.ManagerId
	}
	return ""
}

func (x *EditTradeCurrencyAccountingDocumentsIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *EditTradeCurrencyAccountingDocumentsIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type OpponnentMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Money         *common.Money          `protobuf:"bytes,2,opt,name=Money,proto3" json:"Money,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OpponnentMetadata) Reset() {
	*x = OpponnentMetadata{}
	mi := &file_EditTradeCurrency_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpponnentMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpponnentMetadata) ProtoMessage() {}

func (x *OpponnentMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_EditTradeCurrency_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpponnentMetadata.ProtoReflect.Descriptor instead.
func (*OpponnentMetadata) Descriptor() ([]byte, []int) {
	return file_EditTradeCurrency_proto_rawDescGZIP(), []int{8}
}

func (x *OpponnentMetadata) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OpponnentMetadata) GetMoney() *common.Money {
	if x != nil {
		return x.Money
	}
	return nil
}

type EditAccountingDocumentInfo struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	AccountId       string                 `protobuf:"bytes,1,opt,name=AccountId,proto3" json:"AccountId,omitempty"`
	Money           *common.MoneyDocument  `protobuf:"bytes,2,opt,name=Money,proto3" json:"Money,omitempty"`
	CommissionMoney *common.MoneyDocument  `protobuf:"bytes,3,opt,name=CommissionMoney,proto3" json:"CommissionMoney,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *EditAccountingDocumentInfo) Reset() {
	*x = EditAccountingDocumentInfo{}
	mi := &file_EditTradeCurrency_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditAccountingDocumentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditAccountingDocumentInfo) ProtoMessage() {}

func (x *EditAccountingDocumentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_EditTradeCurrency_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditAccountingDocumentInfo.ProtoReflect.Descriptor instead.
func (*EditAccountingDocumentInfo) Descriptor() ([]byte, []int) {
	return file_EditTradeCurrency_proto_rawDescGZIP(), []int{9}
}

func (x *EditAccountingDocumentInfo) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *EditAccountingDocumentInfo) GetMoney() *common.MoneyDocument {
	if x != nil {
		return x.Money
	}
	return nil
}

func (x *EditAccountingDocumentInfo) GetCommissionMoney() *common.MoneyDocument {
	if x != nil {
		return x.CommissionMoney
	}
	return nil
}

type CommitOrRollbackEditedTradeCurrencyDocumentsIntegratedCommand struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	IsCommited    bool                             `protobuf:"varint,1,opt,name=IsCommited,proto3" json:"IsCommited,omitempty"`
	WhatsappInfo  []*common.AccountingWhatsappInfo `protobuf:"bytes,2,rep,name=WhatsappInfo,proto3" json:"WhatsappInfo,omitempty"`
	CorrelationId string                           `protobuf:"bytes,3,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                           `protobuf:"bytes,4,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitOrRollbackEditedTradeCurrencyDocumentsIntegratedCommand) Reset() {
	*x = CommitOrRollbackEditedTradeCurrencyDocumentsIntegratedCommand{}
	mi := &file_EditTradeCurrency_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitOrRollbackEditedTradeCurrencyDocumentsIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitOrRollbackEditedTradeCurrencyDocumentsIntegratedCommand) ProtoMessage() {}

func (x *CommitOrRollbackEditedTradeCurrencyDocumentsIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_EditTradeCurrency_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitOrRollbackEditedTradeCurrencyDocumentsIntegratedCommand.ProtoReflect.Descriptor instead.
func (*CommitOrRollbackEditedTradeCurrencyDocumentsIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_EditTradeCurrency_proto_rawDescGZIP(), []int{10}
}

func (x *CommitOrRollbackEditedTradeCurrencyDocumentsIntegratedCommand) GetIsCommited() bool {
	if x != nil {
		return x.IsCommited
	}
	return false
}

func (x *CommitOrRollbackEditedTradeCurrencyDocumentsIntegratedCommand) GetWhatsappInfo() []*common.AccountingWhatsappInfo {
	if x != nil {
		return x.WhatsappInfo
	}
	return nil
}

func (x *CommitOrRollbackEditedTradeCurrencyDocumentsIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *CommitOrRollbackEditedTradeCurrencyDocumentsIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CommitOrRollbackEditedTradeCurrencyBankReceiptsIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsCommitted   bool                   `protobuf:"varint,1,opt,name=IsCommitted,proto3" json:"IsCommitted,omitempty"`
	CorrelationId string                 `protobuf:"bytes,2,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,3,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitOrRollbackEditedTradeCurrencyBankReceiptsIntegratedCommand) Reset() {
	*x = CommitOrRollbackEditedTradeCurrencyBankReceiptsIntegratedCommand{}
	mi := &file_EditTradeCurrency_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitOrRollbackEditedTradeCurrencyBankReceiptsIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitOrRollbackEditedTradeCurrencyBankReceiptsIntegratedCommand) ProtoMessage() {}

func (x *CommitOrRollbackEditedTradeCurrencyBankReceiptsIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_EditTradeCurrency_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitOrRollbackEditedTradeCurrencyBankReceiptsIntegratedCommand.ProtoReflect.Descriptor instead.
func (*CommitOrRollbackEditedTradeCurrencyBankReceiptsIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_EditTradeCurrency_proto_rawDescGZIP(), []int{11}
}

func (x *CommitOrRollbackEditedTradeCurrencyBankReceiptsIntegratedCommand) GetIsCommitted() bool {
	if x != nil {
		return x.IsCommitted
	}
	return false
}

func (x *CommitOrRollbackEditedTradeCurrencyBankReceiptsIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *CommitOrRollbackEditedTradeCurrencyBankReceiptsIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_EditTradeCurrency_proto protoreflect.FileDescriptor

const file_EditTradeCurrency_proto_rawDesc = "" +
	"\n" +
	"\x17EditTradeCurrency.proto\x12\x11EditTradeCurrency\x1a\fCommon.proto\"i\n" +
	"1RollbackEditedTradeCurrencyFilesIntegratedCommand\x12$\n" +
	"\rCorrelationId\x18\x01 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x02 \x01(\tR\x02Id\"\x99\x01\n" +
	"/EditTradeCurrencyFilesResponseIntegratedCommand\x12\x16\n" +
	"\x06Status\x18\x01 \x01(\bR\x06Status\x12\x18\n" +
	"\aFileIds\x18\x02 \x03(\tR\aFileIds\x12$\n" +
	"\rCorrelationId\x18\x03 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x04 \x01(\tR\x02Id\"\xd7\x01\n" +
	"'EditTradeCurrencyFilesIntegratedCommand\x120\n" +
	"\n" +
	"AddedFiles\x18\x01 \x03(\v2\x10.Common.FileItemR\n" +
	"AddedFiles\x12&\n" +
	"\x0eRemovedFileIds\x18\x02 \x03(\tR\x0eRemovedFileIds\x12\x1c\n" +
	"\tManagerId\x18\x03 \x01(\tR\tManagerId\x12$\n" +
	"\rCorrelationId\x18\x04 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x05 \x01(\tR\x02Id\"\xb0\x01\n" +
	"5EditTradeCurrencyBankReciptsResponseIntegartedCommand\x12\x16\n" +
	"\x06IsDone\x18\x01 \x01(\bR\x06IsDone\x12)\n" +
	"\aFailure\x18\x02 \x01(\v2\x0f.Common.FailureR\aFailure\x12$\n" +
	"\rCorrelationId\x18\x03 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x04 \x01(\tR\x02Id\"\xff\x03\n" +
	"-EditTradeCurrencyBankReciptsIntegartedCommand\x12L\n" +
	"\rBuyerBankInfo\x18\x01 \x01(\v2&.EditTradeCurrency.EditBankReceiptInfoR\rBuyerBankInfo\x12N\n" +
	"\x0eSellerBankInfo\x18\x02 \x01(\v2&.EditTradeCurrency.EditBankReceiptInfoR\x0eSellerBankInfo\x12\x12\n" +
	"\x04Date\x18\x03 \x01(\x03R\x04Date\x12 \n" +
	"\vDescription\x18\x04 \x01(\tR\vDescription\x12,\n" +
	"\x11TradeTransationId\x18\x05 \x01(\tR\x11TradeTransationId\x12F\n" +
	"\vAccountInfo\x18\x06 \x01(\v2$.EditTradeCurrency.OpponnentMetadataR\vAccountInfo\x12\x12\n" +
	"\x04Rate\x18\a \x01(\tR\x04Rate\x12\x1c\n" +
	"\tIsPrivate\x18\b \x01(\bR\tIsPrivate\x12\x1c\n" +
	"\tManagerId\x18\t \x01(\tR\tManagerId\x12$\n" +
	"\rCorrelationId\x18\n" +
	" \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\v \x01(\tR\x02Id\"\x9b\x01\n" +
	"\x13EditBankReceiptInfo\x12\x16\n" +
	"\x06BankId\x18\x01 \x01(\tR\x06BankId\x12+\n" +
	"\x05Money\x18\x02 \x01(\v2\x15.Common.MoneyDocumentR\x05Money\x12?\n" +
	"\x0fCommissionMoney\x18\x03 \x01(\v2\x15.Common.MoneyDocumentR\x0fCommissionMoney\"\xb8\x01\n" +
	"=EditTradeCurrencyAccountingDocumentsResponseIntegratedCommand\x12\x16\n" +
	"\x06IsDone\x18\x01 \x01(\bR\x06IsDone\x12)\n" +
	"\aFailure\x18\x02 \x01(\v2\x0f.Common.FailureR\aFailure\x12$\n" +
	"\rCorrelationId\x18\x03 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x04 \x01(\tR\x02Id\"\xb7\x04\n" +
	"5EditTradeCurrencyAccountingDocumentsIntegratedCommand\x12[\n" +
	"\x11BuyerDocumentInfo\x18\x01 \x01(\v2-.EditTradeCurrency.EditAccountingDocumentInfoR\x11BuyerDocumentInfo\x12]\n" +
	"\x12SellerDocumentInfo\x18\x02 \x01(\v2-.EditTradeCurrency.EditAccountingDocumentInfoR\x12SellerDocumentInfo\x12\x12\n" +
	"\x04Date\x18\x03 \x01(\x03R\x04Date\x12 \n" +
	"\vDescription\x18\x04 \x01(\tR\vDescription\x12\x16\n" +
	"\x06TranId\x18\x05 \x01(\tR\x06TranId\x12@\n" +
	"\bBankInfo\x18\x06 \x01(\v2$.EditTradeCurrency.OpponnentMetadataR\bBankInfo\x12\x12\n" +
	"\x04Rate\x18\a \x01(\tR\x04Rate\x12\x1c\n" +
	"\tIsPrivate\x18\b \x01(\bR\tIsPrivate\x12,\n" +
	"\x11UpdateCreditLimit\x18\t \x01(\bR\x11UpdateCreditLimit\x12\x1c\n" +
	"\tManagerId\x18\n" +
	" \x01(\tR\tManagerId\x12$\n" +
	"\rCorrelationId\x18\v \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\f \x01(\tR\x02Id\"H\n" +
	"\x11OpponnentMetadata\x12\x0e\n" +
	"\x02Id\x18\x01 \x01(\tR\x02Id\x12#\n" +
	"\x05Money\x18\x02 \x01(\v2\r.Common.MoneyR\x05Money\"\xa8\x01\n" +
	"\x1aEditAccountingDocumentInfo\x12\x1c\n" +
	"\tAccountId\x18\x01 \x01(\tR\tAccountId\x12+\n" +
	"\x05Money\x18\x02 \x01(\v2\x15.Common.MoneyDocumentR\x05Money\x12?\n" +
	"\x0fCommissionMoney\x18\x03 \x01(\v2\x15.Common.MoneyDocumentR\x0fCommissionMoney\"\xd9\x01\n" +
	"=CommitOrRollbackEditedTradeCurrencyDocumentsIntegratedCommand\x12\x1e\n" +
	"\n" +
	"IsCommited\x18\x01 \x01(\bR\n" +
	"IsCommited\x12B\n" +
	"\fWhatsappInfo\x18\x02 \x03(\v2\x1e.Common.AccountingWhatsappInfoR\fWhatsappInfo\x12$\n" +
	"\rCorrelationId\x18\x03 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x04 \x01(\tR\x02Id\"\x9a\x01\n" +
	"@CommitOrRollbackEditedTradeCurrencyBankReceiptsIntegratedCommand\x12 \n" +
	"\vIsCommitted\x18\x01 \x01(\bR\vIsCommitted\x12$\n" +
	"\rCorrelationId\x18\x02 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x03 \x01(\tR\x02IdBdZ5moneyx.golang.framework/integration/EditTradeCurrency\xaa\x02*Ariyana.Framework.Schema.EditTradeCurrencyb\x06proto3"

var (
	file_EditTradeCurrency_proto_rawDescOnce sync.Once
	file_EditTradeCurrency_proto_rawDescData []byte
)

func file_EditTradeCurrency_proto_rawDescGZIP() []byte {
	file_EditTradeCurrency_proto_rawDescOnce.Do(func() {
		file_EditTradeCurrency_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_EditTradeCurrency_proto_rawDesc), len(file_EditTradeCurrency_proto_rawDesc)))
	})
	return file_EditTradeCurrency_proto_rawDescData
}

var file_EditTradeCurrency_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_EditTradeCurrency_proto_goTypes = []any{
	(*RollbackEditedTradeCurrencyFilesIntegratedCommand)(nil),                // 0: EditTradeCurrency.RollbackEditedTradeCurrencyFilesIntegratedCommand
	(*EditTradeCurrencyFilesResponseIntegratedCommand)(nil),                  // 1: EditTradeCurrency.EditTradeCurrencyFilesResponseIntegratedCommand
	(*EditTradeCurrencyFilesIntegratedCommand)(nil),                          // 2: EditTradeCurrency.EditTradeCurrencyFilesIntegratedCommand
	(*EditTradeCurrencyBankReciptsResponseIntegartedCommand)(nil),            // 3: EditTradeCurrency.EditTradeCurrencyBankReciptsResponseIntegartedCommand
	(*EditTradeCurrencyBankReciptsIntegartedCommand)(nil),                    // 4: EditTradeCurrency.EditTradeCurrencyBankReciptsIntegartedCommand
	(*EditBankReceiptInfo)(nil),                                              // 5: EditTradeCurrency.EditBankReceiptInfo
	(*EditTradeCurrencyAccountingDocumentsResponseIntegratedCommand)(nil),    // 6: EditTradeCurrency.EditTradeCurrencyAccountingDocumentsResponseIntegratedCommand
	(*EditTradeCurrencyAccountingDocumentsIntegratedCommand)(nil),            // 7: EditTradeCurrency.EditTradeCurrencyAccountingDocumentsIntegratedCommand
	(*OpponnentMetadata)(nil),                                                // 8: EditTradeCurrency.OpponnentMetadata
	(*EditAccountingDocumentInfo)(nil),                                       // 9: EditTradeCurrency.EditAccountingDocumentInfo
	(*CommitOrRollbackEditedTradeCurrencyDocumentsIntegratedCommand)(nil),    // 10: EditTradeCurrency.CommitOrRollbackEditedTradeCurrencyDocumentsIntegratedCommand
	(*CommitOrRollbackEditedTradeCurrencyBankReceiptsIntegratedCommand)(nil), // 11: EditTradeCurrency.CommitOrRollbackEditedTradeCurrencyBankReceiptsIntegratedCommand
	(*common.FileItem)(nil),                                                  // 12: Common.FileItem
	(*common.Failure)(nil),                                                   // 13: Common.Failure
	(*common.MoneyDocument)(nil),                                             // 14: Common.MoneyDocument
	(*common.Money)(nil),                                                     // 15: Common.Money
	(*common.AccountingWhatsappInfo)(nil),                                    // 16: Common.AccountingWhatsappInfo
}
var file_EditTradeCurrency_proto_depIdxs = []int32{
	12, // 0: EditTradeCurrency.EditTradeCurrencyFilesIntegratedCommand.AddedFiles:type_name -> Common.FileItem
	13, // 1: EditTradeCurrency.EditTradeCurrencyBankReciptsResponseIntegartedCommand.Failure:type_name -> Common.Failure
	5,  // 2: EditTradeCurrency.EditTradeCurrencyBankReciptsIntegartedCommand.BuyerBankInfo:type_name -> EditTradeCurrency.EditBankReceiptInfo
	5,  // 3: EditTradeCurrency.EditTradeCurrencyBankReciptsIntegartedCommand.SellerBankInfo:type_name -> EditTradeCurrency.EditBankReceiptInfo
	8,  // 4: EditTradeCurrency.EditTradeCurrencyBankReciptsIntegartedCommand.AccountInfo:type_name -> EditTradeCurrency.OpponnentMetadata
	14, // 5: EditTradeCurrency.EditBankReceiptInfo.Money:type_name -> Common.MoneyDocument
	14, // 6: EditTradeCurrency.EditBankReceiptInfo.CommissionMoney:type_name -> Common.MoneyDocument
	13, // 7: EditTradeCurrency.EditTradeCurrencyAccountingDocumentsResponseIntegratedCommand.Failure:type_name -> Common.Failure
	9,  // 8: EditTradeCurrency.EditTradeCurrencyAccountingDocumentsIntegratedCommand.BuyerDocumentInfo:type_name -> EditTradeCurrency.EditAccountingDocumentInfo
	9,  // 9: EditTradeCurrency.EditTradeCurrencyAccountingDocumentsIntegratedCommand.SellerDocumentInfo:type_name -> EditTradeCurrency.EditAccountingDocumentInfo
	8,  // 10: EditTradeCurrency.EditTradeCurrencyAccountingDocumentsIntegratedCommand.BankInfo:type_name -> EditTradeCurrency.OpponnentMetadata
	15, // 11: EditTradeCurrency.OpponnentMetadata.Money:type_name -> Common.Money
	14, // 12: EditTradeCurrency.EditAccountingDocumentInfo.Money:type_name -> Common.MoneyDocument
	14, // 13: EditTradeCurrency.EditAccountingDocumentInfo.CommissionMoney:type_name -> Common.MoneyDocument
	16, // 14: EditTradeCurrency.CommitOrRollbackEditedTradeCurrencyDocumentsIntegratedCommand.WhatsappInfo:type_name -> Common.AccountingWhatsappInfo
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_EditTradeCurrency_proto_init() }
func file_EditTradeCurrency_proto_init() {
	if File_EditTradeCurrency_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_EditTradeCurrency_proto_rawDesc), len(file_EditTradeCurrency_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_EditTradeCurrency_proto_goTypes,
		DependencyIndexes: file_EditTradeCurrency_proto_depIdxs,
		MessageInfos:      file_EditTradeCurrency_proto_msgTypes,
	}.Build()
	File_EditTradeCurrency_proto = out.File
	file_EditTradeCurrency_proto_goTypes = nil
	file_EditTradeCurrency_proto_depIdxs = nil
}
