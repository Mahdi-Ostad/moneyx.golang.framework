// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.2
// source: AddAccountingCheckoutByIndex.proto

package AddAccountingCheckoutByIndex

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	common "moneyx.golang.framework/integration/common"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddAccountingCheckoutByIndexIntegratedCommand struct {
	state                protoimpl.MessageState       `protogen:"open.v1"`
	AccountId            string                       `protobuf:"bytes,1,opt,name=AccountId,proto3" json:"AccountId,omitempty"`
	ArchiveDocumentsItem []*common.AccountDocumentDto `protobuf:"bytes,2,rep,name=ArchiveDocumentsItem,proto3" json:"ArchiveDocumentsItem,omitempty"`
	CorrelationId        string                       `protobuf:"bytes,3,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id                   string                       `protobuf:"bytes,4,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *AddAccountingCheckoutByIndexIntegratedCommand) Reset() {
	*x = AddAccountingCheckoutByIndexIntegratedCommand{}
	mi := &file_AddAccountingCheckoutByIndex_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAccountingCheckoutByIndexIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAccountingCheckoutByIndexIntegratedCommand) ProtoMessage() {}

func (x *AddAccountingCheckoutByIndexIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_AddAccountingCheckoutByIndex_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAccountingCheckoutByIndexIntegratedCommand.ProtoReflect.Descriptor instead.
func (*AddAccountingCheckoutByIndexIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_AddAccountingCheckoutByIndex_proto_rawDescGZIP(), []int{0}
}

func (x *AddAccountingCheckoutByIndexIntegratedCommand) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *AddAccountingCheckoutByIndexIntegratedCommand) GetArchiveDocumentsItem() []*common.AccountDocumentDto {
	if x != nil {
		return x.ArchiveDocumentsItem
	}
	return nil
}

func (x *AddAccountingCheckoutByIndexIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *AddAccountingCheckoutByIndexIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AddAccountingCheckoutByIndexResponseIntegratedCommand struct {
	state                       protoimpl.MessageState `protogen:"open.v1"`
	AccountResponseIsSuccessful bool                   `protobuf:"varint,1,opt,name=AccountResponseIsSuccessful,proto3" json:"AccountResponseIsSuccessful,omitempty"`
	Failure                     *common.Failure        `protobuf:"bytes,2,opt,name=Failure,proto3" json:"Failure,omitempty"`
	CorrelationId               string                 `protobuf:"bytes,3,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id                          string                 `protobuf:"bytes,4,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *AddAccountingCheckoutByIndexResponseIntegratedCommand) Reset() {
	*x = AddAccountingCheckoutByIndexResponseIntegratedCommand{}
	mi := &file_AddAccountingCheckoutByIndex_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAccountingCheckoutByIndexResponseIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAccountingCheckoutByIndexResponseIntegratedCommand) ProtoMessage() {}

func (x *AddAccountingCheckoutByIndexResponseIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_AddAccountingCheckoutByIndex_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAccountingCheckoutByIndexResponseIntegratedCommand.ProtoReflect.Descriptor instead.
func (*AddAccountingCheckoutByIndexResponseIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_AddAccountingCheckoutByIndex_proto_rawDescGZIP(), []int{1}
}

func (x *AddAccountingCheckoutByIndexResponseIntegratedCommand) GetAccountResponseIsSuccessful() bool {
	if x != nil {
		return x.AccountResponseIsSuccessful
	}
	return false
}

func (x *AddAccountingCheckoutByIndexResponseIntegratedCommand) GetFailure() *common.Failure {
	if x != nil {
		return x.Failure
	}
	return nil
}

func (x *AddAccountingCheckoutByIndexResponseIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *AddAccountingCheckoutByIndexResponseIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CommitOrRollbackAddedAccountingCheckoutByIndexIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsCommitted   bool                   `protobuf:"varint,1,opt,name=IsCommitted,proto3" json:"IsCommitted,omitempty"`
	CorrelationId string                 `protobuf:"bytes,2,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,3,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitOrRollbackAddedAccountingCheckoutByIndexIntegratedCommand) Reset() {
	*x = CommitOrRollbackAddedAccountingCheckoutByIndexIntegratedCommand{}
	mi := &file_AddAccountingCheckoutByIndex_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitOrRollbackAddedAccountingCheckoutByIndexIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitOrRollbackAddedAccountingCheckoutByIndexIntegratedCommand) ProtoMessage() {}

func (x *CommitOrRollbackAddedAccountingCheckoutByIndexIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_AddAccountingCheckoutByIndex_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitOrRollbackAddedAccountingCheckoutByIndexIntegratedCommand.ProtoReflect.Descriptor instead.
func (*CommitOrRollbackAddedAccountingCheckoutByIndexIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_AddAccountingCheckoutByIndex_proto_rawDescGZIP(), []int{2}
}

func (x *CommitOrRollbackAddedAccountingCheckoutByIndexIntegratedCommand) GetIsCommitted() bool {
	if x != nil {
		return x.IsCommitted
	}
	return false
}

func (x *CommitOrRollbackAddedAccountingCheckoutByIndexIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *CommitOrRollbackAddedAccountingCheckoutByIndexIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_AddAccountingCheckoutByIndex_proto protoreflect.FileDescriptor

const file_AddAccountingCheckoutByIndex_proto_rawDesc = "" +
	"\n" +
	"\"AddAccountingCheckoutByIndex.proto\x12\x1cAddAccountingCheckoutByIndex\x1a\fCommon.proto\"\xd3\x01\n" +
	"-AddAccountingCheckoutByIndexIntegratedCommand\x12\x1c\n" +
	"\tAccountId\x18\x01 \x01(\tR\tAccountId\x12N\n" +
	"\x14ArchiveDocumentsItem\x18\x02 \x03(\v2\x1a.Common.AccountDocumentDtoR\x14ArchiveDocumentsItem\x12$\n" +
	"\rCorrelationId\x18\x03 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x04 \x01(\tR\x02Id\"\xda\x01\n" +
	"5AddAccountingCheckoutByIndexResponseIntegratedCommand\x12@\n" +
	"\x1bAccountResponseIsSuccessful\x18\x01 \x01(\bR\x1bAccountResponseIsSuccessful\x12)\n" +
	"\aFailure\x18\x02 \x01(\v2\x0f.Common.FailureR\aFailure\x12$\n" +
	"\rCorrelationId\x18\x03 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x04 \x01(\tR\x02Id\"\x99\x01\n" +
	"?CommitOrRollbackAddedAccountingCheckoutByIndexIntegratedCommand\x12 \n" +
	"\vIsCommitted\x18\x01 \x01(\bR\vIsCommitted\x12$\n" +
	"\rCorrelationId\x18\x02 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x03 \x01(\tR\x02IdBzZ@moneyx.golang.framework/integration/AddAccountingCheckoutByIndex\xaa\x025Ariyana.Framework.Schema.AddAccountingCheckoutByIndexb\x06proto3"

var (
	file_AddAccountingCheckoutByIndex_proto_rawDescOnce sync.Once
	file_AddAccountingCheckoutByIndex_proto_rawDescData []byte
)

func file_AddAccountingCheckoutByIndex_proto_rawDescGZIP() []byte {
	file_AddAccountingCheckoutByIndex_proto_rawDescOnce.Do(func() {
		file_AddAccountingCheckoutByIndex_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_AddAccountingCheckoutByIndex_proto_rawDesc), len(file_AddAccountingCheckoutByIndex_proto_rawDesc)))
	})
	return file_AddAccountingCheckoutByIndex_proto_rawDescData
}

var file_AddAccountingCheckoutByIndex_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_AddAccountingCheckoutByIndex_proto_goTypes = []any{
	(*AddAccountingCheckoutByIndexIntegratedCommand)(nil),                   // 0: AddAccountingCheckoutByIndex.AddAccountingCheckoutByIndexIntegratedCommand
	(*AddAccountingCheckoutByIndexResponseIntegratedCommand)(nil),           // 1: AddAccountingCheckoutByIndex.AddAccountingCheckoutByIndexResponseIntegratedCommand
	(*CommitOrRollbackAddedAccountingCheckoutByIndexIntegratedCommand)(nil), // 2: AddAccountingCheckoutByIndex.CommitOrRollbackAddedAccountingCheckoutByIndexIntegratedCommand
	(*common.AccountDocumentDto)(nil),                                       // 3: Common.AccountDocumentDto
	(*common.Failure)(nil),                                                  // 4: Common.Failure
}
var file_AddAccountingCheckoutByIndex_proto_depIdxs = []int32{
	3, // 0: AddAccountingCheckoutByIndex.AddAccountingCheckoutByIndexIntegratedCommand.ArchiveDocumentsItem:type_name -> Common.AccountDocumentDto
	4, // 1: AddAccountingCheckoutByIndex.AddAccountingCheckoutByIndexResponseIntegratedCommand.Failure:type_name -> Common.Failure
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_AddAccountingCheckoutByIndex_proto_init() }
func file_AddAccountingCheckoutByIndex_proto_init() {
	if File_AddAccountingCheckoutByIndex_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_AddAccountingCheckoutByIndex_proto_rawDesc), len(file_AddAccountingCheckoutByIndex_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_AddAccountingCheckoutByIndex_proto_goTypes,
		DependencyIndexes: file_AddAccountingCheckoutByIndex_proto_depIdxs,
		MessageInfos:      file_AddAccountingCheckoutByIndex_proto_msgTypes,
	}.Build()
	File_AddAccountingCheckoutByIndex_proto = out.File
	file_AddAccountingCheckoutByIndex_proto_goTypes = nil
	file_AddAccountingCheckoutByIndex_proto_depIdxs = nil
}
