// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.2
// source: RemoveBranchCheckout.proto

package RemoveBranchCheckout

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	common "moneyx.golang.framework/integration/common"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RemoveArchiveCheckoutDocumentsResponseIntegratedCommand struct {
	state                      protoimpl.MessageState      `protogen:"open.v1"`
	BranchResponseIsSuccessful bool                        `protobuf:"varint,1,opt,name=BranchResponseIsSuccessful,proto3" json:"BranchResponseIsSuccessful,omitempty"`
	ArchiveDocumentsItem       []*common.BranchDocumentDto `protobuf:"bytes,2,rep,name=ArchiveDocumentsItem,proto3" json:"ArchiveDocumentsItem,omitempty"`
	Failure                    *common.Failure             `protobuf:"bytes,3,opt,name=Failure,proto3" json:"Failure,omitempty"`
	CorrelationId              string                      `protobuf:"bytes,4,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id                         string                      `protobuf:"bytes,5,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *RemoveArchiveCheckoutDocumentsResponseIntegratedCommand) Reset() {
	*x = RemoveArchiveCheckoutDocumentsResponseIntegratedCommand{}
	mi := &file_RemoveBranchCheckout_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveArchiveCheckoutDocumentsResponseIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveArchiveCheckoutDocumentsResponseIntegratedCommand) ProtoMessage() {}

func (x *RemoveArchiveCheckoutDocumentsResponseIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_RemoveBranchCheckout_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveArchiveCheckoutDocumentsResponseIntegratedCommand.ProtoReflect.Descriptor instead.
func (*RemoveArchiveCheckoutDocumentsResponseIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_RemoveBranchCheckout_proto_rawDescGZIP(), []int{0}
}

func (x *RemoveArchiveCheckoutDocumentsResponseIntegratedCommand) GetBranchResponseIsSuccessful() bool {
	if x != nil {
		return x.BranchResponseIsSuccessful
	}
	return false
}

func (x *RemoveArchiveCheckoutDocumentsResponseIntegratedCommand) GetArchiveDocumentsItem() []*common.BranchDocumentDto {
	if x != nil {
		return x.ArchiveDocumentsItem
	}
	return nil
}

func (x *RemoveArchiveCheckoutDocumentsResponseIntegratedCommand) GetFailure() *common.Failure {
	if x != nil {
		return x.Failure
	}
	return nil
}

func (x *RemoveArchiveCheckoutDocumentsResponseIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *RemoveArchiveCheckoutDocumentsResponseIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RemoveArchiveCheckoutDocumentsIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BranchId      string                 `protobuf:"bytes,1,opt,name=BranchId,proto3" json:"BranchId,omitempty"`
	CheckoutId    int32                  `protobuf:"varint,2,opt,name=CheckoutId,proto3" json:"CheckoutId,omitempty"`
	ManagerId     string                 `protobuf:"bytes,3,opt,name=ManagerId,proto3" json:"ManagerId,omitempty"`
	CorrelationId string                 `protobuf:"bytes,4,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,5,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveArchiveCheckoutDocumentsIntegratedCommand) Reset() {
	*x = RemoveArchiveCheckoutDocumentsIntegratedCommand{}
	mi := &file_RemoveBranchCheckout_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveArchiveCheckoutDocumentsIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveArchiveCheckoutDocumentsIntegratedCommand) ProtoMessage() {}

func (x *RemoveArchiveCheckoutDocumentsIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_RemoveBranchCheckout_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveArchiveCheckoutDocumentsIntegratedCommand.ProtoReflect.Descriptor instead.
func (*RemoveArchiveCheckoutDocumentsIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_RemoveBranchCheckout_proto_rawDescGZIP(), []int{1}
}

func (x *RemoveArchiveCheckoutDocumentsIntegratedCommand) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

func (x *RemoveArchiveCheckoutDocumentsIntegratedCommand) GetCheckoutId() int32 {
	if x != nil {
		return x.CheckoutId
	}
	return 0
}

func (x *RemoveArchiveCheckoutDocumentsIntegratedCommand) GetManagerId() string {
	if x != nil {
		return x.ManagerId
	}
	return ""
}

func (x *RemoveArchiveCheckoutDocumentsIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *RemoveArchiveCheckoutDocumentsIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CommitOrRollbackRemovedBranchCheckoutIntegratedCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsCommitted   bool                   `protobuf:"varint,1,opt,name=IsCommitted,proto3" json:"IsCommitted,omitempty"`
	CorrelationId string                 `protobuf:"bytes,2,opt,name=CorrelationId,proto3" json:"CorrelationId,omitempty"`
	Id            string                 `protobuf:"bytes,3,opt,name=Id,proto3" json:"Id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitOrRollbackRemovedBranchCheckoutIntegratedCommand) Reset() {
	*x = CommitOrRollbackRemovedBranchCheckoutIntegratedCommand{}
	mi := &file_RemoveBranchCheckout_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitOrRollbackRemovedBranchCheckoutIntegratedCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitOrRollbackRemovedBranchCheckoutIntegratedCommand) ProtoMessage() {}

func (x *CommitOrRollbackRemovedBranchCheckoutIntegratedCommand) ProtoReflect() protoreflect.Message {
	mi := &file_RemoveBranchCheckout_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitOrRollbackRemovedBranchCheckoutIntegratedCommand.ProtoReflect.Descriptor instead.
func (*CommitOrRollbackRemovedBranchCheckoutIntegratedCommand) Descriptor() ([]byte, []int) {
	return file_RemoveBranchCheckout_proto_rawDescGZIP(), []int{2}
}

func (x *CommitOrRollbackRemovedBranchCheckoutIntegratedCommand) GetIsCommitted() bool {
	if x != nil {
		return x.IsCommitted
	}
	return false
}

func (x *CommitOrRollbackRemovedBranchCheckoutIntegratedCommand) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *CommitOrRollbackRemovedBranchCheckoutIntegratedCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_RemoveBranchCheckout_proto protoreflect.FileDescriptor

const file_RemoveBranchCheckout_proto_rawDesc = "" +
	"\n" +
	"\x1aRemoveBranchCheckout.proto\x12\x14RemoveBranchCheckout\x1a\fCommon.proto\"\xa9\x02\n" +
	"7RemoveArchiveCheckoutDocumentsResponseIntegratedCommand\x12>\n" +
	"\x1aBranchResponseIsSuccessful\x18\x01 \x01(\bR\x1aBranchResponseIsSuccessful\x12M\n" +
	"\x14ArchiveDocumentsItem\x18\x02 \x03(\v2\x19.Common.BranchDocumentDtoR\x14ArchiveDocumentsItem\x12)\n" +
	"\aFailure\x18\x03 \x01(\v2\x0f.Common.FailureR\aFailure\x12$\n" +
	"\rCorrelationId\x18\x04 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x05 \x01(\tR\x02Id\"\xc1\x01\n" +
	"/RemoveArchiveCheckoutDocumentsIntegratedCommand\x12\x1a\n" +
	"\bBranchId\x18\x01 \x01(\tR\bBranchId\x12\x1e\n" +
	"\n" +
	"CheckoutId\x18\x02 \x01(\x05R\n" +
	"CheckoutId\x12\x1c\n" +
	"\tManagerId\x18\x03 \x01(\tR\tManagerId\x12$\n" +
	"\rCorrelationId\x18\x04 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x05 \x01(\tR\x02Id\"\x90\x01\n" +
	"6CommitOrRollbackRemovedBranchCheckoutIntegratedCommand\x12 \n" +
	"\vIsCommitted\x18\x01 \x01(\bR\vIsCommitted\x12$\n" +
	"\rCorrelationId\x18\x02 \x01(\tR\rCorrelationId\x12\x0e\n" +
	"\x02Id\x18\x03 \x01(\tR\x02IdBjZ8moneyx.golang.framework/integration/RemoveBranchCheckout\xaa\x02-Ariyana.Framework.Schema.RemoveBranchCheckoutb\x06proto3"

var (
	file_RemoveBranchCheckout_proto_rawDescOnce sync.Once
	file_RemoveBranchCheckout_proto_rawDescData []byte
)

func file_RemoveBranchCheckout_proto_rawDescGZIP() []byte {
	file_RemoveBranchCheckout_proto_rawDescOnce.Do(func() {
		file_RemoveBranchCheckout_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_RemoveBranchCheckout_proto_rawDesc), len(file_RemoveBranchCheckout_proto_rawDesc)))
	})
	return file_RemoveBranchCheckout_proto_rawDescData
}

var file_RemoveBranchCheckout_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_RemoveBranchCheckout_proto_goTypes = []any{
	(*RemoveArchiveCheckoutDocumentsResponseIntegratedCommand)(nil), // 0: RemoveBranchCheckout.RemoveArchiveCheckoutDocumentsResponseIntegratedCommand
	(*RemoveArchiveCheckoutDocumentsIntegratedCommand)(nil),         // 1: RemoveBranchCheckout.RemoveArchiveCheckoutDocumentsIntegratedCommand
	(*CommitOrRollbackRemovedBranchCheckoutIntegratedCommand)(nil),  // 2: RemoveBranchCheckout.CommitOrRollbackRemovedBranchCheckoutIntegratedCommand
	(*common.BranchDocumentDto)(nil),                                // 3: Common.BranchDocumentDto
	(*common.Failure)(nil),                                          // 4: Common.Failure
}
var file_RemoveBranchCheckout_proto_depIdxs = []int32{
	3, // 0: RemoveBranchCheckout.RemoveArchiveCheckoutDocumentsResponseIntegratedCommand.ArchiveDocumentsItem:type_name -> Common.BranchDocumentDto
	4, // 1: RemoveBranchCheckout.RemoveArchiveCheckoutDocumentsResponseIntegratedCommand.Failure:type_name -> Common.Failure
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_RemoveBranchCheckout_proto_init() }
func file_RemoveBranchCheckout_proto_init() {
	if File_RemoveBranchCheckout_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_RemoveBranchCheckout_proto_rawDesc), len(file_RemoveBranchCheckout_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_RemoveBranchCheckout_proto_goTypes,
		DependencyIndexes: file_RemoveBranchCheckout_proto_depIdxs,
		MessageInfos:      file_RemoveBranchCheckout_proto_msgTypes,
	}.Build()
	File_RemoveBranchCheckout_proto = out.File
	file_RemoveBranchCheckout_proto_goTypes = nil
	file_RemoveBranchCheckout_proto_depIdxs = nil
}
